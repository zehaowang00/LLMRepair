commit b59cdd9e2dc64d2db86b90982c200a78f2f85e50
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Jun 7 18:48:58 2012

    Don't fold arrays if they have side effects.
    Contributed by Robert Gust-Bardon
    Fixes issue 747
    
    R=acleung
    DELTA=16  (13 added, 0 deleted, 3 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4968
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2030 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
@@ -764,12 +764,16 @@
   public void testFoldGetElem() {
     fold("x = [,10][0]", "x = void 0");
     fold("x = [10, 20][0]", "x = 10");
     fold("x = [10, 20][1]", "x = 20");
     fold("x = [10, 20][0.5]", "",
         PeepholeFoldConstants.INVALID_GETELEM_INDEX_ERROR);
     fold("x = [10, 20][-1]",    "",
         PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
     fold("x = [10, 20][2]",     "",
         PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
+
+    foldSame("x = [foo(), 0][1]");
+    fold("x = [0, foo()][1]", "x = foo()");
+    foldSame("x = [0, foo()][0]");
   }
 

commit 653599e7c3922059a78958ea32b216ff9c42800e
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Mar 15 15:33:29 2011

    Fixup sparse array handling.
    - Replace sparse array annotation with EMPTY nodes.
    - Fix handling of arrays ending with an EMPTY node
    - Fix handling of arrays that are completely empty
    - Support PeepFoldConstant folding of arrays containing EMPTY nodes.
    
    R=acleung
    DELTA=163  (53 added, 92 deleted, 18 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=879
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@887 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
@@ -697,12 +697,12 @@
   public void testFoldGetElem() {
-    foldSame("x = [,10][0]"); // Should be "x = void 0";
+    fold("x = [,10][0]", "x = void 0");
     fold("x = [10, 20][0]", "x = 10");
     fold("x = [10, 20][1]", "x = 20");
     fold("x = [10, 20][0.5]", "",
         PeepholeFoldConstants.INVALID_GETELEM_INDEX_ERROR);
     fold("x = [10, 20][-1]",    "",
         PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
     fold("x = [10, 20][2]",     "",
         PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
   }
 

commit cf3fcbbc124d5b8948d7bef5215c45d80dbeae8e
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Feb 15 16:06:17 2011

    Correct handling of sparse arrays.
    
    R=nicksantos
    DELTA=37  (28 added, 2 deleted, 7 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=529
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@785 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
@@ -693,11 +697,12 @@
   public void testFoldGetElem() {
+    foldSame("x = [,10][0]"); // Should be "x = void 0";
     fold("x = [10, 20][0]", "x = 10");
     fold("x = [10, 20][1]", "x = 20");
     fold("x = [10, 20][0.5]", "",
         PeepholeFoldConstants.INVALID_GETELEM_INDEX_ERROR);
     fold("x = [10, 20][-1]",    "",
         PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
     fold("x = [10, 20][2]",     "",
         PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
   }
 

commit 9925370292834ea846727f1f9db76af0d40261df
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Jun 28 20:30:00 2010

    Change on 2010/06/28 12:25:08 by dcc
    
            Split up FoldConstants unit tests.
    
            R=acleung
            DELTA=2778  (1508 added, 1270 deleted, 0 changed)
    
    Change on 2010/06/28 15:47:46 by johnlenz
    
            Prevent COMMAs with more than two children.
    
            R=acleung
            DELTA=1  (1 added, 0 deleted, 0 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=44002
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@257 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
@@ -0,0 +508,11 @@
+  public void testFoldGetElem() {
+    fold("x = [10, 20][0]", "x = 10");
+    fold("x = [10, 20][1]", "x = 20");
+    fold("x = [10, 20][0.5]", "",
+        PeepholeFoldConstants.INVALID_GETELEM_INDEX_ERROR);
+    fold("x = [10, 20][-1]",    "",
+        PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
+    fold("x = [10, 20][2]",     "",
+        PeepholeFoldConstants.INDEX_OUT_OF_BOUNDS_ERROR);
+  }
+
