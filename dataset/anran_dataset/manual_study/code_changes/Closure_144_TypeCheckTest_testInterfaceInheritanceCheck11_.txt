commit 465282f1ca28a208b06c47b55fd292d4631c55da
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Jun 22 20:19:37 2010

    Change on 2010/06/22 by nicksantos
    
            Inferred return types.
            Fixes issue 143.
            I eventually decided that it was wrong for the subtype's method
            to affect the supertype's method, since this will make incremental
            compilation a lot harder in the long run.
    
            R=moedinger
            DELTA=481  (313 added, 38 deleted, 130 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=34007
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@249 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypeCheckTest.java b/test/com/google/javascript/jscomp/TypeCheckTest.java
--- a/test/com/google/javascript/jscomp/TypeCheckTest.java
+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java
@@ -5560,13 +5636,13 @@
   public void testInterfaceInheritanceCheck11() throws Exception {
     testTypes(
         "/** @constructor */function Super() {};" +
         "/** @param {number} bar */Super.prototype.foo = function(bar) {};" +
         "/** @constructor\n @extends {Super} */function Sub() {};" +
         "/** @override\n  @param {string} bar */Sub.prototype.foo =\n" +
         "function(bar) {};",
         "mismatch of the foo property type and the type of the property it " +
         "overrides from superclass Super\n" +
-        "original: function (this:Super, number): ?\n" +
-        "override: function (this:Sub, string): ?");
+        "original: function (this:Super, number): undefined\n" +
+        "override: function (this:Sub, string): undefined");
   }
 

commit 77b7c78d4aeeb6471f2f668a06c0f61a68f95ccd
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Jan 4 15:18:21 2010

    Add more unit tests for type checking.
    
    Add phase optimization.
    
    Fix a type inference bug.
    
    String.prototype.split may not return null.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@55 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypeCheckTest.java b/test/com/google/javascript/jscomp/TypeCheckTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java
@@ -0,0 +5244,13 @@
+  public void testInterfaceInheritanceCheck11() throws Exception {
+    testTypes(
+        "/** @constructor */function Super() {};" +
+        "/** @param {number} bar */Super.prototype.foo = function(bar) {};" +
+        "/** @constructor\n @extends {Super} */function Sub() {};" +
+        "/** @override\n  @param {string} bar */Sub.prototype.foo =\n" +
+        "function(bar) {};",
+        "mismatch of the foo property type and the type of the property it " +
+        "overrides from superclass Super\n" +
+        "original: function (this:Super, number): ?\n" +
+        "override: function (this:Sub, string): ?");
+  }
+
