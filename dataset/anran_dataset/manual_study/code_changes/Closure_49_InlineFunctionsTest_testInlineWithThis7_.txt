commit 1a7ba5cb0111dd3ed9afd9691cab39b3c341e408
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Nov 3 17:10:49 2011

    Modify normalization to distinguish function expression names from
    parameters and local variables.
    Fixes issue 539.
    
    R=nicksantos
    DELTA=246  (61 added, 11 deleted, 174 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3615
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1552 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -1892,10 +1892,10 @@
   public void testInlineWithThis7() {
     assumeStrictThis = true;
     // In strict mode, "this" is never coerced so we can use the provided value.
     test("function f(a){a=1;this} f.call();",
-         "{var a$$inline_1=void 0; a$$inline_1=1; void 0;}");
+         "{var a$$inline_0=void 0; a$$inline_0=1; void 0;}");
     test("function f(a){a=1;this} f.call(x, x);",
-         "{var a$$inline_1=x; a$$inline_1=1; x;}");
+         "{var a$$inline_0=x; a$$inline_0=1; x;}");
   }
 
   // http://en.wikipedia.org/wiki/Fixed_point_combinator#Y_combinator

commit cc4ec1a70e6fa02bda751582c3902b3c19f85bbb
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Jun 16 20:29:12 2011

    Automated g4 rollback.
    
    *** Reason for rollback ***
    
    Fixed invalid "this" replacement within inner functions.
    
    *** Original change description ***
    
    Automated g4 rollback.
    
    *** Reason for rollback ***
    
    Breaks things
    
    *** Original change description ***
    
    When it is possible to make the ES5 Strict mode assumptions about a
    function's "this" it is easier to inline a function referencing "this".
    Add "CompilerOption.assumeStrictThis" and take advantage of it during
    function inlining.
    
    R=moedinger
    DELTA=263  (223 added, 4 deleted, 36 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=2320
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1188 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -1629,1 +1702,10 @@
+  public void testInlineWithThis7() {
+    assumeStrictThis = true;
+    // In strict mode, "this" is never coerced so we can use the provided value.
+    test("function f(a){a=1;this} f.call();",
+         "{var a$$inline_1=void 0; a$$inline_1=1; void 0;}");
+    test("function f(a){a=1;this} f.call(x, x);",
+         "{var a$$inline_1=x; a$$inline_1=1; x;}");
+  }
+
   // http://en.wikipedia.org/wiki/Fixed_point_combinator#Y_combinator

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -0,0 +1424,1 @@
+  // http://en.wikipedia.org/wiki/Fixed_point_combinator#Y_combinator
