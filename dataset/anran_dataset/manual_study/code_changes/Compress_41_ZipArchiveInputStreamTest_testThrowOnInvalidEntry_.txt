commit f015344879f1bc3505bc616fc7ae517cf9f60838
Author: Mike Mole <michael.mole@lookout.com>
Date:   Fri Oct 28 08:03:48 2016

    COMPRESS-367 Throw ZipException on invalid entry with ZipArchiveInputStream
    
    ZipArchiveInputStream.getNextZipEntry() throws a ZipException rather
    than returning null if an invalid entry is encountered in order to
    differentiate between "no more entries" and "error" conditions.

diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
@@ -230,8 +236,23 @@
+    public void testThrowOnInvalidEntry() throws Exception {
+        final InputStream is = ZipArchiveInputStreamTest.class
+                .getResourceAsStream("/invalid-zip.zip");
+        final ZipArchiveInputStream zip = new ZipArchiveInputStream(is);
+
+        try {
+            zip.getNextZipEntry();
+            fail("IOException expected");
+        } catch (ZipException expected) {
+            assertTrue(expected.getMessage().contains("Unexpected record signature"));
+        } finally {
+            zip.close();
+        }
+    }
+
     private static byte[] readEntry(ZipArchiveInputStream zip, ZipArchiveEntry zae) throws IOException {
         final int len = (int)zae.getSize();
         final byte[] buff = new byte[len];
         zip.read(buff, 0, len);
 
         return buff;
     }
 }

commit 658812c85fe762e361c998161cfb61bd477e1b24
Author: Mike Mole <michael.mole@lookout.com>
Date:   Fri Aug 19 09:08:42 2016

    ZipArchiveInputStream.closeEntry fails to advance
    
    Properly advances to next entry upon calling closeEntry when there
    are extra junk bytes after the compressed data section of a
    zip entry. This applies to the ZipArchiveInputStream implementation.

diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
@@ -203,1 +230,8 @@
+    private static byte[] readEntry(ZipArchiveInputStream zip, ZipArchiveEntry zae) throws IOException {
+        final int len = (int)zae.getSize();
+        final byte[] buff = new byte[len];
+        zip.read(buff, 0, len);
+
+        return buff;
+    }
 }

commit e2cf412a7856a7a9f314c3927df2f5a04f42177d
Author: Stefan Bodewig <bodewig@apache.org>
Date:   Fri Dec 28 01:53:21 2012

    COMPRESS-189 Inflater may return 0 if it needs more input, we don't handle this case properly
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426417 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
@@ -52,1 +84,1 @@
-}
\ No newline at end of file
+}

commit c75c10faae27781aeb51713f42153cad1fd242a4
Author: Stefan Bodewig <bodewig@apache.org>
Date:   Tue Feb 28 00:00:26 2012

    add workaround for broken implementations that use backslashes rather than slashes in file names.  COMPRESS-176
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1294460 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
--- /dev/null
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java
@@ -0,0 +51,1 @@
+}
\ No newline at end of file
