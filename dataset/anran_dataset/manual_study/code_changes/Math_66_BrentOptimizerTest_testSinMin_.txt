commit 76fcbc838c0f27d9b029c1f283390cb4f47f8895
Author: Gilles Sadowski <erans@apache.org>
Date:   Wed Jul 28 08:03:41 2010

    MATH-395: Another bug uncovered; all things being equal, the code now behaves
    like the Puthon implementation.
    MATH-397: Modified "BrentOptimizer" following the changes in
    "AbstractUnivariateRealOptimizer".
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@980032 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
@@ -40,31 +41,31 @@
     public void testSinMin() throws MathException {
         UnivariateRealFunction f = new SinFunction();
         UnivariateRealOptimizer minimizer = new BrentOptimizer();
         minimizer.setMaxEvaluations(200);
         assertEquals(200, minimizer.getMaxEvaluations());
         try {
             minimizer.getResult();
             fail("an exception should have been thrown");
         } catch (NoDataException ise) {
             // expected
         } catch (Exception e) {
             fail("wrong exception caught");
         }
-        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
+        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
-        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
+        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
         assertTrue(minimizer.getEvaluations()    <= 100);
-        assertTrue(minimizer.getEvaluations()    >=  30);
-        minimizer.setMaxEvaluations(50);
+        assertTrue(minimizer.getEvaluations()    >=  15);
+        minimizer.setMaxEvaluations(10);
         try {
             minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
             fail("an exception should have been thrown");
         } catch (FunctionEvaluationException fee) {
             // expected
         } catch (Exception e) {
             fail("wrong exception caught");
         }
     }
 
     @Test

commit 7bbad398dd4da51c933414be9a17b07179dee5e4
Author: Gilles Sadowski <erans@apache.org>
Date:   Wed Jul 28 06:27:02 2010

    MATH-397. Modified "AbstractUnivariateRealOptimizer" so that its usage is
    more similar to what is done in package "optimization.general".
    Deprecated many methods as a consequence of the new layout.
    New utility methods in "ConvergingAlgorithmImpl".
    Temporary workaround in "BrentOptimizer" (requirement from base class) to
    avoid committing two issues at the same time...
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@980013 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
@@ -39,31 +40,31 @@
     public void testSinMin() throws MathException {
         UnivariateRealFunction f = new SinFunction();
         UnivariateRealOptimizer minimizer = new BrentOptimizer();
         minimizer.setMaxEvaluations(200);
         assertEquals(200, minimizer.getMaxEvaluations());
         try {
             minimizer.getResult();
             fail("an exception should have been thrown");
-        } catch (IllegalStateException ise) {
+        } catch (NoDataException ise) {
             // expected
         } catch (Exception e) {
             fail("wrong exception caught");
         }
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
         assertTrue(minimizer.getEvaluations()    <= 100);
         assertTrue(minimizer.getEvaluations()    >=  30);
         minimizer.setMaxEvaluations(50);
         try {
             minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
             fail("an exception should have been thrown");
         } catch (FunctionEvaluationException fee) {
             // expected
         } catch (Exception e) {
             fail("wrong exception caught");
         }
     }
 
     @Test

commit 65c7c9697457b326f149555166f0e2aae192a609
Author: Gilles Sadowski <erans@apache.org>
Date:   Mon Jul 26 08:17:45 2010

    Fixed bugs in "BrentOptimizer".
    Renamed "BrentMinimizerTest" to "BrentOptimizerTest".
    Modified "MultiStartUnivariateRealOptimizerTest" because it uses
    "BrentOptimizer" as the underlying optimizer, and so was affected
    by the changes.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@979257 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java b/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
@@ -39,31 +40,31 @@
     public void testSinMin() throws MathException {
         UnivariateRealFunction f = new SinFunction();
         UnivariateRealOptimizer minimizer = new BrentOptimizer();
         minimizer.setMaxEvaluations(200);
         assertEquals(200, minimizer.getMaxEvaluations());
         try {
             minimizer.getResult();
             fail("an exception should have been thrown");
         } catch (IllegalStateException ise) {
             // expected
         } catch (Exception e) {
             fail("wrong exception caught");
         }
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
         assertTrue(minimizer.getEvaluations()    <= 100);
-        assertTrue(minimizer.getEvaluations()    >=  90);
+        assertTrue(minimizer.getEvaluations()    >=  30);
         minimizer.setMaxEvaluations(50);
         try {
             minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
             fail("an exception should have been thrown");
         } catch (FunctionEvaluationException fee) {
             // expected
         } catch (Exception e) {
             fail("wrong exception caught");
         }
     }
 
     @Test

commit 6fff3ab1e3e36d53156691bb6ebe18c58d1e2fe9
Author: Luc Maisonobe <luc@apache.org>
Date:   Sat Jul 25 12:26:23 2009

    improved test coverage
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@797791 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java b/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
--- a/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
+++ b/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
@@ -37,18 +38,31 @@
     public void testSinMin() throws MathException {
         UnivariateRealFunction f = new SinFunction();
         UnivariateRealOptimizer minimizer = new BrentOptimizer();
+        minimizer.setMaxEvaluations(200);
+        assertEquals(200, minimizer.getMaxEvaluations());
         try {
             minimizer.getResult();
             fail("an exception should have been thrown");
         } catch (IllegalStateException ise) {
             // expected
         } catch (Exception e) {
             fail("wrong exception caught");
         }
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
+        assertTrue(minimizer.getEvaluations()    <= 100);
+        assertTrue(minimizer.getEvaluations()    >=  90);
+        minimizer.setMaxEvaluations(50);
+        try {
+            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
+            fail("an exception should have been thrown");
+        } catch (FunctionEvaluationException fee) {
+            // expected
+        } catch (Exception e) {
+            fail("wrong exception caught");
+        }
     }
 
     @Test

commit 1c538d830b141fa44dc29f69e4343f6bfcf74099
Author: Luc Maisonobe <luc@apache.org>
Date:   Sat Jul 25 12:21:52 2009

    improved test coverage
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@797790 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java b/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
--- a/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
+++ b/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
@@ -45,10 +37,18 @@
     public void testSinMin() throws MathException {
         UnivariateRealFunction f = new SinFunction();
         UnivariateRealOptimizer minimizer = new BrentOptimizer();
+        try {
+            minimizer.getResult();
+            fail("an exception should have been thrown");
+        } catch (IllegalStateException ise) {
+            // expected
+        } catch (Exception e) {
+            fail("wrong exception caught");
+        }
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
         assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
     }
 
-   public void testQuinticMin() throws MathException {
+    @Test

commit 4029aa31c6be8edd61d962add05e2d3aedafe593
Author: Luc Maisonobe <luc@apache.org>
Date:   Tue Mar 24 18:14:03 2009

    updated univariate algorithms with latest interfaces definitions
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758056 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java b/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
--- a/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
+++ b/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java
@@ -43,10 +45,10 @@
     public void testSinMin() throws MathException {
         UnivariateRealFunction f = new SinFunction();
-        UnivariateRealMinimizer minimizer = new BrentMinimizer();
-        assertEquals(3 * Math.PI / 2, minimizer.minimize(f, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
+        UnivariateRealOptimizer minimizer = new BrentOptimizer();
+        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
-        assertEquals(3 * Math.PI / 2, minimizer.minimize(f, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
+        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
         assertTrue(minimizer.getIterationCount() <= 50);
     }
 
    public void testQuinticMin() throws MathException {

commit 85387dc2d55dbbcc54063ff1ec2ab1f909bef7a4
Author: Luc Maisonobe <luc@apache.org>
Date:   Sun Jan 18 10:39:35 2009

    Added a new minimization package with an implementation of the Brent algorithm
    contributed by Gilles Sadowski.
    The implementation needs some testing as it seems to never use the parabola fitting
    and only relying on golden section. This may be due to the refactoring I did on
    the original patch.
    Jira: MATH-177
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@735475 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/math/analysis/minimization/BrentMinimizerTest.java b/src/test/org/apache/commons/math/analysis/minimization/BrentMinimizerTest.java
--- /dev/null
+++ b/src/test/org/apache/commons/math/analysis/minimization/BrentMinimizerTest.java
@@ -0,0 +43,10 @@
+    public void testSinMin() throws MathException {
+        UnivariateRealFunction f = new SinFunction();
+        UnivariateRealMinimizer minimizer = new BrentMinimizer();
+        assertEquals(3 * Math.PI / 2, minimizer.minimize(f, 4, 5), 70 * minimizer.getAbsoluteAccuracy());
+        assertTrue(minimizer.getIterationCount() <= 50);
+        assertEquals(3 * Math.PI / 2, minimizer.minimize(f, 1, 5), 70 * minimizer.getAbsoluteAccuracy());
+        assertTrue(minimizer.getIterationCount() <= 50);
+    }
+
+   public void testQuinticMin() throws MathException {
