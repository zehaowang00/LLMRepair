commit 87b154f89cba3c67045cd7a783b79231d0630a4c
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Mar 27 11:38:10 2012

    More recursion unrolling
    Fixes issue 691
    
    R=johnlenz
    DELTA=78  (54 added, 21 deleted, 3 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4425
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1849 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CodePrinterTest.java b/test/com/google/javascript/jscomp/CodePrinterTest.java
--- a/test/com/google/javascript/jscomp/CodePrinterTest.java
+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java
@@ -1375,0 +1382,18 @@
+  public void testManyAdds() {
+    int numAdds = 10000;
+    List<String> numbers = Lists.newArrayList("0", "1");
+    Node current = new Node(Token.ADD, Node.newNumber(0), Node.newNumber(1));
+    for (int i = 2; i < numAdds; i++) {
+      current = new Node(Token.ADD, current);
+
+      // 1000 is printed as 1E3, and screws up our test.
+      int num = i % 1000;
+      numbers.add(String.valueOf(num));
+      current.addChildToBack(Node.newNumber(num));
+    }
+
+    String expected = Joiner.on("+").join(numbers);
+    String actual = printNode(current).replace("\n", "");
+    assertEquals(expected, actual);
+  }
+
