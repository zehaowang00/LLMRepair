commit c3cbe1b64e7f66ff9f9b53f1388eb135e6693187
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Tue Apr 5 17:03:04 2016

    Support UTF-16 and -32 BOMs
    
    Fixes #695

diff --git a/src/test/java/org/jsoup/helper/DataUtilTest.java b/src/test/java/org/jsoup/helper/DataUtilTest.java
index d66a07bc..5555ea11 100644
--- a/src/test/java/org/jsoup/helper/DataUtilTest.java
+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java
@@ -1,6 +1,10 @@
 package org.jsoup.helper;
 
+import java.io.File;
+import java.io.IOException;
 import java.io.UnsupportedEncodingException;
+
+import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.parser.Parser;
 import org.junit.Test;
@@ -8,6 +12,7 @@
 import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
 
+import static org.jsoup.integration.ParseTest.getFile;
 import static org.junit.Assert.*;
 
 public class DataUtilTest {
@@ -95,4 +100,28 @@ public void wrongMetaCharsetFallback() {
             fail(ex.getMessage());
         }
     }
+
+    @Test
+    public void supportsBOMinFiles() throws IOException {
+        // test files from http://www.i18nl10n.com/korean/utftest/
+        File in = getFile("/bomtests/bom_utf16be.html");
+        Document doc = Jsoup.parse(in, null, "http://example.com");
+        assertTrue(doc.title().contains("UTF-16BE"));
+        assertTrue(doc.text().contains("ê°ê°ê°ê°ê°ê°"));
+
+        in = getFile("/bomtests/bom_utf16le.html");
+        doc = Jsoup.parse(in, null, "http://example.com");
+        assertTrue(doc.title().contains("UTF-16LE"));
+        assertTrue(doc.text().contains("ê°ê°ê°ê°ê°ê°"));
+
+        in = getFile("/bomtests/bom_utf32be.html");
+        doc = Jsoup.parse(in, null, "http://example.com");
+        assertTrue(doc.title().contains("UTF-32BE"));
+        assertTrue(doc.text().contains("ê°ê°ê°ê°ê°ê°"));
+
+        in = getFile("/bomtests/bom_utf32le.html");
+        doc = Jsoup.parse(in, null, "http://example.com");
+        assertTrue(doc.title().contains("UTF-32LE"));
+        assertTrue(doc.text().contains("ê°ê°ê°ê°ê°ê°"));
+    }
 }
