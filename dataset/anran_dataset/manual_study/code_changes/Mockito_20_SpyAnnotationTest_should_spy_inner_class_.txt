commit 9c72b9bea1913605eea9969f759afbf8d2b98702
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Tue Dec 2 03:26:45 2014

    Tidied-up the tests and behavior
    
    Changed the code so that we don't allow creating spies for interfaces (this is how it worked before recent changes, so it is a change that makes Mockito more backwards compatible). Tidied up tests and test names. Tightened test coverage.

diff --git a/test/org/mockitousage/annotation/SpyAnnotationTest.java b/test/org/mockitousage/annotation/SpyAnnotationTest.java
--- a/test/org/mockitousage/annotation/SpyAnnotationTest.java
+++ b/test/org/mockitousage/annotation/SpyAnnotationTest.java
@@ -110,18 +124,18 @@
-    public void spyInnerClass() throws Exception {
+    public void should_spy_inner_class() throws Exception {
     	 
      class WithMockAndSpy {
     		@Spy private InnerStrength strength;
     		@Mock private List<String> list;
 
             abstract class InnerStrength {
             	private final String name;
 
             	InnerStrength() {
             		// Make sure that @Mock fields are always injected before @Spy fields.
             		assertNotNull(list);
             		// Make sure constructor is indeed called.
             		this.name = "inner";
             	}
             	
             	abstract String strength();
             	

commit 85c4ff802a8f307ad6cdd7bf233057c3baec2b89
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Tue Dec 2 02:23:56 2014

    Tidy-up, tweaked exception messages.

diff --git a/test/org/mockitousage/annotation/SpyAnnotationTest.java b/test/org/mockitousage/annotation/SpyAnnotationTest.java
--- a/test/org/mockitousage/annotation/SpyAnnotationTest.java
+++ b/test/org/mockitousage/annotation/SpyAnnotationTest.java
@@ -108,23 +109,18 @@
-    public void spyInnerClass() throws Exception {
-    	 
-     class WithMockAndSpy {
-    		@Spy private InnerStrength strength;
-    		@Mock private List<String> list;
-
-            abstract class InnerStrength {
-            	private final String name;
-
-            	InnerStrength() {
-            		// Make sure that @Mock fields are always injected before @Spy fields.
-            		assertNotNull(list);
-            		// Make sure constructor is indeed called.
-            		this.name = "inner";
-            	}
-            	
-            	abstract String strength();
-            	
-            	String fullStrength() {
-            		return name + " " + strength();
-            	}
-            }
-    	}
+    public void spyInnerClass() throws Exception {
+    	 
+     class WithMockAndSpy {
+    		@Spy private InnerStrength strength;
+    		@Mock private List<String> list;
+
+            abstract class InnerStrength {
+            	private final String name;
+
+            	InnerStrength() {
+            		// Make sure that @Mock fields are always injected before @Spy fields.
+            		assertNotNull(list);
+            		// Make sure constructor is indeed called.
+            		this.name = "inner";
+            	}
+            	
+            	abstract String strength();
+            	

commit e007e01e0a3a1ea259a8fb290cc164985be12572
Author: fluentfuture <benyu@benyu-macbookpro2.roam.corp.google.com>
Date:   Sun Nov 23 00:16:35 2014

    Support @Spy AbstractClass/Interface
    
    Fixes #126

diff --git a/test/org/mockitousage/annotation/SpyAnnotationTest.java b/test/org/mockitousage/annotation/SpyAnnotationTest.java
--- a/test/org/mockitousage/annotation/SpyAnnotationTest.java
+++ b/test/org/mockitousage/annotation/SpyAnnotationTest.java
@@ -103,12 +104,23 @@
-    public void shouldFailIfTypeIsInnerClass() throws Exception {
-		class FailingSpy {
-			@Spy private TheInnerClass spyTypeIsInner;
-            class TheInnerClass { }
-		}
-
-        try {
-            MockitoAnnotations.initMocks(new FailingSpy());
-            fail();
-        } catch (MockitoException e) {
-            Assertions.assertThat(e.getMessage()).contains("inner class");
-        }
+    public void spyInnerClass() throws Exception {
+    	 
+     class WithMockAndSpy {
+    		@Spy private InnerStrength strength;
+    		@Mock private List<String> list;
+
+            abstract class InnerStrength {
+            	private final String name;
+
+            	InnerStrength() {
+            		// Make sure that @Mock fields are always injected before @Spy fields.
+            		assertNotNull(list);
+            		// Make sure constructor is indeed called.
+            		this.name = "inner";
+            	}
+            	
+            	abstract String strength();
+            	
+            	String fullStrength() {
+            		return name + " " + strength();
+            	}
+            }
+    	}

commit 4a5eb957b161413d61552022286f4c1b51743539
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri Oct 29 14:59:22 2010

    Made some exception messages more descriptive

diff --git a/test/org/mockitousage/annotation/SpyAnnotationTest.java b/test/org/mockitousage/annotation/SpyAnnotationTest.java
--- a/test/org/mockitousage/annotation/SpyAnnotationTest.java
+++ b/test/org/mockitousage/annotation/SpyAnnotationTest.java
@@ -64,7 +77,12 @@
     public void shouldFailIfTypeIsInnerClass() throws Exception {
 		class FailingSpy {
-			@Spy private List spyTypeIsInner;
+			@Spy private TheInnerClass spyTypeIsInner;
             class TheInnerClass { }
 		}
 
-		MockitoAnnotations.initMocks(new FailingSpy());
+        try {
+            MockitoAnnotations.initMocks(new FailingSpy());
+            fail();
+        } catch (MockitoException e) {
+            Assertions.assertThat(e.getMessage()).contains("inner class");
+        }

commit 93863606a5b4d3f496467cb9e62016cef354bb56
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Mon Oct 18 12:15:05 2010

    issue209 : @InjectMocks and @Spy annotated field initialization

diff --git a/test/org/mockitousage/annotation/SpyAnnotationTest.java b/test/org/mockitousage/annotation/SpyAnnotationTest.java
--- a/test/org/mockitousage/annotation/SpyAnnotationTest.java
+++ b/test/org/mockitousage/annotation/SpyAnnotationTest.java
@@ -37,6 +64,7 @@
-            public List getMySpy() {
-				return mySpy;
-			}
+    public void shouldFailIfTypeIsInnerClass() throws Exception {
+		class FailingSpy {
+			@Spy private List spyTypeIsInner;
+            class TheInnerClass { }
 		}
 
 		MockitoAnnotations.initMocks(new FailingSpy());

commit 419bdfb4ecbbbd76ee888d3b10179ba24c61ddff
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Wed Feb 24 18:32:34 2010

    Fixed warnings and stuff
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401866

diff --git a/test/org/mockitousage/basicapi/SpyAnnotationTest.java b/test/org/mockitousage/basicapi/SpyAnnotationTest.java
--- a/test/org/mockitousage/basicapi/SpyAnnotationTest.java
+++ b/test/org/mockitousage/basicapi/SpyAnnotationTest.java
@@ -32,6 +35,6 @@
-			public List getMySpy() {
+            public List getMySpy() {
 				return mySpy;
 			}
 		}
 
 		MockitoAnnotations.initMocks(new FailingSpy());

commit 32755003f012e4369c3bb812a1f6e83b4223bf1d
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Sat Feb 20 14:51:11 2010

    Fixed issue 165
    Added @Spy annotation
    Added configurability to @Mock annotation
    Added @InjectMock feature to inject mocks to tested instance
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401858

diff --git a/test/org/mockitousage/basicapi/SpyAnnotationTest.java b/test/org/mockitousage/basicapi/SpyAnnotationTest.java
--- /dev/null
+++ b/test/org/mockitousage/basicapi/SpyAnnotationTest.java
@@ -0,0 +32,6 @@
+			public List getMySpy() {
+				return mySpy;
+			}
+		}
+
+		MockitoAnnotations.initMocks(new FailingSpy());
