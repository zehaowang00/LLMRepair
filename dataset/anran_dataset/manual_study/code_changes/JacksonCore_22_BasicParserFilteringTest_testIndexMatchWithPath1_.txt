commit 6feec20c842586056aa5b19c402b26be08c88ca3
Author: Rafal Foltynski <r.foltynski@gmail.com>
Date:   Sat Jun 3 23:32:03 2017

    Fix #208: FilteringParserDelegate match count support

diff --git a/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
--- a/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
+++ b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
@@ -158,14 +226,16 @@
     public void testIndexMatchWithPath1() throws Exception
     {
-        JsonParser p = new FilteringParserDelegate(JSON_F.createParser(SIMPLE),
+        FilteringParserDelegate p = new FilteringParserDelegate(JSON_F.createParser(SIMPLE),
                 new IndexMatchFilter(1), true, true);
         String result = readAndWrite(JSON_F, p);
         assertEquals(aposToQuotes("{'array':[2]}"), result);
+        assertEquals(1, p.getMatchCount());
 
         p = new FilteringParserDelegate(JSON_F.createParser(SIMPLE),
                 new IndexMatchFilter(0), true, true);
         result = readAndWrite(JSON_F, p);
         assertEquals(aposToQuotes("{'array':[1]}"), result);
+        assertEquals(1, p.getMatchCount());
     }
 
     @SuppressWarnings("resource")

commit e183d16b2f03c06217f221f57ac35b6001d74d3f
Author: Cowtowncoder <tatu.saloranta@iki.fi>
Date:   Wed Apr 29 19:05:00 2015

    More testing for parser/filter comb

diff --git a/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
@@ -0,0 +141,14 @@
+    public void testIndexMatchWithPath1() throws Exception
+    {
+        JsonParser p = new FilteringParserDelegate(JSON_F.createParser(SIMPLE),
+                new IndexMatchFilter(1), true, true);
+        String result = readAndWrite(JSON_F, p);
+        assertEquals(aposToQuotes("{'array':[2]}"), result);
+
+        p = new FilteringParserDelegate(JSON_F.createParser(SIMPLE),
+                new IndexMatchFilter(0), true, true);
+        result = readAndWrite(JSON_F, p);
+        assertEquals(aposToQuotes("{'array':[1]}"), result);
+    }
+
+    @SuppressWarnings("resource")
