commit 35e4e4fb6848ddfa3878270523f3f9336ae7f9b8
Author: Sebastian Bazley <sebb@apache.org>
Date:   Wed Jun 2 07:00:25 2010

    COMPRESS-113:  TarArchiveEntry.parseTarHeader() includes the trailing space/NUL when parsing the octal size
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@950489 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
@@ -53,14 +61,52 @@
+    public void testParseOctalInvalid() throws Exception{
+        byte [] buffer;
+        buffer=new byte[0]; // empty byte array
+        try {
+            TarUtils.parseOctal(buffer,0, buffer.length);
+            fail("Expected IllegalArgumentException - should be at least 2 bytes long");
+        } catch (IllegalArgumentException expected) {
+        }
+        buffer=new byte[]{0}; // 1-byte array
+        try {
+            TarUtils.parseOctal(buffer,0, buffer.length);
+            fail("Expected IllegalArgumentException - should be at least 2 bytes long");
+        } catch (IllegalArgumentException expected) {
+        }
+        buffer=new byte[]{0,0,' '}; // not all NULs
+        try {
+            TarUtils.parseOctal(buffer,0, buffer.length);
+            fail("Expected IllegalArgumentException - not all NULs");
+        } catch (IllegalArgumentException expected) {
+        }
+        buffer=new byte[]{' ',0,0,0}; // not all NULs
+        try {
+            TarUtils.parseOctal(buffer,0, buffer.length);
+            fail("Expected IllegalArgumentException - not all NULs");
+        } catch (IllegalArgumentException expected) {
+        }
         buffer = "abcdef ".getBytes("UTF-8"); // Invalid input
         try {
             TarUtils.parseOctal(buffer,0, buffer.length);
             fail("Expected IllegalArgumentException");
         } catch (IllegalArgumentException expected) {
         }
-        buffer = "77777777777".getBytes("UTF-8"); // Invalid input
+        buffer = "77777777777".getBytes("UTF-8"); // Invalid input - no trailer
         try {
             TarUtils.parseOctal(buffer,0, buffer.length);
-            fail("Expected IllegalArgumentException");
+            fail("Expected IllegalArgumentException - no trailer");
+        } catch (IllegalArgumentException expected) {
+        }
+        buffer = " 0 07 ".getBytes("UTF-8"); // Invalid - embedded space
+        try {
+            TarUtils.parseOctal(buffer,0, buffer.length);
+            fail("Expected IllegalArgumentException - embedded space");
+        } catch (IllegalArgumentException expected) {
+        }
+        buffer = " 0\00007 ".getBytes("UTF-8"); // Invalid - embedded NUL
+        try {
+            TarUtils.parseOctal(buffer,0, buffer.length);
+            fail("Expected IllegalArgumentException - embedded NUL");
         } catch (IllegalArgumentException expected) {
         }
     }
-    
+

commit d7398f46ccd552eb315d94bf652cc264ea21799a
Author: Sebastian Bazley <sebb@apache.org>
Date:   Tue Jun 1 12:58:22 2010

    Must have trailing space/NUL
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@950163 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
@@ -53,8 +53,14 @@
-        buffer = "abcdef".getBytes("UTF-8"); // Invalid input
+        buffer = "abcdef ".getBytes("UTF-8"); // Invalid input
+        try {
+            TarUtils.parseOctal(buffer,0, buffer.length);
+            fail("Expected IllegalArgumentException");
+        } catch (IllegalArgumentException expected) {
+        }
+        buffer = "77777777777".getBytes("UTF-8"); // Invalid input
         try {
             TarUtils.parseOctal(buffer,0, buffer.length);
             fail("Expected IllegalArgumentException");
         } catch (IllegalArgumentException expected) {
         }
     }
     

commit 4ca99827695a09065b8b73397d3abde7f7008f47
Author: Sebastian Bazley <sebb@apache.org>
Date:   Tue Jun 1 11:19:53 2010

    Fixup tests - should only allow at most 11 octal digits in 12-byte buffer
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@950111 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
@@ -53,18 +53,8 @@
-        value = TarUtils.parseOctal(buffer,0, 11);
-        assertEquals(077777777777L, value);
-        value = TarUtils.parseOctal(buffer,0, 12);
-        assertEquals(0777777777777L, value);
-        buffer[11]=' ';
-        value = TarUtils.parseOctal(buffer,0, 11);
-        assertEquals(077777777777L, value);
-        buffer[11]=0;
-        value = TarUtils.parseOctal(buffer,0, 11);
-        assertEquals(077777777777L, value);
-        fillBuff(buffer, "abcdef"); // Invalid input
+        buffer = "abcdef".getBytes("UTF-8"); // Invalid input
         try {
-            value = TarUtils.parseOctal(buffer,0, 11);
+            TarUtils.parseOctal(buffer,0, buffer.length);
             fail("Expected IllegalArgumentException");
         } catch (IllegalArgumentException expected) {
         }
     }
     

commit 1d5567004306b3c6019b4e828f811220fc3fe990
Author: Sebastian Bazley <sebb@apache.org>
Date:   Thu Apr 2 14:45:02 2009

    Rename TarUtils.getXXX methods as formatXXX
    Update Javadoc
    Throw IllegalArgumentException if value won't fit in buffer
    Treat long values as unsigned
    Use String instead of StringBuffer for names etc
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@761372 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
@@ -53,15 +53,18 @@
         value = TarUtils.parseOctal(buffer,0, 11);
         assertEquals(077777777777L, value);
         value = TarUtils.parseOctal(buffer,0, 12);
         assertEquals(0777777777777L, value);
         buffer[11]=' ';
         value = TarUtils.parseOctal(buffer,0, 11);
         assertEquals(077777777777L, value);
         buffer[11]=0;
         value = TarUtils.parseOctal(buffer,0, 11);
         assertEquals(077777777777L, value);
         fillBuff(buffer, "abcdef"); // Invalid input
-        value = TarUtils.parseOctal(buffer,0, 11);
-//        assertEquals(0, value); // Or perhaps an Exception?
+        try {
+            value = TarUtils.parseOctal(buffer,0, 11);
+            fail("Expected IllegalArgumentException");
+        } catch (IllegalArgumentException expected) {
+        }
     }
     

commit 161511fb50910920c612de82bfe06f86e6a5aa50
Author: Sebastian Bazley <sebb@apache.org>
Date:   Tue Mar 31 19:49:45 2009

    Some test cases for TarUtils
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@760738 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
--- /dev/null
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
@@ -0,0 +53,15 @@
+        value = TarUtils.parseOctal(buffer,0, 11);
+        assertEquals(077777777777L, value);
+        value = TarUtils.parseOctal(buffer,0, 12);
+        assertEquals(0777777777777L, value);
+        buffer[11]=' ';
+        value = TarUtils.parseOctal(buffer,0, 11);
+        assertEquals(077777777777L, value);
+        buffer[11]=0;
+        value = TarUtils.parseOctal(buffer,0, 11);
+        assertEquals(077777777777L, value);
+        fillBuff(buffer, "abcdef"); // Invalid input
+        value = TarUtils.parseOctal(buffer,0, 11);
+//        assertEquals(0, value); // Or perhaps an Exception?
+    }
+    
