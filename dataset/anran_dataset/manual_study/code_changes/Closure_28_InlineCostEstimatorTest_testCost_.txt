commit 59dbb7a28680caad08ddb1658123fe0cbb1ae689
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon May 14 14:02:20 2012

    Lower the cost of true/false/null.
    Fixes issue 728
    
    R=johnlenz
    DELTA=35  (27 added, 0 deleted, 8 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4778
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1969 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineCostEstimatorTest.java b/test/com/google/javascript/jscomp/InlineCostEstimatorTest.java
--- a/test/com/google/javascript/jscomp/InlineCostEstimatorTest.java
+++ b/test/com/google/javascript/jscomp/InlineCostEstimatorTest.java
@@ -47,15 +47,17 @@
   public void testCost() {
     checkCost("1", "1");
+    checkCost("true", "1");
+    checkCost("false", "1");
     checkCost("a", "xx");
     checkCost("a + b", "xx+xx");
     checkCost("foo()", "xx()");
     checkCost("foo(a,b)", "xx(xx,xx)");
-    checkCost("10 + foo(a,b)", "10+xx(xx,xx)");
+    checkCost("10 + foo(a,b)", "0+xx(xx,xx)");
     checkCost("1 + foo(a,b)", "1+xx(xx,xx)");
     checkCost("a ? 1 : 0", "xx?1:0");
     checkCost("a.b", "xx.xx");
     checkCost("new Obj()", "new xx");
     checkCost("function a() {return \"monkey\"}",
               "function xx(){return\"monkey\"}");
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineCostEstimatorTest.java b/test/com/google/javascript/jscomp/InlineCostEstimatorTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/InlineCostEstimatorTest.java
@@ -0,0 +47,15 @@
+  public void testCost() {
+    checkCost("1", "1");
+    checkCost("a", "xx");
+    checkCost("a + b", "xx+xx");
+    checkCost("foo()", "xx()");
+    checkCost("foo(a,b)", "xx(xx,xx)");
+    checkCost("10 + foo(a,b)", "10+xx(xx,xx)");
+    checkCost("1 + foo(a,b)", "1+xx(xx,xx)");
+    checkCost("a ? 1 : 0", "xx?1:0");
+    checkCost("a.b", "xx.xx");
+    checkCost("new Obj()", "new xx");
+    checkCost("function a() {return \"monkey\"}",
+              "function xx(){return\"monkey\"}");
+  }
+
