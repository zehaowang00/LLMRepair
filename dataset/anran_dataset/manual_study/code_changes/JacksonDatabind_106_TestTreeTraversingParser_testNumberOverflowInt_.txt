commit 6ef86656aa504309ea3d89cf98ce45d11d6ea9c6
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Jan 17 01:20:38 2019

    Fix #2189

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/TestTreeTraversingParser.java b/src/test/java/com/fasterxml/jackson/databind/node/TestTreeTraversingParser.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/TestTreeTraversingParser.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestTreeTraversingParser.java
@@ -278,0 +273,41 @@
+    public void testNumberOverflowInt() throws IOException
+    {
+        final long tooBig = 1L + Integer.MAX_VALUE;
+        try (final JsonParser p = MAPPER.readTree("[ "+tooBig+" ]").traverse()) {
+            assertToken(JsonToken.START_ARRAY, p.nextToken());
+            assertToken(JsonToken.VALUE_NUMBER_INT, p.nextToken());
+            assertEquals(NumberType.LONG, p.getNumberType());
+            try {
+                p.getIntValue();
+                fail("Expected failure for `int` overflow");
+            } catch (InputCoercionException e) {
+                verifyException(e, "Numeric value ("+tooBig+") out of range of int");
+            }
+        }
+        try (final JsonParser p = MAPPER.readTree("{ \"value\" : "+tooBig+" }").traverse()) {
+            assertToken(JsonToken.START_OBJECT, p.nextToken());
+            assertToken(JsonToken.FIELD_NAME, p.nextToken());
+            assertToken(JsonToken.VALUE_NUMBER_INT, p.nextToken());
+            assertEquals(NumberType.LONG, p.getNumberType());
+            try {
+                p.getIntValue();
+                fail("Expected failure for `int` overflow");
+            } catch (InputCoercionException e) {
+                verifyException(e, "Numeric value ("+tooBig+") out of range of int");
+            }
+        }
+        // But also from floating-point
+        final String tooBig2 = "1.0e10";
+        try (final JsonParser p = MAPPER.readTree("[ "+tooBig2+" ]").traverse()) {
+            assertToken(JsonToken.START_ARRAY, p.nextToken());
+            assertToken(JsonToken.VALUE_NUMBER_FLOAT, p.nextToken());
+            assertEquals(NumberType.DOUBLE, p.getNumberType());
+            try {
+                p.getIntValue();
+                fail("Expected failure for `int` overflow");
+            } catch (InputCoercionException e) {
+                verifyException(e, "Numeric value ("+tooBig2+") out of range of int");
+            }
+        }
+    }
+
