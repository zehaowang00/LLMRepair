commit cf6e59d2d67d9956d9d5331c8dcdd268f2499bf2
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Wed Oct 24 19:48:08 2012

    now replacing completely ReturnsDeepStub

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
@@ -33,16 +34,16 @@
     public void generic_deep_mock_frenzy__look_at_these_chained_calls() throws Exception {
-        GenericsNest<?> mock = mock(GenericsNest.class, new ReturnsGenericDeepStubs());
+        GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);
 
         Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();
         Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();
         Map.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();
 
         Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();
         Comparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
 
         Set<Number> value = mock.entrySet().iterator().next().getValue();
         Iterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
         Number number = mock.entrySet().iterator().next().getValue().iterator().next();
     }
 
     @Test

commit d7c18327ef8a54cf3ed186bf7b11954f23f3f405
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Wed Oct 24 19:33:34 2012

    better test names

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
@@ -33,16 +33,16 @@
-    public void returning_deep_stubs_1() throws Exception {
+    public void generic_deep_mock_frenzy__look_at_these_chained_calls() throws Exception {
         GenericsNest<?> mock = mock(GenericsNest.class, new ReturnsGenericDeepStubs());
 
         Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();
         Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();
         Map.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();
 
         Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();
         Comparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
 
         Set<Number> value = mock.entrySet().iterator().next().getValue();
         Iterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
         Number number = mock.entrySet().iterator().next().getValue().iterator().next();
     }
 
     @Test

commit 6e97858d79d08b455cb3690b811120965ee1975a
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Wed Aug 1 11:07:21 2012

    For now keep the old ReturnsDeepStubs and created a specific ReturnsGenericDeepStubs
    
    --HG--
    branch : issue230
    rename : test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java
@@ -33,16 +33,16 @@
     public void returning_deep_stubs_1() throws Exception {
-        GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);
+        GenericsNest<?> mock = mock(GenericsNest.class, new ReturnsGenericDeepStubs());
 
         Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();
         Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();
         Map.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();
 
         Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();
         Comparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
 
         Set<Number> value = mock.entrySet().iterator().next().getValue();
         Iterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
         Number number = mock.entrySet().iterator().next().getValue().iterator().next();
     }
 
     @Test

commit 52f6a9388d376d292918422296d82d77d5f6c921
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Tue Jul 24 12:52:01 2012

    Generic deep stubs now operational! Wildcard types are not yet in the party.
    
    --HG--
    branch : issue230

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java
--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java
@@ -18,15 +35,16 @@
-    public void testName() throws Exception {
-        MapWithNestedGenerics<?> mock = mock(MapWithNestedGenerics.class, RETURNS_DEEP_STUBS);
+    public void returning_deep_stubs_1() throws Exception {
+        GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);
 
         Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();
         Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();
         Map.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();
 
         Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();
         Comparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
 
         Set<Number> value = mock.entrySet().iterator().next().getValue();
         Iterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
         Number number = mock.entrySet().iterator().next().getValue().iterator().next();
     }
 
+    @Test

commit 6eaf9a247dcfb68b88fec1f2a28808f2bfc19436
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Tue Jul 24 06:26:42 2012

    Trying a Top-Down approach instead of the Bottom-Up approach to better solve this generic mess (tests are broken here)(missing files)
    
    --HG--
    branch : issue230

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java
--- /dev/null
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java
@@ -0,0 +18,15 @@
+    public void testName() throws Exception {
+        MapWithNestedGenerics<?> mock = mock(MapWithNestedGenerics.class, RETURNS_DEEP_STUBS);
+
+        Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();
+        Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();
+        Map.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();
+
+        Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();
+        Comparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
+
+        Set<Number> value = mock.entrySet().iterator().next().getValue();
+        Iterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
+        Number number = mock.entrySet().iterator().next().getValue().iterator().next();
+    }
+
