commit af44738c7de74f24e37ea0c1242e73b07c3f4362
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Sat Jun 30 09:06:31 2012

    issue 352 : With answer ReturnsEmptyValues, Mockito-mocked methods returning primitive types other than "int" throw ClassCastException: java.lang.Integer.
    Thanks to Jesse Wilson for spotting that one and providing a patch.
    I changed a few things however  especially:
     - used Primitives utility class instead
     - applied underscored names for test cases, as decided internally

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java
--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java
@@ -41,17 +42,19 @@
-    public void shouldReturnTheUsualDefaultValuesForPrimitives()
-            throws Throwable {
+    public void should_return_the_usual_default_values_for_primitives() throws Throwable {
         ReturnsMocks answer = new ReturnsMocks();
         assertEquals(false, answer.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0, answer.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals((byte) 0, answer.answer(invocationOf(HasPrimitiveMethods.class, "byteMethod")));
+        assertEquals((short) 0, answer.answer(invocationOf(HasPrimitiveMethods.class, "shortMethod")));
         assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
-        assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
-        assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
-        assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+        assertEquals(0L, answer.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0f, answer.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0d, answer.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
-    
+
+    @SuppressWarnings("unused")
     interface StringMethods {
         String stringMethod();
         String[] stringArrayMethod();
     }
     
     @Test

commit b5403f8d1f780ed7b866801e459c861dd4d98798
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri May 22 18:05:28 2009

    Finished fixing javadocs after changing ReturnValues into Answers
    More rename job in the same domain
    
    --HG--
    rename : src/org/mockito/internal/returnvalues/GloballyConfiguredAnswer.java => src/org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer.java
    rename : src/org/mockito/internal/returnvalues/ReturnsEmptyValues.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/ReturnsMocks.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java
    rename : src/org/mockito/internal/returnvalues/ReturnsMoreEmptyValues.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/ReturnsSmartNulls.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java
    rename : src/org/mockito/internal/returnvalues/package.html => src/org/mockito/internal/stubbing/defaultanswers/package.html
    rename : test/org/mockito/internal/returnvalues/HasPrimitiveMethods.java => test/org/mockito/internal/stubbing/defaultanswers/HasPrimitiveMethods.java
    rename : test/org/mockito/internal/returnvalues/ReturnsEmptyValuesTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/ReturnsMocksTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java
    rename : test/org/mockito/internal/returnvalues/ReturnsMoreEmptyValuesTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
    rename : test/org/mockitousage/stubbing/StubbingConsecutiveReturnValuesTest.java => test/org/mockitousage/stubbing/StubbingConsecutiveAnswersTest.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401448

diff --git a/test/org/mockito/internal/returnvalues/ReturnsMocksTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java
--- a/test/org/mockito/internal/returnvalues/ReturnsMocksTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java
@@ -48,17 +48,17 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives()
             throws Throwable {
-        ReturnsMocks returnValues = new ReturnsMocks();
-        assertEquals(false, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
-        assertEquals((char) 0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
-        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
-        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
-        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
-        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+        ReturnsMocks answer = new ReturnsMocks();
+        assertEquals(false, answer.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
+        assertEquals((char) 0, answer.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
+        assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0, answer.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface StringMethods {
         String stringMethod();
         String[] stringArrayMethod();
     }
     
     @Test

commit f375e673e52ebb2d3319182e2c65a2debe1805fd
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri May 22 17:31:48 2009

    Renamed ReturnValues into Answers
    
    --HG--
    rename : src/org/mockito/internal/returnvalues/GloballyConfiguredReturnValues.java => src/org/mockito/internal/returnvalues/GloballyConfiguredAnswer.java
    rename : src/org/mockito/internal/returnvalues/EmptyReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/MockReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsMocks.java
    rename : src/org/mockito/internal/returnvalues/MoreEmptyReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsMoreEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/SmartNullReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsSmartNulls.java
    rename : test/org/mockito/internal/returnvalues/EmptyReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/MockReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsMocksTest.java
    rename : test/org/mockito/internal/returnvalues/MoreEmptyReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsMoreEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401447

diff --git a/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java b/test/org/mockito/internal/returnvalues/ReturnsMocksTest.java
--- a/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
+++ b/test/org/mockito/internal/returnvalues/ReturnsMocksTest.java
@@ -48,17 +48,17 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives()
             throws Throwable {
-        MockReturnValues returnValues = new MockReturnValues();
+        ReturnsMocks returnValues = new ReturnsMocks();
         assertEquals(false, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
         assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
         assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
         assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
         assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface StringMethods {
         String stringMethod();
         String[] stringArrayMethod();
     }
     
     @Test

commit cbca8d00eea63103309e939a233db533f2dc2675
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri May 22 17:23:42 2009

    Got rid of some hardly used deprecated API
    Changed ReturnValues into Answer (effectively got rid of ReturnValues)
    
    --HG--
    rename : src/org/mockito/internal/stubbing/answers/CallsRealMethod.java => src/org/mockito/internal/stubbing/answers/CallsRealMethods.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401446

diff --git a/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java b/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
--- a/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
+++ b/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
@@ -48,17 +48,17 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives()
             throws Throwable {
         MockReturnValues returnValues = new MockReturnValues();
-        assertEquals(false, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
-        assertEquals((char) 0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "charMethod")));
-        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "intMethod")));
-        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "longMethod")));
-        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
-        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+        assertEquals(false, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
+        assertEquals((char) 0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
+        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0, returnValues.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface StringMethods {
         String stringMethod();
         String[] stringArrayMethod();
     }
     
     @Test

commit 634d34822abe02168f897f5722ce1ab014e1de05
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Tue Apr 21 15:12:36 2009

    Implemented feature 72
    Partial mocking support finally made it to the trunk!
    This feature lets you stub the mock to call real method instead of unreal method...
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401356

diff --git a/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java b/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
--- a/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
+++ b/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
@@ -45,17 +45,17 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives()
-            throws Exception {
+            throws Throwable {
         MockReturnValues returnValues = new MockReturnValues();
         assertEquals(false, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "charMethod")));
         assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "intMethod")));
         assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "longMethod")));
         assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
         assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface StringMethods {
         String stringMethod();
         String[] stringArrayMethod();
     }
     
     @Test

commit b10d431ad21e1402f9dc8d56af84aa9768b6a182
Author: Igor Czechowski <iczechowski@gmail.com>
Date:   Wed Apr 15 09:02:24 2009

    Mock return values implementation
    
    --HG--
    rename : src/org/mockito/InOrderImpl.java => src/org/mockito/internal/InOrderImpl.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401324

diff --git a/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java b/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
--- /dev/null
+++ b/test/org/mockito/internal/returnvalues/MockReturnValuesTest.java
@@ -0,0 +47,17 @@
+    public void shouldReturnTheUsualDefaultValuesForPrimitives()
+            throws Exception {
+        MockReturnValues returnValues = new MockReturnValues();
+        assertEquals(false, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
+        assertEquals((char) 0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "intMethod")));
+        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0, returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+    }
+    
+    interface StringMethods {
+        String stringMethod();
+        String[] stringArrayMethod();
+    }
+    
+    @Test
