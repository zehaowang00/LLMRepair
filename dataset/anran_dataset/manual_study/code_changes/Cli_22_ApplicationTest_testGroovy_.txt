commit 67289747fc56e79ee9092a47cd2ff5bd0c688a29
Author: Emmanuel Bourg <ebourg@apache.org>
Date:   Mon Sep 15 06:25:38 2008

    Merged the common parser tests into ParserTestCase
    Fixed the integration test for Groovy, highlighting a regression in CLI 1.2
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@695410 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/ApplicationTest.java b/src/test/org/apache/commons/cli/ApplicationTest.java
--- a/src/test/org/apache/commons/cli/ApplicationTest.java
+++ b/src/test/org/apache/commons/cli/ApplicationTest.java
@@ -106,68 +105,68 @@
     public void testGroovy() throws Exception {
         Options options = new Options();
 
         options.addOption(
             OptionBuilder.withLongOpt("define").
                 withDescription("define a system property").
                 hasArg(true).
                 withArgName("name=value").
                 create('D'));
         options.addOption(
             OptionBuilder.hasArg(false)
             .withDescription("usage information")
             .withLongOpt("help")
             .create('h'));
         options.addOption(
             OptionBuilder.hasArg(false)
             .withDescription("debug mode will print out full stack traces")
             .withLongOpt("debug")
             .create('d'));
         options.addOption(
             OptionBuilder.hasArg(false)
             .withDescription("display the Groovy and JVM versions")
             .withLongOpt("version")
             .create('v'));
         options.addOption(
             OptionBuilder.withArgName("charset")
             .hasArg()
             .withDescription("specify the encoding of the files")
             .withLongOpt("encoding")
             .create('c'));
         options.addOption(
             OptionBuilder.withArgName("script")
             .hasArg()
             .withDescription("specify a command line script")
             .create('e'));
         options.addOption(
             OptionBuilder.withArgName("extension")
             .hasOptionalArg()
             .withDescription("modify files in place; create backup if extension is given (e.g. \'.bak\')")
             .create('i'));
         options.addOption(
             OptionBuilder.hasArg(false)
             .withDescription("process files line by line using implicit 'line' variable")
             .create('n'));
         options.addOption(
             OptionBuilder.hasArg(false)
             .withDescription("process files line by line and print result (see also -n)")
             .create('p'));
         options.addOption(
             OptionBuilder.withArgName("port")
             .hasOptionalArg()
             .withDescription("listen on a port and process inbound lines")
             .create('l'));
         options.addOption(
             OptionBuilder.withArgName("splitPattern")
             .hasOptionalArg()
             .withDescription("split lines using splitPattern (default '\\s') using implicit 'split' variable")
             .withLongOpt("autosplit")
             .create('a'));
 
         Parser parser = new PosixParser();
-        CommandLine line = parser.parse(options, new String[] { "-e", "println 'hello'" });
+        CommandLine line = parser.parse(options, new String[] { "-e", "println 'hello'" }, true);
 
         assertTrue(line.hasOption('e'));
         assertEquals("println 'hello'", line.getOptionValue('e'));
     }
 
 }

commit d89e42ab8c7a35853a48833d7f84294ab66f00ff
Author: Emmanuel Bourg <ebourg@apache.org>
Date:   Wed Aug 6 04:19:28 2008

    Added a test for the Groovy command line
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@683156 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/ApplicationTest.java b/src/test/org/apache/commons/cli/ApplicationTest.java
--- a/src/test/org/apache/commons/cli/ApplicationTest.java
+++ b/src/test/org/apache/commons/cli/ApplicationTest.java
@@ -106,1 +106,68 @@
+    public void testGroovy() throws Exception {
+        Options options = new Options();
+
+        options.addOption(
+            OptionBuilder.withLongOpt("define").
+                withDescription("define a system property").
+                hasArg(true).
+                withArgName("name=value").
+                create('D'));
+        options.addOption(
+            OptionBuilder.hasArg(false)
+            .withDescription("usage information")
+            .withLongOpt("help")
+            .create('h'));
+        options.addOption(
+            OptionBuilder.hasArg(false)
+            .withDescription("debug mode will print out full stack traces")
+            .withLongOpt("debug")
+            .create('d'));
+        options.addOption(
+            OptionBuilder.hasArg(false)
+            .withDescription("display the Groovy and JVM versions")
+            .withLongOpt("version")
+            .create('v'));
+        options.addOption(
+            OptionBuilder.withArgName("charset")
+            .hasArg()
+            .withDescription("specify the encoding of the files")
+            .withLongOpt("encoding")
+            .create('c'));
+        options.addOption(
+            OptionBuilder.withArgName("script")
+            .hasArg()
+            .withDescription("specify a command line script")
+            .create('e'));
+        options.addOption(
+            OptionBuilder.withArgName("extension")
+            .hasOptionalArg()
+            .withDescription("modify files in place; create backup if extension is given (e.g. \'.bak\')")
+            .create('i'));
+        options.addOption(
+            OptionBuilder.hasArg(false)
+            .withDescription("process files line by line using implicit 'line' variable")
+            .create('n'));
+        options.addOption(
+            OptionBuilder.hasArg(false)
+            .withDescription("process files line by line and print result (see also -n)")
+            .create('p'));
+        options.addOption(
+            OptionBuilder.withArgName("port")
+            .hasOptionalArg()
+            .withDescription("listen on a port and process inbound lines")
+            .create('l'));
+        options.addOption(
+            OptionBuilder.withArgName("splitPattern")
+            .hasOptionalArg()
+            .withDescription("split lines using splitPattern (default '\\s') using implicit 'split' variable")
+            .withLongOpt("autosplit")
+            .create('a'));
+
+        Parser parser = new PosixParser();
+        CommandLine line = parser.parse(options, new String[] { "-e", "println 'hello'" });
+
+        assertTrue(line.hasOption('e'));
+        assertEquals("println 'hello'", line.getOptionValue('e'));
+    }
+
 }

commit 6a6bb48840aa0043200a5d9f6fffea47aea1a8db
Author: Henri Yandell <bayard@apache.org>
Date:   Sat Apr 26 13:31:48 2008

    Removing the duplication 'version' option as pointed out by Andrew Kutz
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@651842 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/ApplicationTest.java b/src/test/org/apache/commons/cli/ApplicationTest.java
--- a/src/test/org/apache/commons/cli/ApplicationTest.java
+++ b/src/test/org/apache/commons/cli/ApplicationTest.java
@@ -131,1 +130,1 @@
-}
\ No newline at end of file
+}

commit ead3757ef361f85cfb92754e808dafd74eb15702
Author: John Keyes <jkeyes@apache.org>
Date:   Wed Jun 19 17:25:40 2002

    GNU parser, one unit test for Ant
    
    
    git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129771 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/ApplicationTest.java b/src/test/org/apache/commons/cli/ApplicationTest.java
--- /dev/null
+++ b/src/test/org/apache/commons/cli/ApplicationTest.java
@@ -0,0 +61,1 @@
+}
\ No newline at end of file
