commit 465282f1ca28a208b06c47b55fd292d4631c55da
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Jun 22 20:19:37 2010

    Change on 2010/06/22 by nicksantos
    
            Inferred return types.
            Fixes issue 143.
            I eventually decided that it was wrong for the subtype's method
            to affect the supertype's method, since this will make incremental
            compilation a lot harder in the long run.
    
            R=moedinger
            DELTA=481  (313 added, 38 deleted, 130 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=34007
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@249 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
--- a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
@@ -96,11 +96,11 @@
   public void testConstructorProperty() {
     testSame("var foo = {}; /** @constructor */ foo.Bar = function() {};");
     ObjectType foo = (ObjectType) findNameType("foo", globalScope);
     assertTrue(foo.hasProperty("Bar"));
     assertFalse(foo.isPropertyTypeInferred("Bar"));
 
     JSType fooBar = foo.getPropertyType("Bar");
-    assertEquals("function (this:foo.Bar): ?", fooBar.toString());
+    assertEquals("function (this:foo.Bar): undefined", fooBar.toString());
     assertEquals(Sets.newHashSet(foo), registry.getTypesWithProperty("Bar"));
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
@@ -0,0 +117,11 @@
+  public void testConstructorProperty() {
+    testSame("var foo = {}; /** @constructor */ foo.Bar = function() {};");
+    ObjectType foo = (ObjectType) findNameType("foo", globalScope);
+    assertTrue(foo.hasProperty("Bar"));
+    assertFalse(foo.isPropertyTypeInferred("Bar"));
+
+    JSType fooBar = foo.getPropertyType("Bar");
+    assertEquals("function (this:foo.Bar): ?", fooBar.toString());
+    assertEquals(Sets.newHashSet(foo), registry.getTypesWithProperty("Bar"));
+  }
+
