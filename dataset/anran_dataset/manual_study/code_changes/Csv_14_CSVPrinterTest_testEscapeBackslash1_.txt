commit 190390bf5dd83d6137ca3045902fcecbeafa3227
Author: Gary Gregory <ggregory@apache.org>
Date:   Sun Jul 31 03:21:35 2016

    [CSV-171] Negative numeric values in the first column are always quoted
    in minimal mode.

diff --git a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
@@ -294,9 +296,9 @@
     public void testEscapeBackslash1() throws IOException {
         StringWriter sw = new StringWriter();
         try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(QUOTE_CH))) {
             printer.print("\\");
         }
-        assertEquals("'\\'", sw.toString());
+        assertEquals("\\", sw.toString());
     }
 
     @Test

commit 1023690dc284afaf380b0cf3eb74c411e0663465
Author: Gary Gregory <ggregory@apache.org>
Date:   Sun Jul 31 02:42:51 2016

    Break up testEscapeBackslash() method into individual tests.

diff --git a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
@@ -293,11 +294,9 @@
-    public void testEscapeBackslash() throws IOException {
+    public void testEscapeBackslash1() throws IOException {
         StringWriter sw = new StringWriter();
-        final char quoteChar = '\'';
-        final String eol = "\r\n";
-        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {
+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(QUOTE_CH))) {
             printer.print("\\");
         }
         assertEquals("'\\'", sw.toString());
+    }
 
-        sw = new StringWriter();
-        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {
+    @Test

commit 9daee9042c931382219ba268c2ed79e8c6a740da
Author: Gary D. Gregory <ggregory@apache.org>
Date:   Mon Jun 13 02:56:49 2016

    Use try-with-resources.
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
@@ -292,13 +289,11 @@
     public void testEscapeBackslash() throws IOException {
         StringWriter sw = new StringWriter();
         final char quoteChar = '\'';
         final String eol = "\r\n";
-        CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar));
-        printer.print("\\");
-        printer.close();
+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {
+            printer.print("\\");
+        }
         assertEquals("'\\'", sw.toString());
 
         sw = new StringWriter();
-        printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar));
-        printer.print("\\\r");
-        printer.close();
+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {

commit 16b9e2c79122f5a76863854cc4b33939da63710d
Author: Gary D. Gregory <ggregory@apache.org>
Date:   Mon Apr 18 02:16:51 2016

    [CSV-175] Support for ignoring trailing delimiter.
    [CSV-177] Support trimming leading and trailing blanks.
    [CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java
@@ -175,0 +292,13 @@
+    public void testEscapeBackslash() throws IOException {
+        StringWriter sw = new StringWriter();
+        final char quoteChar = '\'';
+        final String eol = "\r\n";
+        CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar));
+        printer.print("\\");
+        printer.close();
+        assertEquals("'\\'", sw.toString());
+
+        sw = new StringWriter();
+        printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar));
+        printer.print("\\\r");
+        printer.close();
