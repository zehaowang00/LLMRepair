commit 43e17dc7f7c32e937448cff716e9af7aa40e5ec3
Author: Michael Schmid <schmid-michael@users.noreply.github.com>
Date:   Wed Oct 8 07:52:34 2014

    Changes for issue #467

diff --git a/src/test/java/org/jsoup/nodes/EntitiesTest.java b/src/test/java/org/jsoup/nodes/EntitiesTest.java
index c728d97e..4103afdf 100644
--- a/src/test/java/org/jsoup/nodes/EntitiesTest.java
+++ b/src/test/java/org/jsoup/nodes/EntitiesTest.java
@@ -7,10 +7,11 @@
 import static org.jsoup.nodes.Entities.EscapeMode.*;
 import static org.junit.Assert.*;
 
+import java.io.IOException;
 import java.nio.charset.Charset;
 
 public class EntitiesTest {
-    @Test public void escape() {
+    @Test public void escape() throws IOException {
         String text = "Hello &<> Ã Ã¥ Ï æ° there Â¾ Â© Â»";
         String escapedAscii = Entities.escape(text, new OutputSettings().charset("ascii").escapeMode(base));
         String escapedAsciiFull = Entities.escape(text, new OutputSettings().charset("ascii").escapeMode(extended));
@@ -33,7 +34,7 @@
         assertEquals(text, Entities.unescape(escapedUtfMin));
     }
 
-    @Test public void escapeSupplementaryCharacter(){
+    @Test public void escapeSupplementaryCharacter() throws IOException{
         String text = new String(Character.toChars(135361));
         String escapedAscii = Entities.escape(text, new OutputSettings().charset("ascii").escapeMode(base));
         assertEquals("&#x210c1;", escapedAscii);
@@ -56,7 +57,7 @@
     }
 
     
-    @Test public void caseSensitive() {
+    @Test public void caseSensitive() throws IOException {
         String unescaped = "Ã Ã¼ & &";
         assertEquals("&Uuml; &uuml; &amp; &amp;",
                 Entities.escape(unescaped, new OutputSettings().charset("ascii").escapeMode(extended)));

commit 5e52f1b266173593fab32fe9d8a4963066b2f2fe
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Thu Aug 12 20:10:24 2010

    Fixed support for case-sensitive HTML escape entities.
    
    Fixes #31

diff --git a/src/test/java/org/jsoup/nodes/EntitiesTest.java b/src/test/java/org/jsoup/nodes/EntitiesTest.java
index cdf84f65..3eeba5b0 100644
--- a/src/test/java/org/jsoup/nodes/EntitiesTest.java
+++ b/src/test/java/org/jsoup/nodes/EntitiesTest.java
@@ -9,21 +9,29 @@
 
 public class EntitiesTest {
     @Test public void escape() {
-        String text = "Hello &<> Ã Ï æ° there";
+        String text = "Hello &<> Ã Ã¥ Ï æ° there";
         String escapedAscii = Entities.escape(text, Charset.forName("ascii").newEncoder(), Entities.EscapeMode.base);
         String escapedAsciiFull = Entities.escape(text, Charset.forName("ascii").newEncoder(), Entities.EscapeMode.extended);
         String escapedUtf = Entities.escape(text, Charset.forName("UTF-8").newEncoder(), Entities.EscapeMode.base);
 
-        assertEquals("Hello &amp;&lt;&gt; &aring; &#960; &#26032; there", escapedAscii);
-        assertEquals("Hello &amp;&lt;&gt; &angst; &pi; &#26032; there", escapedAsciiFull);
-        assertEquals("Hello &amp;&lt;&gt; &aring; Ï æ° there", escapedUtf);
+        assertEquals("Hello &amp;&lt;&gt; &Aring; &aring; &#960; &#26032; there", escapedAscii);
+        assertEquals("Hello &amp;&lt;&gt; &angst; &aring; &pi; &#26032; there", escapedAsciiFull);
+        assertEquals("Hello &amp;&lt;&gt; &Aring; &aring; Ï æ° there", escapedUtf);
         // odd that it's defined as aring in base but angst in full
     }
 
     @Test public void unescape() {
-        String text = "Hello &amp;&LT&gt; &ANGST &#960; &#960 &#x65B0; there &!";
+        String text = "Hello &amp;&LT&gt; &angst &#960; &#960 &#x65B0; there &!";
         assertEquals("Hello &<> Ã Ï Ï æ° there &!", Entities.unescape(text));
 
         assertEquals("&0987654321; &unknown", Entities.unescape("&0987654321; &unknown"));
     }
+    
+    @Test public void caseSensitive() {
+        String unescaped = "Ã Ã¼ & &";
+        assertEquals("&Uuml; &uuml; &amp; &amp;", Entities.escape(unescaped, Charset.forName("ascii").newEncoder(), Entities.EscapeMode.extended));
+        
+        String escaped = "&Uuml; &uuml; &amp; &AMP";
+        assertEquals("Ã Ã¼ & &", Entities.unescape(escaped));
+    }
 }
