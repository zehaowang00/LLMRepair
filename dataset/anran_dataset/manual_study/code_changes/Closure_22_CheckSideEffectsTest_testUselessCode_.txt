commit 43a55234ef122a1ed98681ce0350506207b878d5
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Jun 19 16:55:55 2012

    You are in a maze of twisty 'if' branches, all alike.
    cleanup the logic for identifying dead expressions.
    Fixes issue 753
    
    R=johnlenz
    DELTA=78  (29 added, 42 deleted, 7 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=5031
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2054 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CheckSideEffectsTest.java b/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
--- a/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
+++ b/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
@@ -49,29 +49,33 @@
   public void testUselessCode() {
     test("function f(x) { if(x) return; }", ok);
     test("function f(x) { if(x); }", "function f(x) { if(x); }", e);
 
     test("if(x) x = y;", ok);
     test("if(x) x == bar();", "if(x) JSCOMPILER_PRESERVE(x == bar());", e);
 
     test("x = 3;", ok);
     test("x == 3;", "JSCOMPILER_PRESERVE(x == 3);", e);
 
     test("var x = 'test'", ok);
     test("var x = 'test'\n'str'",
          "var x = 'test'\nJSCOMPILER_PRESERVE('str')", e);
 
     test("", ok);
     test("foo();;;;bar();;;;", ok);
 
     test("var a, b; a = 5, b = 6", ok);
     test("var a, b; a = 5, b == 6",
          "var a, b; a = 5, JSCOMPILER_PRESERVE(b == 6)", e);
     test("var a, b; a = (5, 6)",
          "var a, b; a = (JSCOMPILER_PRESERVE(5), 6)", e);
+    test("var a, b; a = (bar(), 6, 7)",
+         "var a, b; a = (bar(), JSCOMPILER_PRESERVE(6), 7)", e);
+    test("var a, b; a = (bar(), bar(), 7, 8)",
+         "var a, b; a = (bar(), bar(), JSCOMPILER_PRESERVE(7), 8)", e);
     test("var a, b; a = (b = 7, 6)", ok);
     test("function x(){}\nfunction f(a, b){}\nf(1,(x(), 2));", ok);
     test("function x(){}\nfunction f(a, b){}\nf(1,(2, 3));",
          "function x(){}\nfunction f(a, b){}\n" +
          "f(1,(JSCOMPILER_PRESERVE(2), 3));", e);
   }
 

commit ff9dc85e994c34448130ee5bb38f801ab2f6ba16
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri Jan 13 17:07:12 2012

    Protect appearently side-effect free code from removal.
    Fixes issue 64
    Fixes issue 398
    
    R=nicksantos
    DELTA=256  (218 added, 11 deleted, 27 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4091
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1725 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CheckSideEffectsTest.java b/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
--- a/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
+++ b/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
@@ -39,24 +49,29 @@
   public void testUselessCode() {
     test("function f(x) { if(x) return; }", ok);
-    test("function f(x) { if(x); }", e);
+    test("function f(x) { if(x); }", "function f(x) { if(x); }", e);
 
     test("if(x) x = y;", ok);
-    test("if(x) x == bar();", e);
+    test("if(x) x == bar();", "if(x) JSCOMPILER_PRESERVE(x == bar());", e);
 
     test("x = 3;", ok);
-    test("x == 3;", e);
+    test("x == 3;", "JSCOMPILER_PRESERVE(x == 3);", e);
 
     test("var x = 'test'", ok);
-    test("var x = 'test'\n'str'", e);
+    test("var x = 'test'\n'str'",
+         "var x = 'test'\nJSCOMPILER_PRESERVE('str')", e);
 
     test("", ok);
     test("foo();;;;bar();;;;", ok);
 
     test("var a, b; a = 5, b = 6", ok);
-    test("var a, b; a = 5, b == 6", e);
-    test("var a, b; a = (5, 6)", e);      // the 5 has no side-effects
+    test("var a, b; a = 5, b == 6",
+         "var a, b; a = 5, JSCOMPILER_PRESERVE(b == 6)", e);
+    test("var a, b; a = (5, 6)",
+         "var a, b; a = (JSCOMPILER_PRESERVE(5), 6)", e);
     test("var a, b; a = (b = 7, 6)", ok);
     test("function x(){}\nfunction f(a, b){}\nf(1,(x(), 2));", ok);
-    test("function x(){}\nfunction f(a, b){}\nf(1,(2, 3));", e);
+    test("function x(){}\nfunction f(a, b){}\nf(1,(2, 3));",
+         "function x(){}\nfunction f(a, b){}\n" +
+         "f(1,(JSCOMPILER_PRESERVE(2), 3));", e);
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CheckSideEffectsTest.java b/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/CheckSideEffectsTest.java
@@ -0,0 +39,24 @@
+  public void testUselessCode() {
+    test("function f(x) { if(x) return; }", ok);
+    test("function f(x) { if(x); }", e);
+
+    test("if(x) x = y;", ok);
+    test("if(x) x == bar();", e);
+
+    test("x = 3;", ok);
+    test("x == 3;", e);
+
+    test("var x = 'test'", ok);
+    test("var x = 'test'\n'str'", e);
+
+    test("", ok);
+    test("foo();;;;bar();;;;", ok);
+
+    test("var a, b; a = 5, b = 6", ok);
+    test("var a, b; a = 5, b == 6", e);
+    test("var a, b; a = (5, 6)", e);      // the 5 has no side-effects
+    test("var a, b; a = (b = 7, 6)", ok);
+    test("function x(){}\nfunction f(a, b){}\nf(1,(x(), 2));", ok);
+    test("function x(){}\nfunction f(a, b){}\nf(1,(2, 3));", e);
+  }
+
