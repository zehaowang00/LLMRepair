commit e797b2271ab9a00b99694a963728f3835f31d1cf
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Jan 24 01:46:03 2019

    Fix #2211 (last changes, still need to improve test coverage)

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
@@ -60,35 +59,35 @@
     public void testNullFromEOFWithParserAndReader() throws Exception
     {
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY0))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY1))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
 
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0_BYTES)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES, 0, EMPTY1_BYTES.length)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
 
         try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY0_BYTES))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY1_BYTES))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
     }
-*/
+
     // [databind#2211]: when passing content sources OTHER than `JsonParser`,
     // return "missing node" instead of alternate (return `null`, throw exception).

commit 6532c755438df3d8c9a17cc06148f1ab70dc38d8
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Wed Jan 23 01:47:13 2019

    ...

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
@@ -60,36 +60,35 @@
     public void testNullFromEOFWithParserAndReader() throws Exception
     {
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY0))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY1))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
 
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0_BYTES)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES, 0, EMPTY1_BYTES.length)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
 
         try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY0_BYTES))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY1_BYTES))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
     }
-    */
-
+*/
     // [databind#2211]: when passing content sources OTHER than `JsonParser`,
     // return "missing node" instead of alternate (return `null`, throw exception).

commit f0abe41b54b36f43f96f05ab224f6e6f364fbe7a
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Wed Jan 23 00:56:31 2019

    More work on #2211

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
@@ -59,35 +60,36 @@
     public void testNullFromEOFWithParserAndReader() throws Exception
     {
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY0))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY1))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
 
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0_BYTES)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES, 0, EMPTY1_BYTES.length)) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
 
         try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY0_BYTES))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
         try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY1_BYTES))) {
             _assertNullTree(MAPPER.reader().readTree(p));
         }
     }
+    */
 
     // [databind#2211]: when passing content sources OTHER than `JsonParser`,
     // return "missing node" instead of alternate (return `null`, throw exception).

commit aea65f1b5faa070d1a0dfbd8911b023a8d9fad17
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Sun Jan 20 12:37:17 2019

    Working on tests for #2211

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
@@ -25,12 +59,35 @@
-    public void testNullFromEOFWithParserViaReader() throws Exception
+    public void testNullFromEOFWithParserAndReader() throws Exception
     {
-        assertNull(MAPPER.readTree(new StringReader("")));
-        assertNull(MAPPER.readTree(new ByteArrayInputStream(new byte[0])));
-        assertNull(MAPPER.readerFor(JsonNode.class)
-                .readTree(new StringReader("")));
-        assertNull(MAPPER.readerFor(JsonNode.class)
-                .readTree(new ByteArrayInputStream(new byte[0])));
+        try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0)) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+        try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1)) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+        try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY0))) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+        try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY1))) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+
+        try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0_BYTES)) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+        try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES)) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+        try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES, 0, EMPTY1_BYTES.length)) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+
+        try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY0_BYTES))) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
+        try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY1_BYTES))) {
+            _assertNullTree(MAPPER.reader().readTree(p));
+        }
     }
 
     // [databind#2211]: when passing content sources OTHER than `JsonParser`,
     // return "missing node" instead of alternate (return `null`, throw exception).

commit 9659d43b283fea449b7b822e7e14837c7cdf1a89
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Sun Jan 20 00:01:14 2019

    test refactoring

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/databind/node/EmptyContentAsTreeTest.java
@@ -0,0 +25,12 @@
+    public void testNullFromEOFWithParserViaReader() throws Exception
+    {
+        assertNull(MAPPER.readTree(new StringReader("")));
+        assertNull(MAPPER.readTree(new ByteArrayInputStream(new byte[0])));
+        assertNull(MAPPER.readerFor(JsonNode.class)
+                .readTree(new StringReader("")));
+        assertNull(MAPPER.readerFor(JsonNode.class)
+                .readTree(new ByteArrayInputStream(new byte[0])));
+    }
+
+    // [databind#2211]: when passing content sources OTHER than `JsonParser`,
+    // return "missing node" instead of alternate (return `null`, throw exception).
