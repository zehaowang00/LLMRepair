commit 6feec20c842586056aa5b19c402b26be08c88ca3
Author: Rafal Foltynski <r.foltynski@gmail.com>
Date:   Sat Jun 3 23:32:03 2017

    Fix #208: FilteringParserDelegate match count support

diff --git a/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
--- a/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
+++ b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
@@ -146,12 +213,13 @@
     public void testMultipleMatchFilteringWithPath3() throws Exception
     {
-        final String JSON = aposToQuotes("{'root':{'a0':true,'a':{'value':3},'b':{'value':4}},'b0':false}");
+        final String JSON = aposToQuotes("{'root':{'a0':true,'a':{'value':3},'b':{'value':\"foo\"}},'b0':false}");
         JsonParser p0 = JSON_F.createParser(JSON);
-        JsonParser p = new FilteringParserDelegate(p0,
+        FilteringParserDelegate p = new FilteringParserDelegate(p0,
                 new NameMatchFilter("value"),
                 true, true);
         String result = readAndWrite(JSON_F, p);
-        assertEquals(aposToQuotes("{'root':{'a':{'value':3},'b':{'value':4}}}"), result);
+        assertEquals(aposToQuotes("{'root':{'a':{'value':3},'b':{'value':\"foo\"}}}"), result);
+        assertEquals(2, p.getMatchCount());
     }
 
     @SuppressWarnings("resource")

commit e183d16b2f03c06217f221f57ac35b6001d74d3f
Author: Cowtowncoder <tatu.saloranta@iki.fi>
Date:   Wed Apr 29 19:05:00 2015

    More testing for parser/filter comb

diff --git a/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/core/filter/BasicParserFilteringTest.java
@@ -0,0 +129,12 @@
+    public void testMultipleMatchFilteringWithPath3() throws Exception
+    {
+        final String JSON = aposToQuotes("{'root':{'a0':true,'a':{'value':3},'b':{'value':4}},'b0':false}");
+        JsonParser p0 = JSON_F.createParser(JSON);
+        JsonParser p = new FilteringParserDelegate(p0,
+                new NameMatchFilter("value"),
+                true, true);
+        String result = readAndWrite(JSON_F, p);
+        assertEquals(aposToQuotes("{'root':{'a':{'value':3},'b':{'value':4}}}"), result);
+    }
+
+    @SuppressWarnings("resource")
