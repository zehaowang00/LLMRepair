commit 70ca6014779735bdc52ca0e80e528257829a15e7
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu May 24 11:54:23 2012

    Emit an error if there are dangling functions in the goog.scope
    fixes issue 737
    
    R=johnlenz
    DELTA=26  (7 added, 0 deleted, 19 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4853
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1993 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/ScopedAliasesTest.java b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
--- a/test/com/google/javascript/jscomp/ScopedAliasesTest.java
+++ b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
@@ -405,12 +405,14 @@
   public void testNonAliasLocal() {
     testScopedFailure("var x = 10", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
     testScopedFailure("var x = goog.dom + 10",
         ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
     testScopedFailure("var x = goog['dom']",
         ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
     testScopedFailure("var x = goog.dom, y = 10",
         ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
+    testScopedFailure("function f() {}",
+        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
   }
 
   // Alias Recording Tests
   // TODO(tylerg) : update these to EasyMock style tests once available

commit 8c4a625cdec89e6b1fa452fbb73c6f8d4c56b701
Author: tylerg@google.com <tylerg@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Apr 12 14:46:02 2011

    Implement ScopedAliases to record Aliases from goog.scope blocks.
    Easymock Dependency pulleded out for now to get the Changes working.  Will pull in and update tests as soon as dependency can be added to builds.
    
    R=nicksantos
    DELTA=206  (188 added, 2 deleted, 16 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=1371
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@999 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/ScopedAliasesTest.java b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
--- a/test/com/google/javascript/jscomp/ScopedAliasesTest.java
+++ b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
@@ -368,10 +381,12 @@
   public void testNonAliasLocal() {
     testScopedFailure("var x = 10", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
     testScopedFailure("var x = goog.dom + 10",
         ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
     testScopedFailure("var x = goog['dom']",
         ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
     testScopedFailure("var x = goog.dom, y = 10",
         ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
   }
 
+  // Alias Recording Tests
+  // TODO(tylerg) : update these to EasyMock style tests once available

commit a9757e8c7d85f9ee9622b3e5352955ba3429733d
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue May 18 13:06:01 2010

    Change on 2010/05/17 by robby
    
            Check for non-alias locals in ScopedAliases.
    
            R=nick
            DELTA=26  (22 added, 3 deleted, 1 changed)
    
    Change on 2010/05/18 by nick
    
            Add inferred return types.
            Make the inf/sup relationship for function types a bit richer.
            Make sure that the [call] pointer can never be null.
    
            R=andrew
            DELTA=192  (134 added, 30 deleted, 28 changed)
    
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4001
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@216 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/ScopedAliasesTest.java b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
--- a/test/com/google/javascript/jscomp/ScopedAliasesTest.java
+++ b/test/com/google/javascript/jscomp/ScopedAliasesTest.java
@@ -290,0 +295,10 @@
+  public void testNonAliasLocal() {
+    testScopedFailure("var x = 10", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
+    testScopedFailure("var x = goog.dom + 10",
+        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
+    testScopedFailure("var x = goog['dom']",
+        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
+    testScopedFailure("var x = goog.dom, y = 10",
+        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);
+  }
+
