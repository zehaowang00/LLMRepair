commit ca6c3fc55eb74e21fe90e18da33723fb99b22f21
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Sat Oct 10 19:41:58 2015

    Fix #965

diff --git a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java
--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java
+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java
@@ -511,1 +544,25 @@
+    public void testBigDecimal965() throws Exception
+    {
+
+        Wrapper965 w = new Wrapper965();
+        w.typeEnum = Type965.BIG_DECIMAL;
+        final String NUM_STR = "-10000000000.0000000001";
+        w.value = new BigDecimal(NUM_STR);
+
+        String json = MAPPER.writeValueAsString(w);
+
+        // simple sanity check so serialization is faithful
+        if (!json.contains(NUM_STR)) {
+            fail("JSON content should contain value '"+NUM_STR+"', does not appear to: "+json);
+        }
+        
+        Wrapper965 w2 = MAPPER.readerFor(Wrapper965.class)
+                .with(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS)
+                .readValue(json);
+
+        assertEquals(w.typeEnum, w2.typeEnum);
+        assertTrue(String.format("Expected %s = %s; got back %s = %s",
+            w.value.getClass().getSimpleName(), w.value.toString(), w2.value.getClass().getSimpleName(), w2.value.toString()),
+            w.value.equals(w2.value));
+    }
 }

commit a63c2038a03c7090ce4773d6cf54809150e59350
Author: Tatu Saloranta <tsaloranta@gmail.com>
Date:   Sat Dec 24 03:26:53 2011

    Add unit tests, almost compilable

diff --git a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java
@@ -0,0 +169,1 @@
+}
