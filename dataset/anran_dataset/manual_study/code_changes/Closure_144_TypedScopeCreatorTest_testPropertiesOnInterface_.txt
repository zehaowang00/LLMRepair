commit 465282f1ca28a208b06c47b55fd292d4631c55da
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Jun 22 20:19:37 2010

    Change on 2010/06/22 by nicksantos
    
            Inferred return types.
            Fixes issue 143.
            I eventually decided that it was wrong for the subtype's method
            to affect the supertype's method, since this will make incremental
            compilation a lot harder in the long run.
    
            R=moedinger
            DELTA=481  (313 added, 38 deleted, 130 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=34007
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@249 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
--- a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
@@ -330,21 +330,21 @@
   public void testPropertiesOnInterface() throws Exception {
     testSame("/** @interface */ var I = function() {};" +
         "/** @type {number} */ I.prototype.bar;" +
         "I.prototype.baz = function(){};");
 
     Var i = globalScope.getVar("I");
     assertEquals("function (this:I): ?", i.getType().toString());
     assertTrue(i.getType().isInterface());
 
     ObjectType iPrototype = (ObjectType)
         ((ObjectType) i.getType()).getPropertyType("prototype");
     assertEquals("I.prototype", iPrototype.toString());
     assertTrue(iPrototype.isFunctionPrototypeType());
 
     assertEquals("number", iPrototype.getPropertyType("bar").toString());
-    assertEquals("function (this:I): ?",
+    assertEquals("function (this:I): undefined",
         iPrototype.getPropertyType("baz").toString());
 
     assertEquals(iPrototype, globalScope.getVar("I.prototype").getType());
   }
 

commit a9757e8c7d85f9ee9622b3e5352955ba3429733d
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue May 18 13:06:01 2010

    Change on 2010/05/17 by robby
    
            Check for non-alias locals in ScopedAliases.
    
            R=nick
            DELTA=26  (22 added, 3 deleted, 1 changed)
    
    Change on 2010/05/18 by nick
    
            Add inferred return types.
            Make the inf/sup relationship for function types a bit richer.
            Make sure that the [call] pointer can never be null.
    
            R=andrew
            DELTA=192  (134 added, 30 deleted, 28 changed)
    
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4001
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@216 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
--- a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
@@ -339,21 +339,21 @@
   public void testPropertiesOnInterface() throws Exception {
     testSame("/** @interface */ var I = function() {};" +
         "/** @type {number} */ I.prototype.bar;" +
         "I.prototype.baz = function(){};");
 
     Var i = globalScope.getVar("I");
-    assertEquals("function (this:I)", i.getType().toString());
+    assertEquals("function (this:I): ?", i.getType().toString());
     assertTrue(i.getType().isInterface());
 
     ObjectType iPrototype = (ObjectType)
         ((ObjectType) i.getType()).getPropertyType("prototype");
     assertEquals("I.prototype", iPrototype.toString());
     assertTrue(iPrototype.isFunctionPrototypeType());
 
     assertEquals("number", iPrototype.getPropertyType("bar").toString());
     assertEquals("function (this:I): ?",
         iPrototype.getPropertyType("baz").toString());
 
     assertEquals(iPrototype, globalScope.getVar("I.prototype").getType());
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
@@ -0,0 +333,21 @@
+  public void testPropertiesOnInterface() throws Exception {
+    testSame("/** @interface */ var I = function() {};" +
+        "/** @type {number} */ I.prototype.bar;" +
+        "I.prototype.baz = function(){};");
+
+    Var i = globalScope.getVar("I");
+    assertEquals("function (this:I)", i.getType().toString());
+    assertTrue(i.getType().isInterface());
+
+    ObjectType iPrototype = (ObjectType)
+        ((ObjectType) i.getType()).getPropertyType("prototype");
+    assertEquals("I.prototype", iPrototype.toString());
+    assertTrue(iPrototype.isFunctionPrototypeType());
+
+    assertEquals("number", iPrototype.getPropertyType("bar").toString());
+    assertEquals("function (this:I): ?",
+        iPrototype.getPropertyType("baz").toString());
+
+    assertEquals(iPrototype, globalScope.getVar("I.prototype").getType());
+  }
+
