commit 465282f1ca28a208b06c47b55fd292d4631c55da
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Jun 22 20:19:37 2010

    Change on 2010/06/22 by nicksantos
    
            Inferred return types.
            Fixes issue 143.
            I eventually decided that it was wrong for the subtype's method
            to affect the supertype's method, since this will make incremental
            compilation a lot harder in the long run.
    
            R=moedinger
            DELTA=481  (313 added, 38 deleted, 130 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=34007
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@249 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CodePrinterTest.java b/test/com/google/javascript/jscomp/CodePrinterTest.java
--- a/test/com/google/javascript/jscomp/CodePrinterTest.java
+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java
@@ -639,19 +650,20 @@
   public void testTypeAnnotationsMember() {
     assertTypeAnnotations("var a = {};"
         + "/** @constructor */ a.Foo = function(){}"
         + "/** @param {string} foo\n"
         + "  * @return {number} */\n"
-        + "a.Foo.prototype.foo = function(foo) {};"
+        + "a.Foo.prototype.foo = function(foo) { return 3; };"
         + "/** @type {string|undefined} */"
         + "a.Foo.prototype.bar = '';",
         "var a = {};\n"
-        + "/**\n * @constructor\n */\na.Foo = function() {\n};\n"
+        + "/**\n * @return {undefined}\n * @constructor\n */\n"
+        + "a.Foo = function() {\n};\n"
         + "/**\n"
         + " * @param {string} foo\n"
         + " * @return {number}\n"
         + " */\n"
-        + "a.Foo.prototype.foo = function(foo) {\n};\n"
+        + "a.Foo.prototype.foo = function(foo) {\n  return 3\n};\n"
         + "/** @type {string} */\n"
         + "a.Foo.prototype.bar = \"\"");
   }
 

commit 80fe41fd0173c3eaa56f4abb783031966ea89cef
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Apr 12 10:59:39 2010

    Change on 2010/04/09 by john
    
            Part II: Use global RegExp reference information to optimize references when possible.
    
            R=alan
            DELTA=231  (173 added, 17 deleted, 41 changed)
    
    Change on 2010/04/09 by nicksantos
    
            Make JsFileLineParser much more efficient for large files
            (we were running into problems with it running out of memory.)
    
            R=andrew
            DELTA=192  (157 added, 1 deleted, 34 changed)
    
    Change on 2010/04/09 by alan
    
            Fix typed code gen crash when generating typed code.
    
            R=nicksantos
            DELTA=35  (24 added, 2 deleted, 9 changed)
    
    Change on 2010/04/09 by alan
    
            Disable method motion on functions that reads closure variables.
    
            R=nicksantos
            DELTA=171  (162 added, 1 deleted, 8 changed)
    
    Change on 2010/04/12 by nada
    
            In AmbiguateProperties, invert the related type relationship, by
            considering subclasses and implementors (down) instead of superclasses
            and implemented interfaces (up). This has two advantages:
    
            - The 'independent of' relationship is simplified, because we only
              need to consider whether the related types intersect.
    
            - We can account for 'multiple inheritance', which is a practical
              issue because of interfaces.
    
            Note that the 'up' relationship allows us to easily find common
            ancestors while the 'down' relationship allows us to easily find
            common descendants -- and this is what we care about for ambiguation.
    
    
            R=moedinger
            DELTA=173  (124 added, 15 deleted, 34 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=mwgnge
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@180 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CodePrinterTest.java b/test/com/google/javascript/jscomp/CodePrinterTest.java
--- a/test/com/google/javascript/jscomp/CodePrinterTest.java
+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java
@@ -616,19 +617,19 @@
   public void testTypeAnnotationsMember() {
     assertTypeAnnotations("var a = {};"
         + "/** @constructor */ a.Foo = function(){}"
         + "/** @param {string} foo\n"
         + "  * @return {number} */\n"
         + "a.Foo.prototype.foo = function(foo) {};"
         + "/** @type {string|undefined} */"
         + "a.Foo.prototype.bar = '';",
         "var a = {};\n"
         + "/**\n * @constructor\n */\na.Foo = function() {\n};\n"
         + "/**\n"
         + " * @param {string} foo\n"
         + " * @return {number}\n"
         + " */\n"
         + "a.Foo.prototype.foo = function(foo) {\n};\n"
-        + "/** @type {(string|undefined)} */\n"
+        + "/** @type {string} */\n"
         + "a.Foo.prototype.bar = \"\"");
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CodePrinterTest.java b/test/com/google/javascript/jscomp/CodePrinterTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java
@@ -0,0 +428,19 @@
+  public void testTypeAnnotationsMember() {
+    assertTypeAnnotations("var a = {};"
+        + "/** @constructor */ a.Foo = function(){}"
+        + "/** @param {string} foo\n"
+        + "  * @return {number} */\n"
+        + "a.Foo.prototype.foo = function(foo) {};"
+        + "/** @type {string|undefined} */"
+        + "a.Foo.prototype.bar = '';",
+        "var a = {};\n"
+        + "/**\n * @constructor\n */\na.Foo = function() {\n};\n"
+        + "/**\n"
+        + " * @param {string} foo\n"
+        + " * @return {number}\n"
+        + " */\n"
+        + "a.Foo.prototype.foo = function(foo) {\n};\n"
+        + "/** @type {(string|undefined)} */\n"
+        + "a.Foo.prototype.bar = \"\"");
+  }
+
