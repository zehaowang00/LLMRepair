commit 86929f800ff4e67135859f33b9adfc84484111b1
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Sun Oct 18 10:17:22 2009

    Fixed issue 122
    In order to allow user to use single any() matcher for varargs I introduce anyVararg() matcher
    Unfortunately, it is not possible to use (Object[]) anyObject() to match any vararg due to the fact that verification picks up extra redundant invocations. Also it would have broken the backwards compatibility.
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401617

diff --git a/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java b/test/org/mockitousage/bugs/varargs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
--- a/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
+++ b/test/org/mockitousage/bugs/varargs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
@@ -36,10 +43,10 @@
-    public void shouldVerifyCorrectlyWithVarargs() {
+    public void shouldVerifyCorrectlyNumberOfInvocationsWithVarargs() {
         //when
         table.newRow("qux", "foo", "bar", "baz");
         table.newRow("abc", "def");
         
         //then
         verify(table).newRow(anyString(), eq("foo"), anyString(), anyString());
         verify(table).newRow(anyString(), anyString());
     }
 }
\ No newline at end of file

commit 244bf2d3ec0d516f0f215603a0aa9c8c93e2ece0
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Wed Jun 17 08:19:21 2009

    In order to avoid regression reverted the fix for issue 62 (making anyObject() more convenient with varargs).
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401521

diff --git a/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java b/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
--- a/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
+++ b/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
@@ -26,11 +36,10 @@
     public void shouldVerifyCorrectlyWithVarargs() {
         //when
         table.newRow("qux", "foo", "bar", "baz");
         table.newRow("abc", "def");
         
         //then
         verify(table).newRow(anyString(), eq("foo"), anyString(), anyString());
         verify(table).newRow(anyString(), anyString());
-        verify(table, times(2)).newRow(anyString(), (String[]) anyObject());
     }
 }
\ No newline at end of file

commit ab342c40f4c1ba20ac5d46a6747b531e1c7bce23
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Tue Jun 16 16:39:34 2009

    In order to keep in 'mockitousage' package only tests that are real usages of mockito I moved some tests around
    
    --HG--
    rename : test/org/mockitousage/internal/debugging/LocationTest.java => test/org/mockito/internal/debugging/LocationTest.java
    rename : test/org/mockitousage/internal/invocation/realmethod/FilteredCGLIBProxyRealMethodTest.java => test/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethodTest.java
    rename : test/org/mockitousage/matchers/ComparableMatchersTest.java => test/org/mockito/internal/matchers/ComparableMatchersTest.java
    rename : test/org/mockitousage/warnings/CollectingDebugDataTest.java => test/org/mockito/internal/runners/CollectingDebugDataTest.java
    rename : test/org/mockitousage/configuration/MockitoConfigurationTest.java => test/org/mockitousage/configuration/CustomizedAnnotationForSmartMockTest.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401512

diff --git a/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java b/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
--- /dev/null
+++ b/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java
@@ -0,0 +26,11 @@
+    public void shouldVerifyCorrectlyWithVarargs() {
+        //when
+        table.newRow("qux", "foo", "bar", "baz");
+        table.newRow("abc", "def");
+        
+        //then
+        verify(table).newRow(anyString(), eq("foo"), anyString(), anyString());
+        verify(table).newRow(anyString(), anyString());
+        verify(table, times(2)).newRow(anyString(), (String[]) anyObject());
+    }
+}
\ No newline at end of file
