commit dc205824dbc289acbcde919e430176ad72da847f
Author: pimterry <pimterry@gmail.com>
Date:   Mon Dec 15 18:30:26 2014

    Stop anyX() methods matching null inputs
    
    Fixes #134

diff --git a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
--- a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
@@ -44,20 +44,20 @@
-    public void shouldAcceptNullsInAllPrimitiveWrapperAnyMatchers() {
+    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers() {
         when(mock.forInteger(anyInt())).thenReturn("0");
         when(mock.forCharacter(anyChar())).thenReturn("1");
         when(mock.forShort(anyShort())).thenReturn("2");
         when(mock.forByte(anyByte())).thenReturn("3");
         when(mock.forBoolean(anyBoolean())).thenReturn("4");
         when(mock.forLong(anyLong())).thenReturn("5");
         when(mock.forFloat(anyFloat())).thenReturn("6");
         when(mock.forDouble(anyDouble())).thenReturn("7");
         
-        assertEquals("0", mock.forInteger(null));
-        assertEquals("1", mock.forCharacter(null));
-        assertEquals("2", mock.forShort(null));
-        assertEquals("3", mock.forByte(null));
-        assertEquals("4", mock.forBoolean(null));
-        assertEquals("5", mock.forLong(null));
-        assertEquals("6", mock.forFloat(null));
-        assertEquals("7", mock.forDouble(null));
+        assertEquals(null, mock.forInteger(null));
+        assertEquals(null, mock.forCharacter(null));
+        assertEquals(null, mock.forShort(null));
+        assertEquals(null, mock.forByte(null));
+        assertEquals(null, mock.forBoolean(null));
+        assertEquals(null, mock.forLong(null));
+        assertEquals(null, mock.forFloat(null));
+        assertEquals(null, mock.forDouble(null));
     }
 }
\ No newline at end of file

commit d5fbea104b183befe03037ce18b186cfc92da239
Author: pimterry <pimterry@gmail.com>
Date:   Mon Dec 15 18:03:07 2014

    Fix misspelled and slightly unclear test name

diff --git a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
--- a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
@@ -44,20 +44,20 @@
-    public void shouldAnyPrimiteWraperMatchersAcceptNull() {
+    public void shouldAcceptNullsInAllPrimitiveWrapperAnyMatchers() {
         when(mock.forInteger(anyInt())).thenReturn("0");
         when(mock.forCharacter(anyChar())).thenReturn("1");
         when(mock.forShort(anyShort())).thenReturn("2");
         when(mock.forByte(anyByte())).thenReturn("3");
         when(mock.forBoolean(anyBoolean())).thenReturn("4");
         when(mock.forLong(anyLong())).thenReturn("5");
         when(mock.forFloat(anyFloat())).thenReturn("6");
         when(mock.forDouble(anyDouble())).thenReturn("7");
         
         assertEquals("0", mock.forInteger(null));
         assertEquals("1", mock.forCharacter(null));
         assertEquals("2", mock.forShort(null));
         assertEquals("3", mock.forByte(null));
         assertEquals("4", mock.forBoolean(null));
         assertEquals("5", mock.forLong(null));
         assertEquals("6", mock.forFloat(null));
         assertEquals("7", mock.forDouble(null));
     }
 }
\ No newline at end of file

commit d94c8c1c49e4df51cd50e47bce3c6667b80bcd89
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Tue Mar 31 05:48:45 2009

    Fixed enhancement 65
    New matcher: anySet() matches any set or null
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401284

diff --git a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
--- a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
@@ -1,61 +44,20 @@
-/*
- * Copyright (c) 2007 Mockito contributors
- * This program is made available under the terms of the MIT License.
- */
-package org.mockitousage.matchers;
-
-import static org.mockito.Matchers.*;
-import static org.mockito.Mockito.*;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.mockito.Mockito;
-import org.mockitousage.IMethods;
-import org.mockitoutil.TestBase;
-
-@SuppressWarnings("unchecked")
-public class AnyXMatchersAcceptNullsTest extends TestBase {
-    
-    private IMethods mock;
-
-    @Before
-    public void setUp() {
-        mock = Mockito.mock(IMethods.class);
-    }
-
-    @Test
-    public void shouldAnyXMatchersAcceptNull() {
-        when(mock.oneArg(anyObject())).thenReturn("0");
-        when(mock.oneArg(anyString())).thenReturn("1");
-        when(mock.forList(anyList())).thenReturn("2");
-        when(mock.forMap(anyMap())).thenReturn("3");
-        when(mock.forCollection(anyCollection())).thenReturn("4");
-        
-        assertEquals("0", mock.oneArg((Object) null));
-        assertEquals("1", mock.oneArg((String) null));
-        assertEquals("2", mock.forList(null));
-        assertEquals("3", mock.forMap(null));
-        assertEquals("4", mock.forCollection(null));
-    }
-    
-    @Test
-    public void shouldAnyPrimiteWraperMatchersAcceptNull() {
-        when(mock.forInteger(anyInt())).thenReturn("0");
-        when(mock.forCharacter(anyChar())).thenReturn("1");
-        when(mock.forShort(anyShort())).thenReturn("2");
-        when(mock.forByte(anyByte())).thenReturn("3");
-        when(mock.forBoolean(anyBoolean())).thenReturn("4");
-        when(mock.forLong(anyLong())).thenReturn("5");
-        when(mock.forFloat(anyFloat())).thenReturn("6");
-        when(mock.forDouble(anyDouble())).thenReturn("7");
-        
-        assertEquals("0", mock.forInteger(null));
-        assertEquals("1", mock.forCharacter(null));
-        assertEquals("2", mock.forShort(null));
-        assertEquals("3", mock.forByte(null));
-        assertEquals("4", mock.forBoolean(null));
-        assertEquals("5", mock.forLong(null));
-        assertEquals("6", mock.forFloat(null));
-        assertEquals("7", mock.forDouble(null));
-    }
+    public void shouldAnyPrimiteWraperMatchersAcceptNull() {
+        when(mock.forInteger(anyInt())).thenReturn("0");
+        when(mock.forCharacter(anyChar())).thenReturn("1");
+        when(mock.forShort(anyShort())).thenReturn("2");
+        when(mock.forByte(anyByte())).thenReturn("3");
+        when(mock.forBoolean(anyBoolean())).thenReturn("4");
+        when(mock.forLong(anyLong())).thenReturn("5");
+        when(mock.forFloat(anyFloat())).thenReturn("6");
+        when(mock.forDouble(anyDouble())).thenReturn("7");
+        
+        assertEquals("0", mock.forInteger(null));
+        assertEquals("1", mock.forCharacter(null));
+        assertEquals("2", mock.forShort(null));
+        assertEquals("3", mock.forByte(null));
+        assertEquals("4", mock.forBoolean(null));
+        assertEquals("5", mock.forLong(null));
+        assertEquals("6", mock.forFloat(null));
+        assertEquals("7", mock.forDouble(null));
+    }
 }
\ No newline at end of file

commit 97194a6efa55ccaaec277fab470c076cb448c003
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri Aug 29 15:31:03 2008

    removed deprecation warnings
    javadoc fixes
    added package.html
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40841

diff --git a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
--- a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
@@ -1,61 +1,61 @@
 /*
  * Copyright (c) 2007 Mockito contributors
  * This program is made available under the terms of the MIT License.
  */
 package org.mockitousage.matchers;
 
 import static org.mockito.Matchers.*;
 import static org.mockito.Mockito.*;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.mockito.Mockito;
 import org.mockitousage.IMethods;
 import org.mockitoutil.TestBase;
 
 @SuppressWarnings("unchecked")
 public class AnyXMatchersAcceptNullsTest extends TestBase {
     
     private IMethods mock;
 
     @Before
     public void setUp() {
         mock = Mockito.mock(IMethods.class);
     }
 
     @Test
     public void shouldAnyXMatchersAcceptNull() {
-        stub(mock.oneArg(anyObject())).toReturn("0");
-        stub(mock.oneArg(anyString())).toReturn("1");
-        stub(mock.forList(anyList())).toReturn("2");
-        stub(mock.forMap(anyMap())).toReturn("3");
-        stub(mock.forCollection(anyCollection())).toReturn("4");
+        when(mock.oneArg(anyObject())).thenReturn("0");
+        when(mock.oneArg(anyString())).thenReturn("1");
+        when(mock.forList(anyList())).thenReturn("2");
+        when(mock.forMap(anyMap())).thenReturn("3");
+        when(mock.forCollection(anyCollection())).thenReturn("4");
         
         assertEquals("0", mock.oneArg((Object) null));
         assertEquals("1", mock.oneArg((String) null));
         assertEquals("2", mock.forList(null));
         assertEquals("3", mock.forMap(null));
         assertEquals("4", mock.forCollection(null));
     }
     
     @Test
     public void shouldAnyPrimiteWraperMatchersAcceptNull() {
-        stub(mock.forInteger(anyInt())).toReturn("0");
-        stub(mock.forCharacter(anyChar())).toReturn("1");
-        stub(mock.forShort(anyShort())).toReturn("2");
-        stub(mock.forByte(anyByte())).toReturn("3");
-        stub(mock.forBoolean(anyBoolean())).toReturn("4");
-        stub(mock.forLong(anyLong())).toReturn("5");
-        stub(mock.forFloat(anyFloat())).toReturn("6");
-        stub(mock.forDouble(anyDouble())).toReturn("7");
+        when(mock.forInteger(anyInt())).thenReturn("0");
+        when(mock.forCharacter(anyChar())).thenReturn("1");
+        when(mock.forShort(anyShort())).thenReturn("2");
+        when(mock.forByte(anyByte())).thenReturn("3");
+        when(mock.forBoolean(anyBoolean())).thenReturn("4");
+        when(mock.forLong(anyLong())).thenReturn("5");
+        when(mock.forFloat(anyFloat())).thenReturn("6");
+        when(mock.forDouble(anyDouble())).thenReturn("7");
         
         assertEquals("0", mock.forInteger(null));
         assertEquals("1", mock.forCharacter(null));
         assertEquals("2", mock.forShort(null));
         assertEquals("3", mock.forByte(null));
         assertEquals("4", mock.forBoolean(null));
         assertEquals("5", mock.forLong(null));
         assertEquals("6", mock.forFloat(null));
         assertEquals("7", mock.forDouble(null));
     }
 }
\ No newline at end of file

commit 6519feaad2f1a1cfdc9403e0ec7a7e6001aa1078
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Wed Jul 16 14:59:36 2008

    second batch of implementing doReturn() API
    moved TestBase around to stop stack trace filtering
    
    --HG--
    rename : src/org/mockito/internal/stubbing/ExceptionsValidator.java => src/org/mockito/internal/stubbing/AnswersValidator.java
    rename : test/org/mockito/StateResetter.java => test/org/mockito/StateMaster.java
    rename : test/org/mockito/internal/stubbing/ExceptionsValidatorTest.java => test/org/mockito/internal/stubbing/AnswersValidatorTest.java
    rename : test/org/mockito/util/Assertor.java => test/org/mockitoutil/Assertor.java
    rename : test/org/mockito/util/ExtraMatchers.java => test/org/mockitoutil/ExtraMatchers.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40675

diff --git a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
--- a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
@@ -1,61 +1,61 @@
 /*
  * Copyright (c) 2007 Mockito contributors
  * This program is made available under the terms of the MIT License.
  */
 package org.mockitousage.matchers;
 
 import static org.mockito.Matchers.*;
 import static org.mockito.Mockito.*;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.mockito.Mockito;
-import org.mockito.TestBase;
 import org.mockitousage.IMethods;
+import org.mockitoutil.TestBase;
 
 @SuppressWarnings("unchecked")
 public class AnyXMatchersAcceptNullsTest extends TestBase {
     
     private IMethods mock;
 
     @Before
     public void setUp() {
         mock = Mockito.mock(IMethods.class);
     }
 
     @Test
     public void shouldAnyXMatchersAcceptNull() {
         stub(mock.oneArg(anyObject())).toReturn("0");
         stub(mock.oneArg(anyString())).toReturn("1");
         stub(mock.forList(anyList())).toReturn("2");
         stub(mock.forMap(anyMap())).toReturn("3");
         stub(mock.forCollection(anyCollection())).toReturn("4");
         
         assertEquals("0", mock.oneArg((Object) null));
         assertEquals("1", mock.oneArg((String) null));
         assertEquals("2", mock.forList(null));
         assertEquals("3", mock.forMap(null));
         assertEquals("4", mock.forCollection(null));
     }
     
     @Test
     public void shouldAnyPrimiteWraperMatchersAcceptNull() {
         stub(mock.forInteger(anyInt())).toReturn("0");
         stub(mock.forCharacter(anyChar())).toReturn("1");
         stub(mock.forShort(anyShort())).toReturn("2");
         stub(mock.forByte(anyByte())).toReturn("3");
         stub(mock.forBoolean(anyBoolean())).toReturn("4");
         stub(mock.forLong(anyLong())).toReturn("5");
         stub(mock.forFloat(anyFloat())).toReturn("6");
         stub(mock.forDouble(anyDouble())).toReturn("7");
         
         assertEquals("0", mock.forInteger(null));
         assertEquals("1", mock.forCharacter(null));
         assertEquals("2", mock.forShort(null));
         assertEquals("3", mock.forByte(null));
         assertEquals("4", mock.forBoolean(null));
         assertEquals("5", mock.forLong(null));
         assertEquals("6", mock.forFloat(null));
         assertEquals("7", mock.forDouble(null));
     }
 }
\ No newline at end of file

commit 56b350361e2c67a9caa8fe52939e45672cf9a57a
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Mon Jun 16 13:24:31 2008

    mean checkin (worked offline).
    Made anyX matchers allow nulls
    Added few handy matchers: anyList(), anyMap(), anyCollection()
    made printing of invocations slightly nicer: if one is printed in multiline-style the other one will be printed in multi lines as well
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40626

diff --git a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
--- a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
@@ -1,46 +1,61 @@
 /*
  * Copyright (c) 2007 Mockito contributors
  * This program is made available under the terms of the MIT License.
  */
 package org.mockitousage.matchers;
 
 import static org.mockito.Matchers.*;
 import static org.mockito.Mockito.*;
 
 import org.junit.Before;
-import org.junit.Ignore;
 import org.junit.Test;
 import org.mockito.Mockito;
 import org.mockito.TestBase;
 import org.mockitousage.IMethods;
 
 @SuppressWarnings("unchecked")
 public class AnyXMatchersAcceptNullsTest extends TestBase {
     
     private IMethods mock;
 
     @Before
     public void setUp() {
         mock = Mockito.mock(IMethods.class);
     }
 
-    @Ignore
     @Test
     public void shouldAnyXMatchersAcceptNull() {
         stub(mock.oneArg(anyObject())).toReturn("0");
         stub(mock.oneArg(anyString())).toReturn("1");
-        stub(mock.oneArg(anyInt())).toReturn("2");
+        stub(mock.forList(anyList())).toReturn("2");
+        stub(mock.forMap(anyMap())).toReturn("3");
+        stub(mock.forCollection(anyCollection())).toReturn("4");
         
         assertEquals("0", mock.oneArg((Object) null));
         assertEquals("1", mock.oneArg((String) null));
-        assertEquals("2", mock.oneArg((Integer) null));
+        assertEquals("2", mock.forList(null));
+        assertEquals("3", mock.forMap(null));
+        assertEquals("4", mock.forCollection(null));
     }
     
-    
-    
-//        TODO add anyList()       matcher
-//        TODO add anyMap()        matcher
-//        TODO add anyCollection() matcher
-//        TODO add anySet() matcher
-    
+    @Test
+    public void shouldAnyPrimiteWraperMatchersAcceptNull() {
+        stub(mock.forInteger(anyInt())).toReturn("0");
+        stub(mock.forCharacter(anyChar())).toReturn("1");
+        stub(mock.forShort(anyShort())).toReturn("2");
+        stub(mock.forByte(anyByte())).toReturn("3");
+        stub(mock.forBoolean(anyBoolean())).toReturn("4");
+        stub(mock.forLong(anyLong())).toReturn("5");
+        stub(mock.forFloat(anyFloat())).toReturn("6");
+        stub(mock.forDouble(anyDouble())).toReturn("7");
+        
+        assertEquals("0", mock.forInteger(null));
+        assertEquals("1", mock.forCharacter(null));
+        assertEquals("2", mock.forShort(null));
+        assertEquals("3", mock.forByte(null));
+        assertEquals("4", mock.forBoolean(null));
+        assertEquals("5", mock.forLong(null));
+        assertEquals("6", mock.forFloat(null));
+        assertEquals("7", mock.forDouble(null));
+    }
 }
\ No newline at end of file

commit 66b6c1ddc099393d1a2d419b7486a609329341f5
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Thu Jun 5 07:28:22 2008

    added TODOs and ignored test so that I will not forget to change the behaviour of anyX() matchers
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40621

diff --git a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
--- /dev/null
+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2007 Mockito contributors
+ * This program is made available under the terms of the MIT License.
+ */
+package org.mockitousage.matchers;
+
+import static org.mockito.Matchers.*;
+import static org.mockito.Mockito.*;
+
+import org.junit.Before;
+import org.junit.Ignore;
+import org.junit.Test;
+import org.mockito.Mockito;
+import org.mockito.TestBase;
+import org.mockitousage.IMethods;
+
+@SuppressWarnings("unchecked")
+public class AnyXMatchersAcceptNullsTest extends TestBase {
+    
+    private IMethods mock;
+
+    @Before
+    public void setUp() {
+        mock = Mockito.mock(IMethods.class);
+    }
+
+    @Ignore
+    @Test
+    public void shouldAnyXMatchersAcceptNull() {
+        stub(mock.oneArg(anyObject())).toReturn("0");
+        stub(mock.oneArg(anyString())).toReturn("1");
+        stub(mock.oneArg(anyInt())).toReturn("2");
+        
+        assertEquals("0", mock.oneArg((Object) null));
+        assertEquals("1", mock.oneArg((String) null));
+        assertEquals("2", mock.oneArg((Integer) null));
+    }
+    
+    
+    
+//        TODO add anyList()       matcher
+//        TODO add anyMap()        matcher
+//        TODO add anyCollection() matcher
+//        TODO add anySet() matcher
+    
+}
\ No newline at end of file
