commit 0907b6618a60b2de23c8f7ec2217a37dc5e9a091
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri Dec 17 19:47:28 2010

    Fix improper analysis of NEW, the bad way:
    by assuming NEW always returns a non-local result.
    Fixes issue 303.
    
    R=johnlenz
    DELTA=68  (56 added, 0 deleted, 12 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=161
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@647 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
--- a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
+++ b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
@@ -202,8 +237,12 @@
   public void testAnnotationInExterns_new4() throws Exception {
     // The entire expression containing "externObjSEThisMethod" is considered
     // side-effect free in this context.
+
     checkMarkedCalls("new externObjSEThis().externObjSEThisMethod('')",
-        ImmutableList.<String>of(
-            "externObjSEThis", "NEW STRING externObjSEThisMethod"));
+        BROKEN_NEW ?
+            ImmutableList.<String>of(
+               "externObjSEThis") :
+            ImmutableList.<String>of(
+               "externObjSEThis", "NEW STRING externObjSEThisMethod"));
   }
 

commit 6a2378d43d1f06344f6418388d45c66fe3466a07
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Sep 27 19:16:58 2010

    Take advantage of the finer grain side-effect information when
    determining side-effects.
    The bulk of the changes here are the move of the "isKnownLocalValue"
    function and its tests from to NodeUtil/NodeUtilTest.
    
    R=nicksantos
    DELTA=664  (419 added, 201 deleted, 44 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=260873
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@466 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
--- a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
+++ b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
@@ -203,8 +202,8 @@
   public void testAnnotationInExterns_new4() throws Exception {
-    // TODO(johnlenz): We would like the entire expression containing
-    // "externObjSEThisMethod" to be considered side-effect free
-    // in this context, but not yet, and maybe not here.
+    // The entire expression containing "externObjSEThisMethod" is considered
+    // side-effect free in this context.
     checkMarkedCalls("new externObjSEThis().externObjSEThisMethod('')",
-        ImmutableList.<String>of("externObjSEThis"));
+        ImmutableList.<String>of(
+            "externObjSEThis", "NEW STRING externObjSEThisMethod"));
   }
 

commit 92d3cd3eaa7d7e8b5b36322e9bab8eabe6a53c01
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri Sep 24 14:11:37 2010

    Use new @modifies{this} annotations
    
    R=avd
    DELTA=214  (185 added, 4 deleted, 25 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=249465
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@460 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
--- a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
+++ b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
@@ -167,0 +203,8 @@
+  public void testAnnotationInExterns_new4() throws Exception {
+    // TODO(johnlenz): We would like the entire expression containing
+    // "externObjSEThisMethod" to be considered side-effect free
+    // in this context, but not yet, and maybe not here.
+    checkMarkedCalls("new externObjSEThis().externObjSEThisMethod('')",
+        ImmutableList.<String>of("externObjSEThis"));
+  }
+
