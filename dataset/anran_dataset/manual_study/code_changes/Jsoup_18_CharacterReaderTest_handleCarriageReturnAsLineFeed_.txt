commit 3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Mon May 28 23:59:27 2012

    No longer strip \r before parsing.
    
    This saves memory and CPU time at start of parse.

diff --git a/src/test/java/org/jsoup/parser/CharacterReaderTest.java b/src/test/java/org/jsoup/parser/CharacterReaderTest.java
index 69fd7d4a..ce573f26 100644
--- a/src/test/java/org/jsoup/parser/CharacterReaderTest.java
+++ b/src/test/java/org/jsoup/parser/CharacterReaderTest.java
@@ -61,15 +61,6 @@
         assertEquals('n', r.consume());
     }
 
-    @Test public void handleCarriageReturnAsLineFeed() {
-        String in = "one \r two \r\n three";
-        CharacterReader r = new CharacterReader(in);
-
-        String first = r.consumeTo('\n');
-        assertEquals("one ", first);
-        assertEquals("\n two \n three", r.consumeToEnd());
-    }
-
     @Test public void consumeToEnd() {
         String in = "one two three";
         CharacterReader r = new CharacterReader(in);

commit 128b3f8212e357468cb608546a52da3826903fad
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Thu Jun 23 07:48:42 2011

    Fixed normalisation of carriage returns to newlines on input HTML
    
    Fixes #110

diff --git a/src/test/java/org/jsoup/parser/CharacterReaderTest.java b/src/test/java/org/jsoup/parser/CharacterReaderTest.java
index 8cee06e9..69fd7d4a 100644
--- a/src/test/java/org/jsoup/parser/CharacterReaderTest.java
+++ b/src/test/java/org/jsoup/parser/CharacterReaderTest.java
@@ -60,4 +60,21 @@
         r.rewindToMark();
         assertEquals('n', r.consume());
     }
+
+    @Test public void handleCarriageReturnAsLineFeed() {
+        String in = "one \r two \r\n three";
+        CharacterReader r = new CharacterReader(in);
+
+        String first = r.consumeTo('\n');
+        assertEquals("one ", first);
+        assertEquals("\n two \n three", r.consumeToEnd());
+    }
+
+    @Test public void consumeToEnd() {
+        String in = "one two three";
+        CharacterReader r = new CharacterReader(in);
+        String toEnd = r.consumeToEnd();
+        assertEquals(in, toEnd);
+        assertTrue(r.isEmpty());
+    }
 }
