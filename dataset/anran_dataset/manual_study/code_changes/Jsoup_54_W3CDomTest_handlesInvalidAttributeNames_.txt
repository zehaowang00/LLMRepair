commit f148f88de365c50eea28d3e14093e13c33104483
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Fri Aug 5 19:41:40 2016

    Normalize invalid attribute names in XML when converting
    
    Fixes #721

diff --git a/src/test/java/org/jsoup/helper/W3CDomTest.java b/src/test/java/org/jsoup/helper/W3CDomTest.java
index 569fbf18..bb3e2845 100644
--- a/src/test/java/org/jsoup/helper/W3CDomTest.java
+++ b/src/test/java/org/jsoup/helper/W3CDomTest.java
@@ -2,6 +2,7 @@
 
 import org.jsoup.Jsoup;
 import org.jsoup.integration.ParseTest;
+import org.jsoup.nodes.Element;
 import org.junit.Test;
 import org.w3c.dom.Document;
 import org.w3c.dom.Node;
@@ -79,5 +80,17 @@ public void namespacePreservation() throws IOException {
         assertEquals("section", xSection.getLocalName());
         assertEquals("x:section", xSection.getNodeName());
     }
+
+    @Test
+    public void handlesInvalidAttributeNames() {
+        String html = "<html><head></head><body style=\"color: red\" \" name\"></body></html>";
+        org.jsoup.nodes.Document jsoupDoc;
+        jsoupDoc = Jsoup.parse(html);
+        Element body = jsoupDoc.select("body").first();
+        assertTrue(body.hasAttr("\"")); // actually an attribute with key '"'. Correct per HTML5 spec, but w3c xml dom doesn't dig it
+        assertTrue(body.hasAttr("name\""));
+
+        Document w3Doc = new W3CDom().fromJsoup(jsoupDoc);
+    }
 }
 
