commit 97194a6efa55ccaaec277fab470c076cb448c003
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri Aug 29 15:31:03 2008

    removed deprecation warnings
    javadoc fixes
    added package.html
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40841

diff --git a/test/org/mockitousage/UsingVarargsTest.java b/test/org/mockitousage/UsingVarargsTest.java
--- a/test/org/mockitousage/UsingVarargsTest.java
+++ b/test/org/mockitousage/UsingVarargsTest.java
@@ -36,27 +36,27 @@
     public void shouldStubStringVarargs() {
-        stub(mock.withStringVarargsReturningString(1)).toReturn("1");
-        stub(mock.withStringVarargsReturningString(2, "1", "2", "3")).toReturn("2");
+        when(mock.withStringVarargsReturningString(1)).thenReturn("1");
+        when(mock.withStringVarargsReturningString(2, "1", "2", "3")).thenReturn("2");
         
         RuntimeException expected = new RuntimeException();
         stubVoid(mock).toThrow(expected).on().withStringVarargs(3, "1", "2", "3", "4");
 
         assertEquals("1", mock.withStringVarargsReturningString(1));
         assertEquals(null, mock.withStringVarargsReturningString(2));
         
         assertEquals("2", mock.withStringVarargsReturningString(2, "1", "2", "3"));
         assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2"));
         assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2", "3", "4"));
         assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2", "9999"));
         
         mock.withStringVarargs(3, "1", "2", "3", "9999");
         mock.withStringVarargs(9999, "1", "2", "3", "4");
         
         try {
             mock.withStringVarargs(3, "1", "2", "3", "4");
             fail();
         } catch (Exception e) {
             assertEquals(expected, e);
         }
     }
     
     @Test

commit 3133e1a7ab662c52c4350bdecb512874b7afe9b1
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Sat Dec 29 13:46:27 2007

    some refactorings and minor api changes
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40247

diff --git a/test/org/mockitousage/UsingVarargsTest.java b/test/org/mockitousage/UsingVarargsTest.java
--- a/test/org/mockitousage/UsingVarargsTest.java
+++ b/test/org/mockitousage/UsingVarargsTest.java
@@ -40,27 +40,27 @@
     public void shouldStubStringVarargs() {
-        stub(mock.withStringVarargsReturningString(1)).andReturn("1");
-        stub(mock.withStringVarargsReturningString(2, "1", "2", "3")).andReturn("2");
+        stub(mock.withStringVarargsReturningString(1)).toReturn("1");
+        stub(mock.withStringVarargsReturningString(2, "1", "2", "3")).toReturn("2");
         
         RuntimeException expected = new RuntimeException();
         stubVoid(mock).toThrow(expected).on().withStringVarargs(3, "1", "2", "3", "4");
 
         assertEquals("1", mock.withStringVarargsReturningString(1));
         assertEquals(null, mock.withStringVarargsReturningString(2));
         
         assertEquals("2", mock.withStringVarargsReturningString(2, "1", "2", "3"));
         assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2"));
         assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2", "3", "4"));
         assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2", "9999"));
         
         mock.withStringVarargs(3, "1", "2", "3", "9999");
         mock.withStringVarargs(9999, "1", "2", "3", "4");
         
         try {
             mock.withStringVarargs(3, "1", "2", "3", "4");
             fail();
         } catch (Exception e) {
             assertEquals(expected, e);
         }
     }
     
     @Test

commit b513df833a7bf4f2ae08a68b88535b5891a6e370
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Mon Nov 19 09:14:52 2007

    got rid of some todos, added more testing
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4034

diff --git a/test/org/mockito/usage/UsingVarargsTest.java b/test/org/mockito/usage/UsingVarargsTest.java
--- a/test/org/mockito/usage/UsingVarargsTest.java
+++ b/test/org/mockito/usage/UsingVarargsTest.java
@@ -33,0 +34,27 @@
+    public void shouldStubStringVarargs() {
+        stub(mock.withStringVarargsReturningString(1)).andReturn("1");
+        stub(mock.withStringVarargsReturningString(2, "1", "2", "3")).andReturn("2");
+        
+        RuntimeException expected = new RuntimeException();
+        stubVoid(mock).toThrow(expected).on().withStringVarargs(3, "1", "2", "3", "4");
+
+        assertEquals("1", mock.withStringVarargsReturningString(1));
+        assertEquals(null, mock.withStringVarargsReturningString(2));
+        
+        assertEquals("2", mock.withStringVarargsReturningString(2, "1", "2", "3"));
+        assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2"));
+        assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2", "3", "4"));
+        assertEquals(null, mock.withStringVarargsReturningString(2, "1", "2", "9999"));
+        
+        mock.withStringVarargs(3, "1", "2", "3", "9999");
+        mock.withStringVarargs(9999, "1", "2", "3", "4");
+        
+        try {
+            mock.withStringVarargs(3, "1", "2", "3", "4");
+            fail();
+        } catch (Exception e) {
+            assertEquals(expected, e);
+        }
+    }
+    
+    @Test
