commit 6924915efab89f921fd0779fe200fecc1bf80847
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri May 11 16:35:50 2012

    don't try to inline properties that we don't recognize, because
    they may be prototype properties.
    This isn't a perfect fix, but should get most cases.
    Fixes issue 724
    
    R=acleung
    DELTA=82  (47 added, 21 deleted, 14 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=4758
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1967 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
--- a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
+++ b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
@@ -293,20 +279,13 @@
   public void testObject22() {
     testLocal("while(1) { var a = {y:1}; if (b) a.x = 2; f(a.y, a.x);}",
       "for(;1;){" +
       " var JSCompiler_object_inline_y_0=1;" +
       " var JSCompiler_object_inline_x_1;" +
       " if(b) JSCompiler_object_inline_x_1=2;" +
       " f(JSCompiler_object_inline_y_0,JSCompiler_object_inline_x_1)" +
       "}");
 
     testLocal("var a; while (1) { f(a.x, a.y); a = {x:1, y:1};}",
-      "var JSCompiler_object_inline_x_0;" +
-      "var JSCompiler_object_inline_y_1;" +
-      "for(;1;) {" +
-      " f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1);" +
-      " JSCompiler_object_inline_x_0=1," +
-      " JSCompiler_object_inline_y_1=1," +
-      " true" +
-      "}");
+        "var a; while (1) { f(a.x, a.y); a = {x:1, y:1};}");
   }
 

commit 34de1a205f3c1e4eaed32ccc1aeea4197ddf57c0
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Jun 23 16:06:49 2011

    Limit InlineObjectLiterals to local scopes for now.
    
    R=acleung,nicksantos
    DELTA=92  (31 added, 4 deleted, 57 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=2400
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1203 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
--- a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
+++ b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
@@ -287,20 +293,20 @@
   public void testObject22() {
-    test("while(1) { var a = {y:1}; if (b) a.x = 2; f(a.y, a.x);}",
+    testLocal("while(1) { var a = {y:1}; if (b) a.x = 2; f(a.y, a.x);}",
       "for(;1;){" +
       " var JSCompiler_object_inline_y_0=1;" +
       " var JSCompiler_object_inline_x_1;" +
       " if(b) JSCompiler_object_inline_x_1=2;" +
       " f(JSCompiler_object_inline_y_0,JSCompiler_object_inline_x_1)" +
       "}");
 
-    test("var a; while (1) { f(a.x, a.y); a = {x:1, y:1};}",
+    testLocal("var a; while (1) { f(a.x, a.y); a = {x:1, y:1};}",
       "var JSCompiler_object_inline_x_0;" +
       "var JSCompiler_object_inline_y_1;" +
       "for(;1;) {" +
       " f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1);" +
       " JSCompiler_object_inline_x_0=1," +
       " JSCompiler_object_inline_y_1=1," +
       " true" +
       "}");
   }
 

commit 5fd1037e79cbdbf8fb5734f40c604a145ada03b2
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Jun 16 21:12:08 2011

    Fix inline object literals pass: referenced name blacklisting and
    side-effect ordering.
    
    R=acleung
    DELTA=119  (73 added, 28 deleted, 18 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=2322
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1190 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
--- a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
+++ b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
@@ -276,18 +287,20 @@
   public void testObject22() {
     test("while(1) { var a = {y:1}; if (b) a.x = 2; f(a.y, a.x);}",
       "for(;1;){" +
       " var JSCompiler_object_inline_y_0=1;" +
       " var JSCompiler_object_inline_x_1;" +
       " if(b) JSCompiler_object_inline_x_1=2;" +
       " f(JSCompiler_object_inline_y_0,JSCompiler_object_inline_x_1)" +
       "}");
+
     test("var a; while (1) { f(a.x, a.y); a = {x:1, y:1};}",
-      "var JSCompiler_object_inline_y_1;" +
       "var JSCompiler_object_inline_x_0;" +
+      "var JSCompiler_object_inline_y_1;" +
       "for(;1;) {" +
       " f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1);" +
       " JSCompiler_object_inline_x_0=1," +
       " JSCompiler_object_inline_y_1=1," +
       " true" +
       "}");
   }
+

commit ab11c6a445cea2045b5e8e8cbe0686f6fadc98df
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Jun 7 12:16:26 2011

    Limit the cases where InlineObjectLiterals performs its work.
    
    R=fmeawad
    DELTA=88  (59 added, 22 deleted, 7 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=2198
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1163 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
--- a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
+++ b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java
@@ -248,0 +276,18 @@
+  public void testObject22() {
+    test("while(1) { var a = {y:1}; if (b) a.x = 2; f(a.y, a.x);}",
+      "for(;1;){" +
+      " var JSCompiler_object_inline_y_0=1;" +
+      " var JSCompiler_object_inline_x_1;" +
+      " if(b) JSCompiler_object_inline_x_1=2;" +
+      " f(JSCompiler_object_inline_y_0,JSCompiler_object_inline_x_1)" +
+      "}");
+    test("var a; while (1) { f(a.x, a.y); a = {x:1, y:1};}",
+      "var JSCompiler_object_inline_y_1;" +
+      "var JSCompiler_object_inline_x_0;" +
+      "for(;1;) {" +
+      " f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1);" +
+      " JSCompiler_object_inline_x_0=1," +
+      " JSCompiler_object_inline_y_1=1," +
+      " true" +
+      "}");
+  }
