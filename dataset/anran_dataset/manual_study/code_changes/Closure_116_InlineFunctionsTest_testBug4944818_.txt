commit b80dfd3b0e5e4b490b7afb469320d18bac4520b4
Author: Ben Lickly <blickly@google.com>
Date:   Tue Oct 1 19:05:37 2013

    Nerf direct function inlining when the function be inlined has side-effects and the call arguments can be effected.
    Fixes issue 1101
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=53511956

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -2059,37 +2062,38 @@
   public void testBug4944818() {
     test(
         "var getDomServices_ = function(self) {\n" +
         "  if (!self.domServices_) {\n" +
         "    self.domServices_ = goog$component$DomServices.get(" +
         "        self.appContext_);\n" +
         "  }\n" +
         "\n" +
         "  return self.domServices_;\n" +
         "};\n" +
         "\n" +
         "var getOwnerWin_ = function(self) {\n" +
         "  return getDomServices_(self).getDomHelper().getWindow();\n" +
         "};\n" +
         "\n" +
         "HangoutStarter.prototype.launchHangout = function() {\n" +
         "  var self = a.b;\n" +
         "  var myUrl = new goog.Uri(getOwnerWin_(self).location.href);\n" +
         "};",
-        "HangoutStarter.prototype.launchHangout = function() { " +
-        "  var self$$2 = a.b;" +
-        "  var JSCompiler_temp_const$$0 = goog.Uri;" +
+        "HangoutStarter.prototype.launchHangout=function(){" +
+        "  var self$$2=a.b;" +
+        "  var JSCompiler_temp_const$$0=goog.Uri;" +
         "  var JSCompiler_inline_result$$1;" +
         "  {" +
-        "  var self$$inline_2 = self$$2;" +
-        "  if (!self$$inline_2.domServices_) {" +
-        "    self$$inline_2.domServices_ = goog$component$DomServices.get(" +
-        "        self$$inline_2.appContext_);" +
-        "  }" +
-        "  JSCompiler_inline_result$$1=self$$inline_2.domServices_;" +
+        "    var JSCompiler_inline_result$$0;" +
+        "    {" +
+        "      var self$$inline_1=self$$2;" +
+        "      if(!self$$inline_1.domServices_) {" +
+        "        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);" +
+        "      }" +
+        "      JSCompiler_inline_result$$0=self$$inline_1.domServices_;" +
+        "    }" +
+        "    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();" +
         "  }" +
-        "  var myUrl = new JSCompiler_temp_const$$0(" +
-        "      JSCompiler_inline_result$$1.getDomHelper()." +
-        "          getWindow().location.href)" +
+        "  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)" +
         "}");
   }
 

commit 98a487531ce3d6555851398daead0471b5932774
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Jun 18 12:58:08 2012

    Fix incosistent internal state caused by when multiple functions are
    inlined into the same expression.
    
    R=nicksantos
    DELTA=300  (131 added, 51 deleted, 118 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=5029
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2052 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -2076,37 +2081,37 @@
   public void testBug4944818() {
     test(
         "var getDomServices_ = function(self) {\n" +
         "  if (!self.domServices_) {\n" +
         "    self.domServices_ = goog$component$DomServices.get(" +
         "        self.appContext_);\n" +
         "  }\n" +
         "\n" +
         "  return self.domServices_;\n" +
         "};\n" +
         "\n" +
         "var getOwnerWin_ = function(self) {\n" +
         "  return getDomServices_(self).getDomHelper().getWindow();\n" +
         "};\n" +
         "\n" +
         "HangoutStarter.prototype.launchHangout = function() {\n" +
         "  var self = a.b;\n" +
         "  var myUrl = new goog.Uri(getOwnerWin_(self).location.href);\n" +
         "};",
         "HangoutStarter.prototype.launchHangout = function() { " +
         "  var self$$2 = a.b;" +
         "  var JSCompiler_temp_const$$0 = goog.Uri;" +
-        "  {" +
         "  var JSCompiler_inline_result$$1;" +
+        "  {" +
         "  var self$$inline_2 = self$$2;" +
         "  if (!self$$inline_2.domServices_) {" +
         "    self$$inline_2.domServices_ = goog$component$DomServices.get(" +
         "        self$$inline_2.appContext_);" +
         "  }" +
         "  JSCompiler_inline_result$$1=self$$inline_2.domServices_;" +
         "  }" +
         "  var myUrl = new JSCompiler_temp_const$$0(" +
         "      JSCompiler_inline_result$$1.getDomHelper()." +
         "          getWindow().location.href)" +
         "}");
   }
 

commit 1a7ba5cb0111dd3ed9afd9691cab39b3c341e408
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Nov 3 17:10:49 2011

    Modify normalization to distinguish function expression names from
    parameters and local variables.
    Fixes issue 539.
    
    R=nicksantos
    DELTA=246  (61 added, 11 deleted, 174 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3615
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1552 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -2076,37 +2076,37 @@
   public void testBug4944818() {
     test(
         "var getDomServices_ = function(self) {\n" +
         "  if (!self.domServices_) {\n" +
         "    self.domServices_ = goog$component$DomServices.get(" +
         "        self.appContext_);\n" +
         "  }\n" +
         "\n" +
         "  return self.domServices_;\n" +
         "};\n" +
         "\n" +
         "var getOwnerWin_ = function(self) {\n" +
         "  return getDomServices_(self).getDomHelper().getWindow();\n" +
         "};\n" +
         "\n" +
         "HangoutStarter.prototype.launchHangout = function() {\n" +
         "  var self = a.b;\n" +
         "  var myUrl = new goog.Uri(getOwnerWin_(self).location.href);\n" +
         "};",
         "HangoutStarter.prototype.launchHangout = function() { " +
         "  var self$$2 = a.b;" +
         "  var JSCompiler_temp_const$$0 = goog.Uri;" +
         "  {" +
         "  var JSCompiler_inline_result$$1;" +
-        "  var self$$inline_3 = self$$2;" +
-        "  if (!self$$inline_3.domServices_) {" +
-        "    self$$inline_3.domServices_ = goog$component$DomServices.get(" +
-        "        self$$inline_3.appContext_);" +
+        "  var self$$inline_2 = self$$2;" +
+        "  if (!self$$inline_2.domServices_) {" +
+        "    self$$inline_2.domServices_ = goog$component$DomServices.get(" +
+        "        self$$inline_2.appContext_);" +
         "  }" +
-        "  JSCompiler_inline_result$$1=self$$inline_3.domServices_;" +
+        "  JSCompiler_inline_result$$1=self$$inline_2.domServices_;" +
         "  }" +
         "  var myUrl = new JSCompiler_temp_const$$0(" +
         "      JSCompiler_inline_result$$1.getDomHelper()." +
         "          getWindow().location.href)" +
         "}");
   }
 

commit 251c596a9aa846d8b1e657dfa51417a74c706f7e
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Wed Jun 29 14:20:17 2011

    The was being too aggressive about trying to preserve "this" for
    method calls and should a this point never try to do so.
    
    R=acleung
    DELTA=99  (82 added, 2 deleted, 15 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=2453
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1227 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -1805,0 +1805,37 @@
+  public void testBug4944818() {
+    test(
+        "var getDomServices_ = function(self) {\n" +
+        "  if (!self.domServices_) {\n" +
+        "    self.domServices_ = goog$component$DomServices.get(" +
+        "        self.appContext_);\n" +
+        "  }\n" +
+        "\n" +
+        "  return self.domServices_;\n" +
+        "};\n" +
+        "\n" +
+        "var getOwnerWin_ = function(self) {\n" +
+        "  return getDomServices_(self).getDomHelper().getWindow();\n" +
+        "};\n" +
+        "\n" +
+        "HangoutStarter.prototype.launchHangout = function() {\n" +
+        "  var self = a.b;\n" +
+        "  var myUrl = new goog.Uri(getOwnerWin_(self).location.href);\n" +
+        "};",
+        "HangoutStarter.prototype.launchHangout = function() { " +
+        "  var self$$2 = a.b;" +
+        "  var JSCompiler_temp_const$$0 = goog.Uri;" +
+        "  {" +
+        "  var JSCompiler_inline_result$$1;" +
+        "  var self$$inline_3 = self$$2;" +
+        "  if (!self$$inline_3.domServices_) {" +
+        "    self$$inline_3.domServices_ = goog$component$DomServices.get(" +
+        "        self$$inline_3.appContext_);" +
+        "  }" +
+        "  JSCompiler_inline_result$$1=self$$inline_3.domServices_;" +
+        "  }" +
+        "  var myUrl = new JSCompiler_temp_const$$0(" +
+        "      JSCompiler_inline_result$$1.getDomHelper()." +
+        "          getWindow().location.href)" +
+        "}");
+  }
+
