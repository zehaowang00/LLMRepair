commit 9e921fa973c603473f745fff76c44620fd7719e3
Author: zhuyi@google.com <zhuyi@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Aug 22 18:18:55 2011

    When getting a line from the source code according to the line number, if it happens to be the last line, and '\n' character is missing in the end of the file, we should still return the last line.
    
    Fixes Issue 511.
    
    R=nicksantos
    DELTA=30  (23 added, 0 deleted, 7 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3084
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1373 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/JsMessageExtractorTest.java b/test/com/google/javascript/jscomp/JsMessageExtractorTest.java
--- a/test/com/google/javascript/jscomp/JsMessageExtractorTest.java
+++ b/test/com/google/javascript/jscomp/JsMessageExtractorTest.java
@@ -54,10 +54,12 @@
   public void testSyntaxError1() {
     try {
       extractMessage("if (true) {}}");
       fail("Expected exception");
     } catch (RuntimeException e) {
-      assertEquals("JSCompiler errors\n" +
-          "testcode:1: ERROR - Parse error. syntax error\n", e.getMessage());
+      assertTrue(e.getMessage().contains("JSCompiler errors\n"));
+      assertTrue(e.getMessage().contains(
+          "testcode:1: ERROR - Parse error. syntax error\n"));
+      assertTrue(e.getMessage().contains("if (true) {}}\n"));
     }
   }
 

commit d7a094a288f86ca58bf05c9867320096e468c45e
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Wed May 26 14:16:30 2010

    Change on 2010/05/26 by nicksantos
    
            open up JsMessageExtractor
    
            R=johnlenz
            DELTA=33  (29 added, 2 deleted, 2 changed)
    
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=14001
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@232 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/JsMessageExtractorTest.java b/test/com/google/javascript/jscomp/JsMessageExtractorTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/JsMessageExtractorTest.java
@@ -0,0 +53,10 @@
+  public void testSyntaxError1() {
+    try {
+      extractMessage("if (true) {}}");
+      fail("Expected exception");
+    } catch (RuntimeException e) {
+      assertEquals("JSCompiler errors\n" +
+          "testcode:1: ERROR - Parse error. syntax error\n", e.getMessage());
+    }
+  }
+
