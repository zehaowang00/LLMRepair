commit 41acde3e8e5e8d37ade765b41d9fd29861f03e5e
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Apr 4 17:26:33 2011

    Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP
    Fixes issue 347
    
    R=nicksantos
    DELTA=229  (157 added, 19 deleted, 53 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=1252
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@966 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
--- a/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
+++ b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
@@ -50,44 +50,44 @@
   public void testDefineNumber() throws Exception {
     checkDefinitionsInJs(
         "var a = 1",
         ImmutableSet.of("DEF NAME a -> NUMBER"));
 
     checkDefinitionsInJs(
         "a = 1",
         ImmutableSet.of("DEF NAME a -> NUMBER"));
 
     checkDefinitionsInJs(
         "a.b = 1",
         ImmutableSet.of("DEF GETPROP a.b -> NUMBER"));
 
     // getelem expressions are invisible to the definition gatherer.
     checkDefinitionsInJs(
         "a[\"b\"] = 1",
         ImmutableSet.<String>of());
 
     checkDefinitionsInJs(
         "f().b = 1",
         ImmutableSet.of("DEF GETPROP null -> NUMBER"));
 
     checkDefinitionsInJs(
         "({a : 1}); o.a",
         ImmutableSet.of("DEF STRING null -> NUMBER",
                         "USE GETPROP o.a -> [NUMBER]"));
 
     // TODO(johnlenz): Fix this.
     checkDefinitionsInJs(
       "({'a' : 1}); o['a']",
       ImmutableSet.<String>of("DEF STRING null -> NUMBER"));
 
     checkDefinitionsInJs(
       "({1 : 1}); o[1]",
-      ImmutableSet.<String>of());
+      ImmutableSet.<String>of("DEF STRING null -> NUMBER"));
 
     checkDefinitionsInJs(
         "var a = {b : 1}; a.b",
         ImmutableSet.of("DEF NAME a -> <null>",
                         "DEF STRING null -> NUMBER",
                         "USE NAME a -> [<null>]",
                         "USE GETPROP a.b -> [NUMBER]"));
   }
 

commit 81a77a269d5a9cd6b9baf34812b17fd22933b46e
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Dec 16 15:17:33 2010

    Object literal setters must have one parameter.
    Also, fix crash in RemoveUnusedVars in the presence of getters and setters.
    
    R=nicksantos
    DELTA=157  (151 added, 5 deleted, 1 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=157
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@643 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
--- a/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
+++ b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
@@ -50,40 +50,44 @@
   public void testDefineNumber() throws Exception {
     checkDefinitionsInJs(
         "var a = 1",
         ImmutableSet.of("DEF NAME a -> NUMBER"));
 
     checkDefinitionsInJs(
         "a = 1",
         ImmutableSet.of("DEF NAME a -> NUMBER"));
 
     checkDefinitionsInJs(
         "a.b = 1",
         ImmutableSet.of("DEF GETPROP a.b -> NUMBER"));
 
     // getelem expressions are invisible to the definition gatherer.
     checkDefinitionsInJs(
         "a[\"b\"] = 1",
         ImmutableSet.<String>of());
 
     checkDefinitionsInJs(
         "f().b = 1",
         ImmutableSet.of("DEF GETPROP null -> NUMBER"));
 
     checkDefinitionsInJs(
         "({a : 1}); o.a",
         ImmutableSet.of("DEF STRING null -> NUMBER",
                         "USE GETPROP o.a -> [NUMBER]"));
 
+    // TODO(johnlenz): Fix this.
+    checkDefinitionsInJs(
+      "({'a' : 1}); o['a']",
+      ImmutableSet.<String>of("DEF STRING null -> NUMBER"));
+
     checkDefinitionsInJs(
       "({1 : 1}); o[1]",
       ImmutableSet.<String>of());
 
-
     checkDefinitionsInJs(
         "var a = {b : 1}; a.b",
         ImmutableSet.of("DEF NAME a -> <null>",
                         "DEF STRING null -> NUMBER",
                         "USE NAME a -> [<null>]",
                         "USE GETPROP a.b -> [NUMBER]"));
   }
 

commit 2e68acb05c7a37396c9efc449e14226b6d3fb7eb
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri Dec 10 12:14:38 2010

    Changes needed to support getters and setters in simple mode.
    
    R=nicksantos
    DELTA=166  (146 added, 2 deleted, 18 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=110
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@617 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
--- a/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
+++ b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
@@ -50,35 +50,40 @@
   public void testDefineNumber() throws Exception {
     checkDefinitionsInJs(
         "var a = 1",
         ImmutableSet.of("DEF NAME a -> NUMBER"));
 
     checkDefinitionsInJs(
         "a = 1",
         ImmutableSet.of("DEF NAME a -> NUMBER"));
 
     checkDefinitionsInJs(
         "a.b = 1",
         ImmutableSet.of("DEF GETPROP a.b -> NUMBER"));
 
     // getelem expressions are invisible to the definition gatherer.
     checkDefinitionsInJs(
         "a[\"b\"] = 1",
         ImmutableSet.<String>of());
 
     checkDefinitionsInJs(
         "f().b = 1",
         ImmutableSet.of("DEF GETPROP null -> NUMBER"));
 
     checkDefinitionsInJs(
         "({a : 1}); o.a",
         ImmutableSet.of("DEF STRING null -> NUMBER",
                         "USE GETPROP o.a -> [NUMBER]"));
 
     checkDefinitionsInJs(
+      "({1 : 1}); o[1]",
+      ImmutableSet.<String>of());
+
+
+    checkDefinitionsInJs(
         "var a = {b : 1}; a.b",
         ImmutableSet.of("DEF NAME a -> <null>",
                         "DEF STRING null -> NUMBER",
                         "USE NAME a -> [<null>]",
                         "USE GETPROP a.b -> [NUMBER]"));
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java
@@ -0,0 +51,35 @@
+  public void testDefineNumber() throws Exception {
+    checkDefinitionsInJs(
+        "var a = 1",
+        ImmutableSet.of("DEF NAME a -> NUMBER"));
+
+    checkDefinitionsInJs(
+        "a = 1",
+        ImmutableSet.of("DEF NAME a -> NUMBER"));
+
+    checkDefinitionsInJs(
+        "a.b = 1",
+        ImmutableSet.of("DEF GETPROP a.b -> NUMBER"));
+
+    // getelem expressions are invisible to the definition gatherer.
+    checkDefinitionsInJs(
+        "a[\"b\"] = 1",
+        ImmutableSet.<String>of());
+
+    checkDefinitionsInJs(
+        "f().b = 1",
+        ImmutableSet.of("DEF GETPROP null -> NUMBER"));
+
+    checkDefinitionsInJs(
+        "({a : 1}); o.a",
+        ImmutableSet.of("DEF STRING null -> NUMBER",
+                        "USE GETPROP o.a -> [NUMBER]"));
+
+    checkDefinitionsInJs(
+        "var a = {b : 1}; a.b",
+        ImmutableSet.of("DEF NAME a -> <null>",
+                        "DEF STRING null -> NUMBER",
+                        "USE NAME a -> [<null>]",
+                        "USE GETPROP a.b -> [NUMBER]"));
+  }
+
