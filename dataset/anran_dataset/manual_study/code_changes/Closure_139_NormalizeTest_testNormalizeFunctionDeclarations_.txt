commit b347ce3a71e23a4ab92dc0a6c07d43e2f497c953
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Mar 22 18:55:34 2010

    Remove var declarations when name functions are in the same scope.
    Fixes Issue 33 (John)
    R=nick
    DELTA=206  (155 added, 16 deleted, 35 changed)
    
    Assorted API fixes.
    Fixes issue 127. (Nick)
    R=robert
    DELTA=7  (0 added, 1 deleted, 6 changed)
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@148 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/NormalizeTest.java b/test/com/google/javascript/jscomp/NormalizeTest.java
--- a/test/com/google/javascript/jscomp/NormalizeTest.java
+++ b/test/com/google/javascript/jscomp/NormalizeTest.java
@@ -147,0 +161,32 @@
+  public void testNormalizeFunctionDeclarations() throws Exception {
+    testSame("function f() {}");
+    testSame("var f = function () {}");
+    test("var f = function f() {}",
+         "var f = function f$$1() {}");
+    testSame("var f = function g() {}");
+    test("a:function g() {}",
+         "a:{ var g = function () {} }");
+    test("{function g() {}}",
+         "{var g = function () {}}");
+    testSame("if (function g() {}) {}");
+    test("if (true) {function g() {}}",
+         "if (true) {var g = function () {}}");
+    test("if (true) {} else {function g() {}}",
+         "if (true) {} else {var g = function () {}}");
+    testSame("switch (function g() {}) {}");
+    test("switch (1) { case 1: function g() {}}",
+         "switch (1) { case 1: var g = function () {}}");
+
+
+    testSameInFunction("function f() {}");
+    testInFunction("f(); a:function g() {}",
+                   "f(); a:{ var g = function () {} }");
+    testInFunction("f(); {function g() {}}",
+                   "f(); {var g = function () {}}");
+    testInFunction("f(); if (true) {function g() {}}",
+                   "f(); if (true) {var g = function () {}}");
+    testInFunction("if (true) {} else {function g() {}}",
+                   "if (true) {} else {var g = function () {}}");
+  }
+
+
