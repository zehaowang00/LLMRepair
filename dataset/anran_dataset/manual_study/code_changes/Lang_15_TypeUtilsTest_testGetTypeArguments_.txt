commit 76912e0d8aed581ee4bc6b8635d0512ac2695f5d
Author: Matthew Jason Benson <mbenson@apache.org>
Date:   Thu Nov 17 18:58:31 2011

    [LANG-775] add failing test
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1203427 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java b/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
--- a/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
@@ -472,34 +472,39 @@
     public void testGetTypeArguments() {
         Map<TypeVariable<?>, Type> typeVarAssigns;
         TypeVariable<?> treeSetTypeVar;
         Type typeArg;
 
         typeVarAssigns = TypeUtils.getTypeArguments(Integer.class, Comparable.class);
         treeSetTypeVar = Comparable.class.getTypeParameters()[0];
         Assert.assertTrue("Type var assigns for Comparable from Integer: " + typeVarAssigns,
                 typeVarAssigns.containsKey(treeSetTypeVar));
         typeArg = typeVarAssigns.get(treeSetTypeVar);
         Assert.assertEquals("Type argument of Comparable from Integer: " + typeArg, Integer.class,
                 typeVarAssigns.get(treeSetTypeVar));
 
         typeVarAssigns = TypeUtils.getTypeArguments(int.class, Comparable.class);
         treeSetTypeVar = Comparable.class.getTypeParameters()[0];
         Assert.assertTrue("Type var assigns for Comparable from int: " + typeVarAssigns,
                 typeVarAssigns.containsKey(treeSetTypeVar));
         typeArg = typeVarAssigns.get(treeSetTypeVar);
         Assert.assertEquals("Type argument of Comparable from int: " + typeArg, Integer.class,
                 typeVarAssigns.get(treeSetTypeVar));
 
         Collection<Integer> col = Arrays.asList(new Integer[0]);
         typeVarAssigns = TypeUtils.getTypeArguments(List.class, Collection.class);
         treeSetTypeVar = Comparable.class.getTypeParameters()[0];
         Assert.assertFalse("Type var assigns for Collection from List: " + typeVarAssigns,
                 typeVarAssigns.containsKey(treeSetTypeVar));
 
         typeVarAssigns = TypeUtils.getTypeArguments(AAAClass.BBBClass.class, AAClass.BBClass.class);
         Assert.assertTrue(typeVarAssigns.size() == 2);
         Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.class.getTypeParameters()[0]));
         Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.BBClass.class.getTypeParameters()[0]));
+
+        typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);
+        Assert.assertEquals(2, typeVarAssigns.size());
+        Assert.assertEquals(String.class, typeVarAssigns.get(This.class.getTypeParameters()[0]));
+        Assert.assertEquals(Other.class.getTypeParameters()[0], typeVarAssigns.get(This.class.getTypeParameters()[1]));
     }
 
     @Test

commit f34b4cc34aff20638b56dcebc51601ccc61dae8f
Author: Matthew Jason Benson <mbenson@apache.org>
Date:   Tue Jul 13 15:56:45 2010

    [LANG-597] vastly expanded TypeUtils
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@963845 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java b/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
--- a/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
@@ -70,12 +473,34 @@
-    public void testGetRawTypeTypeVariable() throws Exception {
-        assertEquals(String.class, TypeUtils.getRawType(StringParameterizedChild.class,
-                genericParentT));
-        assertEquals(String.class, TypeUtils.getRawType(stringParentField.getGenericType(),
-                genericParentT));
-        assertEquals(Foo.class, TypeUtils.getRawType(foosField.getGenericType(), iterableType));
-        assertEquals(Foo.class, TypeUtils.getRawType(foosField.getGenericType(), listType));
+    public void testGetTypeArguments() {
+        Map<TypeVariable<?>, Type> typeVarAssigns;
+        TypeVariable<?> treeSetTypeVar;
+        Type typeArg;
+
+        typeVarAssigns = TypeUtils.getTypeArguments(Integer.class, Comparable.class);
+        treeSetTypeVar = Comparable.class.getTypeParameters()[0];
+        Assert.assertTrue("Type var assigns for Comparable from Integer: " + typeVarAssigns,
+                typeVarAssigns.containsKey(treeSetTypeVar));
+        typeArg = typeVarAssigns.get(treeSetTypeVar);
+        Assert.assertEquals("Type argument of Comparable from Integer: " + typeArg, Integer.class,
+                typeVarAssigns.get(treeSetTypeVar));
+
+        typeVarAssigns = TypeUtils.getTypeArguments(int.class, Comparable.class);
+        treeSetTypeVar = Comparable.class.getTypeParameters()[0];
+        Assert.assertTrue("Type var assigns for Comparable from int: " + typeVarAssigns,
+                typeVarAssigns.containsKey(treeSetTypeVar));
+        typeArg = typeVarAssigns.get(treeSetTypeVar);
+        Assert.assertEquals("Type argument of Comparable from int: " + typeArg, Integer.class,
+                typeVarAssigns.get(treeSetTypeVar));
+
+        Collection<Integer> col = Arrays.asList(new Integer[0]);
+        typeVarAssigns = TypeUtils.getTypeArguments(List.class, Collection.class);
+        treeSetTypeVar = Comparable.class.getTypeParameters()[0];
+        Assert.assertFalse("Type var assigns for Collection from List: " + typeVarAssigns,
+                typeVarAssigns.containsKey(treeSetTypeVar));
+
+        typeVarAssigns = TypeUtils.getTypeArguments(AAAClass.BBBClass.class, AAClass.BBClass.class);
+        Assert.assertTrue(typeVarAssigns.size() == 2);
+        Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.class.getTypeParameters()[0]));
+        Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.BBClass.class.getTypeParameters()[0]));
     }
 
-    @Test(expected = IllegalArgumentException.class)
-    public void testGetRawTypeUnresolvableTypeVariable() {
-        TypeUtils.getRawType(GenericParent.class, genericParentT);
+    @Test

commit ef3ceb82630eb2e0244780e6f5281bacf5f88191
Author: Matthew Jason Benson <mbenson@apache.org>
Date:   Fri Nov 13 15:17:47 2009

    [LANG-553] Add TypeUtils
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@835975 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/lang/reflect/TypeUtilsTest.java b/src/test/org/apache/commons/lang/reflect/TypeUtilsTest.java
--- /dev/null
+++ b/src/test/org/apache/commons/lang/reflect/TypeUtilsTest.java
@@ -0,0 +70,12 @@
+    public void testGetRawTypeTypeVariable() throws Exception {
+        assertEquals(String.class, TypeUtils.getRawType(StringParameterizedChild.class,
+                genericParentT));
+        assertEquals(String.class, TypeUtils.getRawType(stringParentField.getGenericType(),
+                genericParentT));
+        assertEquals(Foo.class, TypeUtils.getRawType(foosField.getGenericType(), iterableType));
+        assertEquals(Foo.class, TypeUtils.getRawType(foosField.getGenericType(), listType));
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testGetRawTypeUnresolvableTypeVariable() {
+        TypeUtils.getRawType(GenericParent.class, genericParentT);
