commit 6273f3a6b804aa845747c8859d659373b14199e1
Author: Christian Grobmeier <grobmeier@apache.org>
Date:   Wed Apr 22 02:26:09 2009

    COMPRESS-64: finish() does not close archive entries by default any longer
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@767391 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
@@ -33,39 +33,40 @@
     public void testJarMarker() throws IOException {
         File testArchive = File.createTempFile("jar-aostest", ".jar");
         JarArchiveOutputStream out = null;
         ZipFile zf = null;
         try {
 
             out = new JarArchiveOutputStream(new FileOutputStream(testArchive));
             out.putArchiveEntry(new ZipArchiveEntry("foo/"));
             out.closeArchiveEntry();
             out.putArchiveEntry(new ZipArchiveEntry("bar/"));
             out.closeArchiveEntry();
+            out.finish();
             out.close();
             out = null;
 
             zf = new ZipFile(testArchive);
             ZipArchiveEntry ze = zf.getEntry("foo/");
             assertNotNull(ze);
             ZipExtraField[] fes = ze.getExtraFields();
             assertEquals(1, fes.length);
             assertTrue(fes[0] instanceof JarMarker);
 
             ze = zf.getEntry("bar/");
             assertNotNull(ze);
             fes = ze.getExtraFields();
             assertEquals(0, fes.length);
         } finally {
             if (out != null) {
                 try {
                     out.close();
                 } catch (IOException e) { /* swallow */ }
             }
             ZipFile.closeQuietly(zf);
             if (testArchive.exists()) {
                 testArchive.delete();
             }
         }
     }
 
 }
\ No newline at end of file

commit 0860a7c84864406ac7c2f3d617b8a4caacb7614f
Author: Sebastian Bazley <sebb@apache.org>
Date:   Mon Mar 30 13:27:38 2009

    Use generic methods
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@760059 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
--- a/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
@@ -33,39 +33,39 @@
     public void testJarMarker() throws IOException {
         File testArchive = File.createTempFile("jar-aostest", ".jar");
         JarArchiveOutputStream out = null;
         ZipFile zf = null;
         try {
 
             out = new JarArchiveOutputStream(new FileOutputStream(testArchive));
             out.putArchiveEntry(new ZipArchiveEntry("foo/"));
-            out.closeEntry();
+            out.closeArchiveEntry();
             out.putArchiveEntry(new ZipArchiveEntry("bar/"));
-            out.closeEntry();
+            out.closeArchiveEntry();
             out.close();
             out = null;
 
             zf = new ZipFile(testArchive);
             ZipArchiveEntry ze = zf.getEntry("foo/");
             assertNotNull(ze);
             ZipExtraField[] fes = ze.getExtraFields();
             assertEquals(1, fes.length);
             assertTrue(fes[0] instanceof JarMarker);
 
             ze = zf.getEntry("bar/");
             assertNotNull(ze);
             fes = ze.getExtraFields();
             assertEquals(0, fes.length);
         } finally {
             if (out != null) {
                 try {
                     out.close();
                 } catch (IOException e) { /* swallow */ }
             }
             ZipFile.closeQuietly(zf);
             if (testArchive.exists()) {
                 testArchive.delete();
             }
         }
     }
 
 }
\ No newline at end of file

commit 1903db40e53210537fd022ac5cd922323959ff0e
Author: Stefan Bodewig <bodewig@apache.org>
Date:   Wed Feb 18 10:52:42 2009

    Add a JarMarker to the very first entry in a jar.  SANDBOX-289
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@745545 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
--- /dev/null
+++ b/src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java
@@ -0,0 +33,39 @@
+    public void testJarMarker() throws IOException {
+        File testArchive = File.createTempFile("jar-aostest", ".jar");
+        JarArchiveOutputStream out = null;
+        ZipFile zf = null;
+        try {
+
+            out = new JarArchiveOutputStream(new FileOutputStream(testArchive));
+            out.putArchiveEntry(new ZipArchiveEntry("foo/"));
+            out.closeEntry();
+            out.putArchiveEntry(new ZipArchiveEntry("bar/"));
+            out.closeEntry();
+            out.close();
+            out = null;
+
+            zf = new ZipFile(testArchive);
+            ZipArchiveEntry ze = zf.getEntry("foo/");
+            assertNotNull(ze);
+            ZipExtraField[] fes = ze.getExtraFields();
+            assertEquals(1, fes.length);
+            assertTrue(fes[0] instanceof JarMarker);
+
+            ze = zf.getEntry("bar/");
+            assertNotNull(ze);
+            fes = ze.getExtraFields();
+            assertEquals(0, fes.length);
+        } finally {
+            if (out != null) {
+                try {
+                    out.close();
+                } catch (IOException e) { /* swallow */ }
+            }
+            ZipFile.closeQuietly(zf);
+            if (testArchive.exists()) {
+                testArchive.delete();
+            }
+        }
+    }
+
+}
\ No newline at end of file
