commit 6d00ac1a68612aade8a19d7ecc9b180f00ae5234
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri May 28 01:18:30 2010

    Change on 2010/05/27 by johnlenz
    
            Cleanup some import, unused code, and javadoc warnings.
    
            R=acleung
            DELTA=167  (3 added, 119 deleted, 45 changed)
    
    Change on 2010/05/27 by nicksantos
    
            Use a new heuristic for CheckGlobalThis.
            Fixes closure-compiler issue 144.
            i *think* this is the right behavior, because it more closely
            maps to how we infer "this" types in type-checking, but there
            may be cases i haven't thought of.
    
            R=johnlenz,acleung
            DELTA=57  (51 added, 0 deleted, 6 changed)
    
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=14003
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@234 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
--- a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
@@ -88,3 +95,4 @@
-    testFailure("var a = function() { return function() { this = 8; } }");
+  public void testStaticFunction8() {
+    testFailure("var a = function() { return this.foo; };");
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
@@ -0,0 +88,3 @@
+    testFailure("var a = function() { return function() { this = 8; } }");
+  }
+
