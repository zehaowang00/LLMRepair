commit cbe5eb502e8c0560bc31ddbac037806b65236e1d
Author: acleung <acleung@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Sat Aug 13 03:19:12 2011

    Add "map" support to index maps.
    
    R=cromwellian
    DELTA=119  (105 added, 0 deleted, 14 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3009
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1348 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java b/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
--- a/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
+++ b/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
@@ -355,31 +405,31 @@
   public void testParseSourceMetaMap() throws Exception {
     final String INPUT1 = "file1";
     final String INPUT2 = "file2";
     LinkedHashMap<String, String> inputs = Maps.newLinkedHashMap();
     inputs.put(INPUT1, "var __FOO__ = 1;");
     inputs.put(INPUT2, "var __BAR__ = 2;");
     RunResult result1 = compile(inputs.get(INPUT1), INPUT1);
     RunResult result2 = compile(inputs.get(INPUT2), INPUT2);
 
     final String MAP1 = "map1";
     final String MAP2 = "map2";
     final LinkedHashMap<String, String> maps = Maps.newLinkedHashMap();
     maps.put(MAP1, result1.sourceMapFileContent);
     maps.put(MAP2, result2.sourceMapFileContent);
 
     List<SourceMapSection> sections = Lists.newArrayList();
 
     StringBuilder output = new StringBuilder();
     FilePosition offset = appendAndCount(output, result1.generatedSource);
-    sections.add(new SourceMapSection(MAP1, 0, 0));
+    sections.add(SourceMapSection.forURL(MAP1, 0, 0));
     output.append(result2.generatedSource);
     sections.add(
-         new SourceMapSection(MAP2, offset.getLine(), offset.getColumn()));
+        SourceMapSection.forURL(MAP2, offset.getLine(), offset.getColumn()));
 
     SourceMapGeneratorV3 generator = new SourceMapGeneratorV3();
     StringBuilder mapContents = new StringBuilder();
     generator.appendIndexMapTo(mapContents, "out.js", sections);
 
     check(inputs, output.toString(), mapContents.toString(),
       new SourceMapSupplier() {
         @Override

commit a430f6187fd62e57fccbab1a2e4555ac6a555eeb
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri May 20 16:50:58 2011

    Add the ablity to consume V3 index maps.
    
    R=jschorr
    DELTA=270  (247 added, 8 deleted, 15 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=1965
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1122 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java b/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
--- a/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
+++ b/test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java
@@ -310,0 +355,31 @@
+  public void testParseSourceMetaMap() throws Exception {
+    final String INPUT1 = "file1";
+    final String INPUT2 = "file2";
+    LinkedHashMap<String, String> inputs = Maps.newLinkedHashMap();
+    inputs.put(INPUT1, "var __FOO__ = 1;");
+    inputs.put(INPUT2, "var __BAR__ = 2;");
+    RunResult result1 = compile(inputs.get(INPUT1), INPUT1);
+    RunResult result2 = compile(inputs.get(INPUT2), INPUT2);
+
+    final String MAP1 = "map1";
+    final String MAP2 = "map2";
+    final LinkedHashMap<String, String> maps = Maps.newLinkedHashMap();
+    maps.put(MAP1, result1.sourceMapFileContent);
+    maps.put(MAP2, result2.sourceMapFileContent);
+
+    List<SourceMapSection> sections = Lists.newArrayList();
+
+    StringBuilder output = new StringBuilder();
+    FilePosition offset = appendAndCount(output, result1.generatedSource);
+    sections.add(new SourceMapSection(MAP1, 0, 0));
+    output.append(result2.generatedSource);
+    sections.add(
+         new SourceMapSection(MAP2, offset.getLine(), offset.getColumn()));
+
+    SourceMapGeneratorV3 generator = new SourceMapGeneratorV3();
+    StringBuilder mapContents = new StringBuilder();
+    generator.appendIndexMapTo(mapContents, "out.js", sections);
+
+    check(inputs, output.toString(), mapContents.toString(),
+      new SourceMapSupplier() {
+        @Override
