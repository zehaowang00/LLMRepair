commit 96f586cb8dac7eee62e9be519a3eab125c47bb23
Author: Stephen Colebourne <scolebourne@joda.org>
Date:   Sat Jul 20 06:42:56 2013

    Ensure there is a max/min valid offset in DateTimeZone
    
    Fixes #43

diff --git a/src/test/java/org/joda/time/TestDateTimeZone.java b/src/test/java/org/joda/time/TestDateTimeZone.java
--- a/src/test/java/org/joda/time/TestDateTimeZone.java
+++ b/src/test/java/org/joda/time/TestDateTimeZone.java
@@ -304,28 +303,34 @@
     public void testForOffsetHoursMinutes_int_int() {
         assertEquals(DateTimeZone.UTC, DateTimeZone.forOffsetHoursMinutes(0, 0));
+        assertEquals(DateTimeZone.forID("+23:59"), DateTimeZone.forOffsetHoursMinutes(23, 59));
         assertEquals(DateTimeZone.forID("+03:15"), DateTimeZone.forOffsetHoursMinutes(3, 15));
         assertEquals(DateTimeZone.forID("-02:00"), DateTimeZone.forOffsetHoursMinutes(-2, 0));
         assertEquals(DateTimeZone.forID("-02:30"), DateTimeZone.forOffsetHoursMinutes(-2, 30));
+        assertEquals(DateTimeZone.forID("-23:59"), DateTimeZone.forOffsetHoursMinutes(-23, 59));
         try {
             DateTimeZone.forOffsetHoursMinutes(2, 60);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
             DateTimeZone.forOffsetHoursMinutes(-2, 60);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
             DateTimeZone.forOffsetHoursMinutes(2, -1);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
             DateTimeZone.forOffsetHoursMinutes(-2, -1);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            DateTimeZone.forOffsetHoursMinutes(999999, 0);
+            DateTimeZone.forOffsetHoursMinutes(24, 0);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+        try {
+            DateTimeZone.forOffsetHoursMinutes(-24, 0);
             fail();
         } catch (IllegalArgumentException ex) {}
     }        
 
     //-----------------------------------------------------------------------

commit 8a58750637798ab015fa79019e935c89acdf00fa
Author: Stephen Colebourne <scolebourne@joda.org>
Date:   Sat Feb 12 18:23:44 2005

    Change DateTimeZone to use forXxx factory methods
    
    
    git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@680 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1

diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeZone.java b/JodaTime/src/test/org/joda/time/TestDateTimeZone.java
--- a/JodaTime/src/test/org/joda/time/TestDateTimeZone.java
+++ b/JodaTime/src/test/org/joda/time/TestDateTimeZone.java
@@ -242,28 +242,28 @@
-    public void testGetInstance_int_int() {
-        assertEquals(DateTimeZone.UTC, DateTimeZone.getInstance(0));
-        assertEquals(DateTimeZone.getInstance("+03:15"), DateTimeZone.getInstance(3, 15));
-        assertEquals(DateTimeZone.getInstance("-02:00"), DateTimeZone.getInstance(-2, 0));
-        assertEquals(DateTimeZone.getInstance("-02:30"), DateTimeZone.getInstance(-2, 30));
+    public void testForOffsetHoursMinutes_int_int() {
+        assertEquals(DateTimeZone.UTC, DateTimeZone.forOffsetHoursMinutes(0, 0));
+        assertEquals(DateTimeZone.forID("+03:15"), DateTimeZone.forOffsetHoursMinutes(3, 15));
+        assertEquals(DateTimeZone.forID("-02:00"), DateTimeZone.forOffsetHoursMinutes(-2, 0));
+        assertEquals(DateTimeZone.forID("-02:30"), DateTimeZone.forOffsetHoursMinutes(-2, 30));
         try {
-            DateTimeZone.getInstance(2, 60);
+            DateTimeZone.forOffsetHoursMinutes(2, 60);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            DateTimeZone.getInstance(-2, 60);
+            DateTimeZone.forOffsetHoursMinutes(-2, 60);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            DateTimeZone.getInstance(2, -1);
+            DateTimeZone.forOffsetHoursMinutes(2, -1);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            DateTimeZone.getInstance(-2, -1);
+            DateTimeZone.forOffsetHoursMinutes(-2, -1);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            DateTimeZone.getInstance(999999, 0);
+            DateTimeZone.forOffsetHoursMinutes(999999, 0);
             fail();
         } catch (IllegalArgumentException ex) {}
     }        
 
     //-----------------------------------------------------------------------

commit 4062cef5ffd76dff4fca40236eb15c79820e86c6
Author: Stephen Colebourne <scolebourne@joda.org>
Date:   Sun Aug 22 10:38:44 2004

    Add extra factory methods to DateTimeZone
    
    
    git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@427 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1

diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeZone.java b/JodaTime/src/test/org/joda/time/TestDateTimeZone.java
--- a/JodaTime/src/test/org/joda/time/TestDateTimeZone.java
+++ b/JodaTime/src/test/org/joda/time/TestDateTimeZone.java
@@ -249,0 +260,28 @@
+    public void testGetInstance_int_int() {
+        assertEquals(DateTimeZone.UTC, DateTimeZone.getInstance(0));
+        assertEquals(DateTimeZone.getInstance("+03:15"), DateTimeZone.getInstance(3, 15));
+        assertEquals(DateTimeZone.getInstance("-02:00"), DateTimeZone.getInstance(-2, 0));
+        assertEquals(DateTimeZone.getInstance("-02:30"), DateTimeZone.getInstance(-2, 30));
+        try {
+            DateTimeZone.getInstance(2, 60);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+        try {
+            DateTimeZone.getInstance(-2, 60);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+        try {
+            DateTimeZone.getInstance(2, -1);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+        try {
+            DateTimeZone.getInstance(-2, -1);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+        try {
+            DateTimeZone.getInstance(999999, 0);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+    }        
+
+    //-----------------------------------------------------------------------
