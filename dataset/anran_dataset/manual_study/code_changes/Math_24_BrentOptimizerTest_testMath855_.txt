commit d5ff460ba69e4261f066d7856e2f90b886924513
Author: Gilles Sadowski <erans@apache.org>
Date:   Wed Sep 5 10:22:44 2012

    MATH-855
    The best point is sometimes not the last one evaluated.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1381195 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java b/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
--- a/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
@@ -184,1 +193,23 @@
+    public void testMath855() {
+        final double minSin = 3 * Math.PI / 2;
+        final double offset = 1e-8;
+        final double delta = 1e-7;
+        final UnivariateFunction f1 = new Sin();
+        final UnivariateFunction f2 = new StepFunction(new double[] { minSin, minSin + offset, minSin + 5 * offset },
+                                                       new double[] { 0, -1, 0 });
+        final UnivariateFunction f = FunctionUtils.add(f1, f2);
+        final UnivariateOptimizer optimizer = new BrentOptimizer(1e-8, 1e-100);
+        final UnivariatePointValuePair result
+            = optimizer.optimize(200, f, GoalType.MINIMIZE, minSin - 6.789 * delta, minSin + 9.876 * delta);
+        final int numEval = optimizer.getEvaluations();
+
+        final double sol = result.getPoint();
+        final double expected = 4.712389027602411;
+
+        // System.out.println("min=" + (minSin + offset) + " f=" + f.value(minSin + offset));
+        // System.out.println("sol=" + sol + " f=" + f.value(sol));
+        // System.out.println("exp=" + expected + " f=" + f.value(expected));
+
+        Assert.assertTrue("Best point not reported", f.value(sol) <= f.value(expected));
+    }
 }

commit 85387dc2d55dbbcc54063ff1ec2ab1f909bef7a4
Author: Luc Maisonobe <luc@apache.org>
Date:   Sun Jan 18 10:39:35 2009

    Added a new minimization package with an implementation of the Brent algorithm
    contributed by Gilles Sadowski.
    The implementation needs some testing as it seems to never use the parabola fitting
    and only relying on golden section. This may be due to the refactoring I did on
    the original patch.
    Jira: MATH-177
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@735475 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/math/analysis/minimization/BrentMinimizerTest.java b/src/test/org/apache/commons/math/analysis/minimization/BrentMinimizerTest.java
--- /dev/null
+++ b/src/test/org/apache/commons/math/analysis/minimization/BrentMinimizerTest.java
@@ -0,0 +80,1 @@
+}
