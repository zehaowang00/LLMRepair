commit 35d56dd1fadec0ed50797d222de4e05f78bbf1c9
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Wed Jul 7 18:14:18 2010

    Change on 2010/07/02 17:44:46 by nicksantos
    
            fix RAI when comparing two types that are always equal.
            Fixes issue 172
    
            R=acleung
            DELTA=20  (19 added, 0 deleted, 1 changed)
    
    Change on 2010/07/03 08:52:08 by johnlenz
    
            Prefer the use of the unsyncronized StringBuilder over StringBuffer. This is just a code style change, this are no uses that should have any performance impact.
    
            R=acleung
            DELTA=30  (0 added, 2 deleted, 28 changed)
    
    Change on 2010/07/07 11:56:02 by johnlenz
    
            Reduce the memory cost of generating source maps by reducing the number
            of property structure objects that are created.  We do this by taking
            advantage of the fact the property list objects are immutable and can be
            shared between Nodes.  The source file prop is then shared between
            every Node in the AST for a given source file, reducing the the number
            of property nodes used to store this information from O(ast-nodes) to
            O(source-files).
    
            R=bowdidge
            DELTA=122  (68 added, 1 deleted, 53 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=49002
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@265 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java b/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
--- a/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
+++ b/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
@@ -336,4 +339,19 @@
+  public void testEqCondition4() throws Exception {
+    FlowScope blind = newScope();
+    testBinop(blind,
+        Token.EQ,
+        createVar(blind, "a", VOID_TYPE),
+        createVar(blind, "b", VOID_TYPE),
+        Sets.newHashSet(
+            new TypedName("a", VOID_TYPE),
+            new TypedName("b", VOID_TYPE)),
+        Sets.newHashSet(
+            new TypedName("a", NO_TYPE),
+            new TypedName("b", NO_TYPE)));
+  }
+
+  /**
    * Tests reverse interpretation of a COMPARE(NAME, NUMBER) expression,
    * where COMPARE can be LE, LT, GE or GT.
    */
   @SuppressWarnings("unchecked")

commit 915752b8e4ffd312eea298fb749dddd0edc0db2e
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Wed Dec 23 12:33:47 2009

    Add boatloads of tests.
    
    Add support for --jscomp_warning=checkTypes
    
    Add phase optimization improvements.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@49 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java b/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java
@@ -0,0 +337,4 @@
+   * Tests reverse interpretation of a COMPARE(NAME, NUMBER) expression,
+   * where COMPARE can be LE, LT, GE or GT.
+   */
+  @SuppressWarnings("unchecked")
