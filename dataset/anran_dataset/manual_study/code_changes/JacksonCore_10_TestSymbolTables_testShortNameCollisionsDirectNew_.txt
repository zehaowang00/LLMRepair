commit c2823b4de28120d86aeba9215f0231d990a8eb47
Author: Cowtowncoder <tatu.saloranta@iki.fi>
Date:   Fri Jul 31 22:43:48 2015

    Fix #207

diff --git a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
--- a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
+++ b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
@@ -460,26 +460,26 @@
     public void testShortNameCollisionsDirectNew() throws IOException
     {
         final int COUNT = 700;
         {
             ByteQuadsCanonicalizer symbols =
                     ByteQuadsCanonicalizer.createRoot(333).makeChild(JsonFactory.Feature.collectDefaults());
             for (int i = 0; i < COUNT; ++i) {
                 String id = String.valueOf((char) i);
                 int[] quads = calcQuads(id.getBytes("UTF-8"));
                 symbols.addName(id, quads, quads.length);
             }
             assertEquals(COUNT, symbols.size());
 
-            assertEquals(2048, symbols.bucketCount());
+            assertEquals(1024, symbols.bucketCount());
 
             // Primary is good, but secondary spills cluster in nasty way...
-            assertEquals(640, symbols.primaryCount());
-            assertEquals(30, symbols.secondaryCount());
-            assertEquals(16, symbols.tertiaryCount());
-            assertEquals(14, symbols.spilloverCount());
+            assertEquals(564, symbols.primaryCount());
+            assertEquals(122, symbols.secondaryCount());
+            assertEquals(14, symbols.tertiaryCount());
+            assertEquals(0, symbols.spilloverCount());
 
             assertEquals(COUNT,
                     symbols.primaryCount() + symbols.secondaryCount() + symbols.tertiaryCount() + symbols.spilloverCount());
         }
     }
 }

commit 5e3d980f704ceca91b263ac42efa30bedcf5a76f
Merge: 8394dbcc 6a637520
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Apr 23 00:39:51 2015

    Merge branch '2.5'
    
    Conflicts:
            release-notes/VERSION
            src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java


commit 6a637520ac13991f4864c47f72d7459d551390a5
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Apr 23 00:33:47 2015

    Fixed #191

diff --git a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
--- a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
+++ b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
@@ -191,21 +226,14 @@
     
     private String _shortDoc191() {
         StringBuilder sb = new StringBuilder();
         sb.append("{\n");
         for (int i = 0; i < 400; ++i) {
             if (i > 0) {
                 sb.append(",\n");
             }
-            sb.append('"');
-            char c = (char) i;
-            if (Character.isLetterOrDigit(c)) {
-                sb.append((char) i);
-            } else {
-                sb.append(String.format("\\u%04x", i));
-            }
-            sb.append("\" : "+i);
+            sb.append(String.format("\"\\u%04x\" : %d", i, i));
         }
         sb.append("}\n");
         return sb.toString();
     }
 }

commit 8394dbcce82edd037f1a83d905d5a3c7c11f046b
Author: Cowtowncoder <tatu.saloranta@iki.fi>
Date:   Wed Apr 22 20:08:45 2015

    Add bit more symbols testing

diff --git a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
--- a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
+++ b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
@@ -383,21 +405,27 @@
-    
-    private String _shortDoc191() {
-        StringBuilder sb = new StringBuilder();
-        sb.append("{\n");
-        for (int i = 0; i < 400; ++i) {
-            if (i > 0) {
-                sb.append(",\n");
-            }
-            sb.append('"');
-            char c = (char) i;
-            if (Character.isLetterOrDigit(c)) {
-                sb.append((char) i);
-            } else {
-                sb.append(String.format("\\u%04x", i));
+    public void testShortNameCollisionsDirectNew() throws IOException
+    {
+        final int COUNT = 700;
+        {
+            final int SEED = 33333;
+            ByteQuadsCanonicalizer symbols =
+                    ByteQuadsCanonicalizer.createRoot(SEED).makeChild(JsonFactory.Feature.collectDefaults());
+            for (int i = 0; i < COUNT; ++i) {
+                String id = String.valueOf((char) i);
+                int[] quads = calcQuads(id.getBytes("UTF-8"));
+                symbols.addName(id, quads, quads.length);
             }
-            sb.append("\" : "+i);
+            assertEquals(COUNT, symbols.size());
+
+            assertEquals(2048, symbols.bucketCount());
+
+            // Primary is good, but secondary spills cluster in nasty way...
+            assertEquals(640, symbols.primaryCount());
+            assertEquals(30, symbols.secondaryCount());
+            assertEquals(16, symbols.tertiaryCount());
+            assertEquals(14, symbols.spilloverCount());
+
+            assertEquals(COUNT,
+                    symbols.primaryCount() + symbols.secondaryCount() + symbols.tertiaryCount() + symbols.spilloverCount());
         }
-        sb.append("}\n");
-        return sb.toString();
     }
 }

commit 8fbde688c8502bedaeee121b75598b1882d43d9e
Author: Cowtowncoder <tatu.saloranta@iki.fi>
Date:   Wed Apr 22 19:58:52 2015

    Add tests to try to reproduce #191 (no luck yet)

diff --git a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
--- a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
+++ b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
@@ -136,1 +191,21 @@
+    
+    private String _shortDoc191() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{\n");
+        for (int i = 0; i < 400; ++i) {
+            if (i > 0) {
+                sb.append(",\n");
+            }
+            sb.append('"');
+            char c = (char) i;
+            if (Character.isLetterOrDigit(c)) {
+                sb.append((char) i);
+            } else {
+                sb.append(String.format("\\u%04x", i));
+            }
+            sb.append("\" : "+i);
+        }
+        sb.append("}\n");
+        return sb.toString();
+    }
 }

commit a7ec583c9ac48c0b5fb95640a3c9a17e969f0fc3
Author: Tatu Saloranta <tsaloranta@gmail.com>
Date:   Wed Jul 11 00:44:54 2012

    Start work on [Issue-22], trying to prevent hash-collision based attacks

diff --git a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java
@@ -0,0 +54,1 @@
+}
