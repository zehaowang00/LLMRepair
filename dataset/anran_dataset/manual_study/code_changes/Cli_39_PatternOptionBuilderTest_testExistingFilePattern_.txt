commit f4a28c0463a414464ebe214a7790fde0b0069e3e
Author: BÃ©la Schaum <schaumb@gmail.com>
Date:   Tue Jun 13 07:58:13 2017

    separate testcases

diff --git a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -162,11 +162,13 @@
     public void testExistingFilePattern() throws Exception
     {
-        final Options options = PatternOptionBuilder.parsePattern("f<g<");
+        final Options options = PatternOptionBuilder.parsePattern("g<");
         final CommandLineParser parser = new PosixParser();
-        final CommandLine line = parser.parse(options, new String[] { "-f", "non-existing.file", "-g", "src/test/resources/existing-readable.file" });
-        
-        assertNull("option f parsed", line.getOptionObject("f"));
+        final CommandLine line = parser.parse(options, new String[] { "-g", "src/test/resources/existing-readable.file" });
+
+        final Object parsedReadableFileStream = line.getOptionObject("g");
 
-        Object parsedReadableFileStream = line.getOptionObject("g");
         assertNotNull("option g not parsed", parsedReadableFileStream);
-        assertEquals("option g not FileInputStream", FileInputStream.class, parsedReadableFileStream.getClass());
+        assertTrue("option g not FileInputStream", parsedReadableFileStream instanceof FileInputStream);
+    }
+
+    @Test

commit 1e59d0c2fd1cfee450d0104734307306803a84e0
Author: BÃ©la Schaum <schaumb@gmail.com>
Date:   Mon Jun 12 16:46:32 2017

    change and add file in PatternOptionBuilderTest.java

diff --git a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -162,8 +162,11 @@
     public void testExistingFilePattern() throws Exception
     {
         final Options options = PatternOptionBuilder.parsePattern("f<g<");
         final CommandLineParser parser = new PosixParser();
-        final CommandLine line = parser.parse(options, new String[] { "-f", "test.properties", "-g", "/dev/null" });
+        final CommandLine line = parser.parse(options, new String[] { "-f", "non-existing.file", "-g", "src/test/resources/existing-readable.file" });
         
-        assertNotNull("option g not parsed, or not FileInputStream", (FileInputStream) line.getOptionObject("g"));
-        assertNull("option f parsed", (FileInputStream) line.getOptionObject("f"));
+        assertNull("option f parsed", line.getOptionObject("f"));
+
+        Object parsedReadableFileStream = line.getOptionObject("g");
+        assertNotNull("option g not parsed", parsedReadableFileStream);
+        assertEquals("option g not FileInputStream", FileInputStream.class, parsedReadableFileStream.getClass());

commit aea58f8677e55513ae281c49b91a3abce5ee7d1b
Merge: fac3330 357a8b0
Author: Bela Schaum <schaumb@users.noreply.github.com>
Date:   Fri Jun 9 05:23:10 2017

    Merge branch 'master' into patch-1


commit 357a8b0b8f1090db29e0d541a9419f570a78457b
Author: Gary D. Gregory <ggregory@apache.org>
Date:   Mon Jun 5 12:37:32 2017

    Add final modifier to local variables.
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -160,9 +160,9 @@
     public void testExistingFilePattern() throws Exception
     {
-        Options options = PatternOptionBuilder.parsePattern("f<");
-        CommandLineParser parser = new PosixParser();
-        CommandLine line = parser.parse(options, new String[] { "-f", "test.properties" });
+        final Options options = PatternOptionBuilder.parsePattern("f<");
+        final CommandLineParser parser = new PosixParser();
+        final CommandLine line = parser.parse(options, new String[] { "-f", "test.properties" });
 
         assertEquals("f value", new File("test.properties"), line.getOptionObject("f"));
 
         // todo test if an error is returned if the file doesn't exists (when it's implemented)

commit fac33304c67496380cd168d71cac79dbc0e60142
Author: Bela Schaum <schaumb@users.noreply.github.com>
Date:   Mon Apr 17 10:39:15 2017

    Update PatternOptionBuilderTest.java
    
    really exist file name?

diff --git a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -162,8 +162,8 @@
     public void testExistingFilePattern() throws Exception
     {
         Options options = PatternOptionBuilder.parsePattern("f<g<");
         CommandLineParser parser = new PosixParser();
-        CommandLine line = parser.parse(options, new String[] { "-f", "test.properties", "-g", "build.xml" });
+        CommandLine line = parser.parse(options, new String[] { "-f", "test.properties", "-g", "/dev/null" });
         
         assertNotNull("option g not parsed, or not FileInputStream", (FileInputStream) line.getOptionObject("g"));
         assertNull("option f parsed", (FileInputStream) line.getOptionObject("f"));

commit e3d65b0ee3b08599bd787a7721afc326d1bcccf1
Author: Bela Schaum <schaumb@users.noreply.github.com>
Date:   Mon Apr 17 10:33:42 2017

    Update PatternOptionBuilderTest.java
    
    -.-' sry

diff --git a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -162,16 +162,8 @@
     public void testExistingFilePattern() throws Exception
     {
         Options options = PatternOptionBuilder.parsePattern("f<g<");
         CommandLineParser parser = new PosixParser();
         CommandLine line = parser.parse(options, new String[] { "-f", "test.properties", "-g", "build.xml" });
         
         assertNotNull("option g not parsed, or not FileInputStream", (FileInputStream) line.getOptionObject("g"));
-        
-        try
-        {
-            line.getOptionObject("f");
-            fail("ParseException wasn't thrown");
-        }
-        catch (ParseException e)
-        {
-        }
+        assertNull("option f parsed", (FileInputStream) line.getOptionObject("f"));

commit c1cbe9dd69f80b627ea046095af842bfafb15803
Author: Bela Schaum <schaumb@users.noreply.github.com>
Date:   Mon Apr 17 10:27:45 2017

    Update PatternOptionBuilderTest.java

diff --git a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -161,16 +162,16 @@
     public void testExistingFilePattern() throws Exception
     {
         Options options = PatternOptionBuilder.parsePattern("f<g<");
         CommandLineParser parser = new PosixParser();
         CommandLine line = parser.parse(options, new String[] { "-f", "test.properties", "-g", "build.xml" });
         
-        assertNotNull((FileInputStream) line.getOptionObject("g"));
+        assertNotNull("option g not parsed, or not FileInputStream", (FileInputStream) line.getOptionObject("g"));
         
         try
         {
             line.getOptionObject("f");
             fail("ParseException wasn't thrown");
         }
         catch (ParseException e)
         {
         }

commit 9039cbd454346276c632ae2424a3c20e18a2d276
Author: Bela Schaum <schaumb@users.noreply.github.com>
Date:   Mon Apr 17 10:21:42 2017

    Update PatternOptionBuilderTest.java

diff --git a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -160,9 +161,16 @@
     public void testExistingFilePattern() throws Exception
     {
-        Options options = PatternOptionBuilder.parsePattern("f<");
+        Options options = PatternOptionBuilder.parsePattern("f<g<");
         CommandLineParser parser = new PosixParser();
-        CommandLine line = parser.parse(options, new String[] { "-f", "test.properties" });
-
-        assertEquals("f value", new File("test.properties"), line.getOptionObject("f"));
-
-        // todo test if an error is returned if the file doesn't exists (when it's implemented)
+        CommandLine line = parser.parse(options, new String[] { "-f", "test.properties", "-g", "build.xml" });
+        
+        assertNotNull((FileInputStream) line.getOptionObject("g"));
+        
+        try
+        {
+            line.getOptionObject("f");
+            fail("ParseException wasn't thrown");
+        }
+        catch (ParseException e)
+        {
+        }

commit cfbb46adb163d9b8af00e9a29e6b42d597f8804f
Author: Emmanuel Bourg <ebourg@apache.org>
Date:   Fri Jul 25 12:23:38 2008

    Improved the test coverage of TypeHandler and PatternOptionBuilder
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -34,33 +135,9 @@
-   public void testSimplePattern() throws Exception
-   {
-       Options options = PatternOptionBuilder.parsePattern("a:b@cde>f+n%t/");
-       String[] args = new String[] { "-c", "-a", "foo", "-b", "java.util.Vector", "-e", "build.xml", "-f", "java.util.Calendar", "-n", "4.5", "-t", "http://jakarta.apache.org/" };
-
-       CommandLineParser parser = new PosixParser();
-       CommandLine line = parser.parse(options,args);
-
-       assertEquals("flag a", "foo", line.getOptionValue("a"));
-       assertEquals("string flag a", "foo", line.getOptionObject("a"));
-       assertEquals("object flag b", new Vector(), line.getOptionObject("b"));
-       assertTrue("boolean true flag c", line.hasOption("c"));
-       assertFalse("boolean false flag d", line.hasOption("d"));
-       assertEquals("file flag e", new File("build.xml"), line.getOptionObject("e"));
-       assertEquals("class flag f", Calendar.class, line.getOptionObject("f"));
-       assertEquals("number flag n", new Double(4.5), line.getOptionObject("n"));
-       assertEquals("url flag t", new URL("http://jakarta.apache.org/"), line.getOptionObject("t"));
-
-       // tests the char methods of CommandLine that delegate to the String methods
-       assertEquals("flag a", "foo", line.getOptionValue('a'));
-       assertEquals("string flag a", "foo", line.getOptionObject('a'));
-       assertEquals("object flag b", new Vector(), line.getOptionObject('b'));
-       assertTrue("boolean true flag c", line.hasOption('c'));
-       assertFalse("boolean false flag d", line.hasOption('d'));
-       assertEquals("file flag e", new File("build.xml"), line.getOptionObject('e'));
-       assertEquals("class flag f", Calendar.class, line.getOptionObject('f'));
-       assertEquals("number flag n", new Double(4.5), line.getOptionObject('n'));
-       assertEquals("url flag t", new URL("http://jakarta.apache.org/"), line.getOptionObject('t'));
-
-       /// DATES NOT SUPPORTED YET.
-       //      assertEquals("number flag t", new Date(1023400137276L), line.getOptionObject('z'));
-       //     input is:  "Thu Jun 06 17:48:57 EDT 2002"
-   }
+    public void testExistingFilePattern() throws Exception
+    {
+        Options options = PatternOptionBuilder.parsePattern("f<");
+        CommandLineParser parser = new PosixParser();
+        CommandLine line = parser.parse(options, new String[] { "-f", "test.properties" });
+
+        assertEquals("f value", new File("test.properties"), line.getOptionObject("f"));
+
+        // todo test if an error is returned if the file doesn't exists (when it's implemented)

commit f641323f4fed604953fdab54405a98eeaa2b1271
Author: Emmanuel Bourg <ebourg@apache.org>
Date:   Tue Jul 22 05:23:14 2008

    Replaced fully qualified names with imports
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@678690 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -29,33 +34,33 @@
    public void testSimplePattern() throws Exception
    {
        Options options = PatternOptionBuilder.parsePattern("a:b@cde>f+n%t/");
        String[] args = new String[] { "-c", "-a", "foo", "-b", "java.util.Vector", "-e", "build.xml", "-f", "java.util.Calendar", "-n", "4.5", "-t", "http://jakarta.apache.org/" };
 
        CommandLineParser parser = new PosixParser();
        CommandLine line = parser.parse(options,args);
 
        assertEquals("flag a", "foo", line.getOptionValue("a"));
        assertEquals("string flag a", "foo", line.getOptionObject("a"));
-       assertEquals("object flag b", new java.util.Vector(), line.getOptionObject("b"));
+       assertEquals("object flag b", new Vector(), line.getOptionObject("b"));
        assertTrue("boolean true flag c", line.hasOption("c"));
        assertFalse("boolean false flag d", line.hasOption("d"));
-       assertEquals("file flag e", new java.io.File("build.xml"), line.getOptionObject("e"));
-       assertEquals("class flag f", java.util.Calendar.class, line.getOptionObject("f"));
+       assertEquals("file flag e", new File("build.xml"), line.getOptionObject("e"));
+       assertEquals("class flag f", Calendar.class, line.getOptionObject("f"));
        assertEquals("number flag n", new Double(4.5), line.getOptionObject("n"));
-       assertEquals("url flag t", new java.net.URL("http://jakarta.apache.org/"), line.getOptionObject("t"));
+       assertEquals("url flag t", new URL("http://jakarta.apache.org/"), line.getOptionObject("t"));
 
        // tests the char methods of CommandLine that delegate to the String methods
        assertEquals("flag a", "foo", line.getOptionValue('a'));
        assertEquals("string flag a", "foo", line.getOptionObject('a'));
-       assertEquals("object flag b", new java.util.Vector(), line.getOptionObject('b'));
+       assertEquals("object flag b", new Vector(), line.getOptionObject('b'));
        assertTrue("boolean true flag c", line.hasOption('c'));
        assertFalse("boolean false flag d", line.hasOption('d'));
-       assertEquals("file flag e", new java.io.File("build.xml"), line.getOptionObject('e'));
-       assertEquals("class flag f", java.util.Calendar.class, line.getOptionObject('f'));
+       assertEquals("file flag e", new File("build.xml"), line.getOptionObject('e'));
+       assertEquals("class flag f", Calendar.class, line.getOptionObject('f'));
        assertEquals("number flag n", new Double(4.5), line.getOptionObject('n'));
-       assertEquals("url flag t", new java.net.URL("http://jakarta.apache.org/"), line.getOptionObject('t'));
+       assertEquals("url flag t", new URL("http://jakarta.apache.org/"), line.getOptionObject('t'));
 
        /// DATES NOT SUPPORTED YET.
-       //      assertEquals("number flag t", new java.util.Date(1023400137276L), line.getOptionObject('z'));
+       //      assertEquals("number flag t", new Date(1023400137276L), line.getOptionObject('z'));
        //     input is:  "Thu Jun 06 17:48:57 EDT 2002"
    }

commit 2490250f9b3044e4cd946f11b46694f943f5814d
Author: Emmanuel Bourg <ebourg@apache.org>
Date:   Thu May 29 11:30:40 2008

    Removed the unused constructors, suite() and teardown() methods from the test cases
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661358 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
--- a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -30,5 +29,33 @@
-
-   public static TestSuite suite()
+   public void testSimplePattern() throws Exception
    {
-      return new TestSuite(PatternOptionBuilderTest.class);
+       Options options = PatternOptionBuilder.parsePattern("a:b@cde>f+n%t/");
+       String[] args = new String[] { "-c", "-a", "foo", "-b", "java.util.Vector", "-e", "build.xml", "-f", "java.util.Calendar", "-n", "4.5", "-t", "http://jakarta.apache.org/" };
+
+       CommandLineParser parser = new PosixParser();
+       CommandLine line = parser.parse(options,args);
+
+       assertEquals("flag a", "foo", line.getOptionValue("a"));
+       assertEquals("string flag a", "foo", line.getOptionObject("a"));
+       assertEquals("object flag b", new java.util.Vector(), line.getOptionObject("b"));
+       assertTrue("boolean true flag c", line.hasOption("c"));
+       assertFalse("boolean false flag d", line.hasOption("d"));
+       assertEquals("file flag e", new java.io.File("build.xml"), line.getOptionObject("e"));
+       assertEquals("class flag f", java.util.Calendar.class, line.getOptionObject("f"));
+       assertEquals("number flag n", new Double(4.5), line.getOptionObject("n"));
+       assertEquals("url flag t", new java.net.URL("http://jakarta.apache.org/"), line.getOptionObject("t"));
+
+       // tests the char methods of CommandLine that delegate to the String methods
+       assertEquals("flag a", "foo", line.getOptionValue('a'));
+       assertEquals("string flag a", "foo", line.getOptionObject('a'));
+       assertEquals("object flag b", new java.util.Vector(), line.getOptionObject('b'));
+       assertTrue("boolean true flag c", line.hasOption('c'));
+       assertFalse("boolean false flag d", line.hasOption('d'));
+       assertEquals("file flag e", new java.io.File("build.xml"), line.getOptionObject('e'));
+       assertEquals("class flag f", java.util.Calendar.class, line.getOptionObject('f'));
+       assertEquals("number flag n", new Double(4.5), line.getOptionObject('n'));
+       assertEquals("url flag t", new java.net.URL("http://jakarta.apache.org/"), line.getOptionObject('t'));
+
+       /// DATES NOT SUPPORTED YET.
+       //      assertEquals("number flag t", new java.util.Date(1023400137276L), line.getOptionObject('z'));
+       //     input is:  "Thu Jun 06 17:48:57 EDT 2002"
    }

commit aae50c585ec3ac33c6a9af792e80378904a73195
Author: James Strachan <jstrachan@apache.org>
Date:   Mon Jun 10 14:01:16 2002

    moved cli over from the sandbox to commons proper
    
    
    git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129767 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
--- /dev/null
+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java
@@ -0,0 +31,5 @@
+
+   public static TestSuite suite()
+   {
+      return new TestSuite(PatternOptionBuilderTest.class);
+   }
