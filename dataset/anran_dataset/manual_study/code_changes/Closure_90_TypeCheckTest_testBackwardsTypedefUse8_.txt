commit c5e143f7df0c3d73f6634488cac8ad8e7054fe05
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Nov 1 12:00:27 2010

    Coerce null and undefined out of the @this type when
    we resolve lazily. We already do this when we resolve
    @this blocks immediately. There's some question about whether
    we should be coercing to the global object instead,
    but i'm going to just punt on this for now.
    Fixes issue 274
    
    R=johnlenz
    DELTA=36  (33 added, 0 deleted, 3 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=1035097
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@529 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/TypeCheckTest.java b/test/com/google/javascript/jscomp/TypeCheckTest.java
--- a/test/com/google/javascript/jscomp/TypeCheckTest.java
+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java
@@ -2667,0 +2667,10 @@
+  public void testBackwardsTypedefUse8() throws Exception {
+    // Tehnically, this isn't quite right, because the JS runtime
+    // will coerce null -> the global object. But we'll punt on that for now.
+    testTypes(
+        "/** @param {!Array} x */ function g(x) {}" +
+        "/** @this {goog.MyTypedef} */ function f() { g(this); }" +
+        "var goog = {};" +
+        "/** @typedef {(Array|null|undefined)} */ goog.MyTypedef;");
+  }
+
