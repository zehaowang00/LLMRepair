commit 5a8be77a303c9e2f8c19d029e8628d7697fb581d
Author: Gilles Sadowski <erans@apache.org>
Date:   Sat Feb 11 19:37:23 2012

    MATH-707
    Renamed "RealPointValuePair" to "PointValuePair" and made it a subclass
    of "Pair<double[], Double>".
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1243186 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
@@ -137,20 +137,20 @@
     public void testMaximize() {
         double[] startPoint = point(DIM,1.0);
         double[] insigma = point(DIM,0.1);
         double[][] boundaries = null;
-        RealPointValuePair expected =
-            new RealPointValuePair(point(DIM,0.0),1.0);
+        PointValuePair expected =
+            new PointValuePair(point(DIM,0.0),1.0);
         doTest(new MinusElli(), startPoint, insigma, boundaries,
                 GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
                 2e-10, 5e-6, 100000, expected);
         doTest(new MinusElli(), startPoint, insigma, boundaries,
                 GoalType.MAXIMIZE, LAMBDA, false, 0, 1.0-1e-13,
                 2e-10, 5e-6, 100000, expected);
         boundaries = boundaries(DIM,-0.3,0.3); 
         startPoint = point(DIM,0.1);
         doTest(new MinusElli(), startPoint, insigma, boundaries,
                 GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
                 2e-10, 5e-6, 100000, expected);
     }
 
     @Test

commit 177c1f59a435d109886aa2f6e4110724cd2a7a14
Author: Gilles Sadowski <erans@apache.org>
Date:   Mon May 16 08:13:51 2011

    Removed unnecessary exceptions.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103710 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
@@ -139,20 +137,20 @@
-    public void testMaximize() throws MathException {
+    public void testMaximize() {
         double[] startPoint = point(DIM,1.0);
         double[] insigma = point(DIM,0.1);
         double[][] boundaries = null;
         RealPointValuePair expected =
             new RealPointValuePair(point(DIM,0.0),1.0);
         doTest(new MinusElli(), startPoint, insigma, boundaries,
                 GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
                 2e-10, 5e-6, 100000, expected);
         doTest(new MinusElli(), startPoint, insigma, boundaries,
                 GoalType.MAXIMIZE, LAMBDA, false, 0, 1.0-1e-13,
                 2e-10, 5e-6, 100000, expected);
         boundaries = boundaries(DIM,-0.3,0.3); 
         startPoint = point(DIM,0.1);
         doTest(new MinusElli(), startPoint, insigma, boundaries,
                 GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
                 2e-10, 5e-6, 100000, expected);
     }
 
     @Test

commit ba96c9afd8f42adb6abc9d5e447bec823c95db88
Author: Gilles Sadowski <erans@apache.org>
Date:   Thu Feb 17 08:10:00 2011

    MATH-442
    Implementation of the CMA-ES optimization algorithm provided by Dietmar Wolz
    and Nikolaus Hansen.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1071600 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
--- /dev/null
+++ b/src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java
@@ -0,0 +133,20 @@
+    public void testMaximize() throws MathException {
+        double[] startPoint = point(DIM,1.0);
+        double[] insigma = point(DIM,0.1);
+        double[][] boundaries = null;
+        RealPointValuePair expected =
+            new RealPointValuePair(point(DIM,0.0),1.0);
+        doTest(new MinusElli(), startPoint, insigma, boundaries,
+                GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
+                2e-10, 5e-6, 100000, expected);
+        doTest(new MinusElli(), startPoint, insigma, boundaries,
+                GoalType.MAXIMIZE, LAMBDA, false, 0, 1.0-1e-13,
+                2e-10, 5e-6, 100000, expected);
+        boundaries = boundaries(DIM,-0.3,0.3); 
+        startPoint = point(DIM,0.1);
+        doTest(new MinusElli(), startPoint, insigma, boundaries,
+                GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
+                2e-10, 5e-6, 100000, expected);
+    }
+
+    @Test
