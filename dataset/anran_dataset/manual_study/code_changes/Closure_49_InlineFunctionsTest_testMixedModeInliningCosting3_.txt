commit 1a7ba5cb0111dd3ed9afd9691cab39b3c341e408
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Nov 3 17:10:49 2011

    Modify normalization to distinguish function expression names from
    parameters and local variables.
    Fixes issue 539.
    
    R=nicksantos
    DELTA=246  (61 added, 11 deleted, 174 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3615
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1552 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -527,12 +527,12 @@
   public void testMixedModeInliningCosting3() {
     // Do inline here because the function definition can be eliminated.
     test(
         "function foo(a,b){return a+b+a+b+4+5+6+7+8+9+1+2+3+10}" +
         "foo(1,2);" +
         "foo(2,3,x())",
 
         "1+2+1+2+4+5+6+7+8+9+1+2+3+10;" +
-        "{var JSCompiler_inline_anon_param_4=x();" +
+        "{var JSCompiler_inline_anon_param_2=x();" +
         "2+3+2+3+4+5+6+7+8+9+1+2+3+10}");
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -0,0 +365,12 @@
+  public void testMixedModeInliningCosting3() {
+    // Do inline here because the function definition can be eliminated.
+    test(
+        "function foo(a,b){return a+b+a+b+4+5+6+7+8+9+1+2+3+10}" +
+        "foo(1,2);" +
+        "foo(2,3,x())",
+
+        "1+2+1+2+4+5+6+7+8+9+1+2+3+10;" +
+        "{var JSCompiler_inline_anon_param_4=x();" +
+        "2+3+2+3+4+5+6+7+8+9+1+2+3+10}");
+  }
+
