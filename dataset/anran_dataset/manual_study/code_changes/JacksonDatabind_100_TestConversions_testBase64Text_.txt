commit d98ae778876cddd5ed3eacab9e5daf55186ff483
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Wed Aug 15 19:56:18 2018

    Fix #2096

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
@@ -155,35 +155,47 @@
     public void testBase64Text() throws Exception
     {
         // let's actually iterate over sets of encoding modes, lengths
         
         final int[] LENS = { 1, 2, 3, 4, 7, 9, 32, 33, 34, 35 };
         final Base64Variant[] VARIANTS = {
                 Base64Variants.MIME,
                 Base64Variants.MIME_NO_LINEFEEDS,
                 Base64Variants.MODIFIED_FOR_URL,
                 Base64Variants.PEM
         };
 
         for (int len : LENS) {
             byte[] input = new byte[len];
             for (int i = 0; i < input.length; ++i) {
                 input[i] = (byte) i;
             }
             for (Base64Variant variant : VARIANTS) {
                 TextNode n = new TextNode(variant.encode(input));
                 byte[] data = null;
                 try {
                     data = n.getBinaryValue(variant);
                 } catch (Exception e) {
-                    throw new IOException("Failed (variant "+variant+", data length "+len+"): "+e.getMessage());
+                    fail("Failed (variant "+variant+", data length "+len+"): "+e.getMessage());
                 }
                 assertNotNull(data);
                 assertArrayEquals(data, input);
+
+                // 15-Aug-2018, tatu: [databind#2096] requires another test
+                JsonParser p = new TreeTraversingParser(n);
+                assertEquals(JsonToken.VALUE_STRING, p.nextToken());
+                try {
+                    data = p.getBinaryValue(variant);
+                } catch (Exception e) {
+                    fail("Failed (variant "+variant+", data length "+len+"): "+e.getMessage());
+                }
+                assertNotNull(data);
+                assertArrayEquals(data, input);
+                p.close();
             }
         }
     }
 
     /**
      * Simple test to verify that byte[] values can be handled properly when
      * converting, as long as there is metadata (from POJO definitions).
      */

commit c5bfb9a191240fac1744d6569d48a52ebd53c3cf
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Feb 22 23:32:16 2018

    Add test for #1940

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
@@ -144,39 +154,35 @@
     public void testBase64Text() throws Exception
     {
         // let's actually iterate over sets of encoding modes, lengths
         
         final int[] LENS = { 1, 2, 3, 4, 7, 9, 32, 33, 34, 35 };
         final Base64Variant[] VARIANTS = {
                 Base64Variants.MIME,
                 Base64Variants.MIME_NO_LINEFEEDS,
                 Base64Variants.MODIFIED_FOR_URL,
                 Base64Variants.PEM
         };
 
         for (int len : LENS) {
             byte[] input = new byte[len];
             for (int i = 0; i < input.length; ++i) {
                 input[i] = (byte) i;
             }
             for (Base64Variant variant : VARIANTS) {
                 TextNode n = new TextNode(variant.encode(input));
                 byte[] data = null;
                 try {
                     data = n.getBinaryValue(variant);
                 } catch (Exception e) {
                     throw new IOException("Failed (variant "+variant+", data length "+len+"): "+e.getMessage());
                 }
                 assertNotNull(data);
                 assertArrayEquals(data, input);
             }
         }
     }
 
-    static class Issue709Bean {
-        public byte[] data;
-    }
-    
     /**
      * Simple test to verify that byte[] values can be handled properly when
      * converting, as long as there is metadata (from POJO definitions).
      */

commit b034ca58204eff83f29bc15c3cf061b5d9833f6b
Author: Tatu Saloranta <tsaloranta@gmail.com>
Date:   Sun Apr 22 00:22:22 2012

    More 1.5 fixes

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
--- a/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
@@ -95,39 +95,39 @@
     public void testBase64Text() throws Exception
     {
         // let's actually iterate over sets of encoding modes, lengths
         
         final int[] LENS = { 1, 2, 3, 4, 7, 9, 32, 33, 34, 35 };
         final Base64Variant[] VARIANTS = {
                 Base64Variants.MIME,
                 Base64Variants.MIME_NO_LINEFEEDS,
                 Base64Variants.MODIFIED_FOR_URL,
                 Base64Variants.PEM
         };
 
         for (int len : LENS) {
             byte[] input = new byte[len];
             for (int i = 0; i < input.length; ++i) {
                 input[i] = (byte) i;
             }
             for (Base64Variant variant : VARIANTS) {
                 TextNode n = new TextNode(variant.encode(input));
                 byte[] data = null;
                 try {
                     data = n.getBinaryValue(variant);
                 } catch (Exception e) {
-                    throw new IOException("Failed (variant "+variant+", data length "+len+"): "+e.getMessage(), e);
+                    throw new IOException("Failed (variant "+variant+", data length "+len+"): "+e.getMessage());
                 }
                 assertNotNull(data);
                 assertArrayEquals(data, input);
             }
         }
     }
 
     static class Issue709Bean {
         public byte[] data;
     }
     
     /**
      * Simple test to verify that byte[] values can be handled properly when
      * converting, as long as there is metadata (from POJO definitions).
      */

commit a63c2038a03c7090ce4773d6cf54809150e59350
Author: Tatu Saloranta <tsaloranta@gmail.com>
Date:   Sat Dec 24 03:26:53 2011

    Add unit tests, almost compilable

diff --git a/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestConversions.java
@@ -0,0 +99,39 @@
+    public void testBase64Text() throws Exception
+    {
+        // let's actually iterate over sets of encoding modes, lengths
+        
+        final int[] LENS = { 1, 2, 3, 4, 7, 9, 32, 33, 34, 35 };
+        final Base64Variant[] VARIANTS = {
+                Base64Variants.MIME,
+                Base64Variants.MIME_NO_LINEFEEDS,
+                Base64Variants.MODIFIED_FOR_URL,
+                Base64Variants.PEM
+        };
+
+        for (int len : LENS) {
+            byte[] input = new byte[len];
+            for (int i = 0; i < input.length; ++i) {
+                input[i] = (byte) i;
+            }
+            for (Base64Variant variant : VARIANTS) {
+                TextNode n = new TextNode(variant.encode(input));
+                byte[] data = null;
+                try {
+                    data = n.getBinaryValue(variant);
+                } catch (Exception e) {
+                    throw new IOException("Failed (variant "+variant+", data length "+len+"): "+e.getMessage(), e);
+                }
+                assertNotNull(data);
+                assertArrayEquals(data, input);
+            }
+        }
+    }
+
+    static class Issue709Bean {
+        public byte[] data;
+    }
+    
+    /**
+     * Simple test to verify that byte[] values can be handled properly when
+     * converting, as long as there is metadata (from POJO definitions).
+     */
