commit 2d7683ed820116b77cba9b4b290cd7ce7dfa5cf4
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Wed Jan 6 22:35:47 2016

    Fix #180

diff --git a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/NestedUnwrappedLists180Test.java
--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/NestedUnwrappedLists180Test.java
@@ -38,33 +38,37 @@
     public void testNestedUnwrappedLists180() throws Exception
     {
         /*
         Records recs = new Records();
         recs.records.add(new Record());
         recs.records.add(new Record());
         recs.records.add(new Record());
         recs.records.get(0).fields.add(new Field("a"));
         recs.records.get(2).fields.add(new Field("b"));
 
         String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(recs);
         */
 
         String xml =
 "<Records>\n"
 // Important: it's the empty CDATA here that causes breakage -- empty element alone would be fine
 //+"<records>\n</records>\n"
-+"<records> </records>\n"
++"<records></records>\n"
 +"  <records>\n"
 +"   <fields name='b'/>\n"
 +"  </records>\n"
 +"</Records>\n"
 ;
         
 //System.out.println("XML: "+xml);
 
         Records result = MAPPER.readValue(xml, Records.class);
         assertNotNull(result.records);
         assertEquals(2, result.records.size());
+        assertNotNull(result.records.get(1));
         assertEquals(1, result.records.get(1).fields.size());
         assertEquals("b", result.records.get(1).fields.get(0).name);
+
+        // also, first one ought not be null should it? Ideally not...
+        assertNotNull(result.records.get(0));
     }
 }

commit ad178abf96dc0922fc7d645595f0d66e27fa5482
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Wed Jan 6 21:40:22 2016

    ...

diff --git a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
@@ -38,33 +38,33 @@
     public void testNestedUnwrappedLists180() throws Exception
     {
         /*
         Records recs = new Records();
         recs.records.add(new Record());
         recs.records.add(new Record());
         recs.records.add(new Record());
         recs.records.get(0).fields.add(new Field("a"));
         recs.records.get(2).fields.add(new Field("b"));
 
         String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(recs);
         */
 
         String xml =
 "<Records>\n"
 // Important: it's the empty CDATA here that causes breakage -- empty element alone would be fine
 //+"<records>\n</records>\n"
-+"<records></records>\n"
++"<records> </records>\n"
 +"  <records>\n"
 +"   <fields name='b'/>\n"
 +"  </records>\n"
 +"</Records>\n"
 ;
         
 //System.out.println("XML: "+xml);
 
         Records result = MAPPER.readValue(xml, Records.class);
         assertNotNull(result.records);
         assertEquals(2, result.records.size());
         assertEquals(1, result.records.get(1).fields.size());
         assertEquals("b", result.records.get(1).fields.get(0).name);
     }
 }

commit 89065364ba7b0371203bf96d1e16404b3b0c533f
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Wed Jan 6 21:39:40 2016

    Simplify #180 test a little for better debugging

diff --git a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
@@ -38,38 +38,33 @@
     public void testNestedUnwrappedLists180() throws Exception
     {
         /*
         Records recs = new Records();
         recs.records.add(new Record());
         recs.records.add(new Record());
         recs.records.add(new Record());
         recs.records.get(0).fields.add(new Field("a"));
         recs.records.get(2).fields.add(new Field("b"));
 
         String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(recs);
         */
 
         String xml =
 "<Records>\n"
-+"  <records>\n"
-+"    <fields name='a'/>\n"
-+"  </records>\n"
-
-// Important: it's the empty CDATA here that causes breakage -- empty element would be fine
-
-+"  <records>\n"
-+"  </records>\n"
+// Important: it's the empty CDATA here that causes breakage -- empty element alone would be fine
+//+"<records>\n</records>\n"
++"<records></records>\n"
 +"  <records>\n"
 +"   <fields name='b'/>\n"
 +"  </records>\n"
 +"</Records>\n"
 ;
         
 //System.out.println("XML: "+xml);
 
         Records result = MAPPER.readValue(xml, Records.class);
         assertNotNull(result.records);
-        assertEquals(3, result.records.size());
-        assertEquals(1, result.records.get(2).fields.size());
-        assertEquals("b", result.records.get(2).fields.get(0).name);
+        assertEquals(2, result.records.size());
+        assertEquals(1, result.records.get(1).fields.size());
+        assertEquals("b", result.records.get(1).fields.get(0).name);
     }
 }

commit 3edad6c637cbc9fe364f4c93cb17d82d96b293d1
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Wed Jan 6 10:30:51 2016

    ...

diff --git a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/NestedUnwrappedLists180Test.java
@@ -0,0 +38,38 @@
+    public void testNestedUnwrappedLists180() throws Exception
+    {
+        /*
+        Records recs = new Records();
+        recs.records.add(new Record());
+        recs.records.add(new Record());
+        recs.records.add(new Record());
+        recs.records.get(0).fields.add(new Field("a"));
+        recs.records.get(2).fields.add(new Field("b"));
+
+        String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(recs);
+        */
+
+        String xml =
+"<Records>\n"
++"  <records>\n"
++"    <fields name='a'/>\n"
++"  </records>\n"
+
+// Important: it's the empty CDATA here that causes breakage -- empty element would be fine
+
++"  <records>\n"
++"  </records>\n"
++"  <records>\n"
++"   <fields name='b'/>\n"
++"  </records>\n"
++"</Records>\n"
+;
+        
+//System.out.println("XML: "+xml);
+
+        Records result = MAPPER.readValue(xml, Records.class);
+        assertNotNull(result.records);
+        assertEquals(3, result.records.size());
+        assertEquals(1, result.records.get(2).fields.size());
+        assertEquals("b", result.records.get(2).fields.get(0).name);
+    }
+}
