commit f53649744ccade10e90d359610c25723b51b9e89
Author: Gilles Sadowski <erans@apache.org>
Date:   Fri Nov 23 17:10:55 2012

    MATH-908
    Added constructor to enable independent settings of the line search
    tolerances. Updated unit tests.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413088 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
--- a/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
@@ -34,25 +34,28 @@
     public void testSumSinc() {
         final MultivariateFunction func = new SumSincFunction(-1);
 
         int dim = 2;
         final double[] minPoint = new double[dim];
         for (int i = 0; i < dim; i++) {
             minPoint[i] = 0;
         }
 
         double[] init = new double[dim];
 
         // Initial is minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i];
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
+        doTest(func, minPoint, init, GoalType.MINIMIZE, 1e-9, 1e-9);
 
         // Initial is far from minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i] + 3;
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-5);
+        doTest(func, minPoint, init, GoalType.MINIMIZE, 1e-9, 1e-5);
+        // More stringent line search tolerance enhances the precision
+        // of the result.
+        doTest(func, minPoint, init, GoalType.MINIMIZE, 1e-9, 1e-9, 1e-7);
     }
 
     @Test

commit f3135ff34fb09c7cde04195d3f90c98d72b467ce
Author: Gilles Sadowski <erans@apache.org>
Date:   Sun Apr 29 06:08:23 2012

    Relaxed tolerance in unit test (related to commit 1331849).
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1331891 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
--- a/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
@@ -34,25 +34,25 @@
     public void testSumSinc() {
         final MultivariateFunction func = new SumSincFunction(-1);
 
         int dim = 2;
         final double[] minPoint = new double[dim];
         for (int i = 0; i < dim; i++) {
             minPoint[i] = 0;
         }
 
         double[] init = new double[dim];
 
         // Initial is minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i];
         }
         doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
 
         // Initial is far from minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i] + 3;
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-5);
     }
 
     @Test

commit f3f6438ede479a3b2ba65563507f0d6e97989956
Author: Gilles Sadowski <erans@apache.org>
Date:   Sun Nov 27 17:39:54 2011

    MATH-707
    Changed "...MultivariateRealFunction" to "...MultivariateFunction".
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1206889 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java
@@ -33,25 +33,25 @@
     public void testSumSinc() {
-        final MultivariateRealFunction func = new SumSincFunction(-1);
+        final MultivariateFunction func = new SumSincFunction(-1);
 
         int dim = 2;
         final double[] minPoint = new double[dim];
         for (int i = 0; i < dim; i++) {
             minPoint[i] = 0;
         }
 
         double[] init = new double[dim];
 
         // Initial is minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i];
         }
         doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
 
         // Initial is far from minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i] + 3;
         }
         doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
     }
 
     @Test

commit 49780d33c5eede2ef35df16928d1612950e06638
Author: Sebastian Bazley <sebb@apache.org>
Date:   Sun Dec 5 14:37:55 2010

    Remove unnecessary throws clauses from testxxx methods
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042428 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java
@@ -34,25 +33,25 @@
-    public void testSumSinc() throws MathException {
+    public void testSumSinc() {
         final MultivariateRealFunction func = new SumSincFunction(-1);
 
         int dim = 2;
         final double[] minPoint = new double[dim];
         for (int i = 0; i < dim; i++) {
             minPoint[i] = 0;
         }
 
         double[] init = new double[dim];
 
         // Initial is minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i];
         }
         doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
 
         // Initial is far from minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i] + 3;
         }
         doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
     }
 
     @Test

commit 9102bea5d82c6f97bf3cfb1d8525c13e58a9d418
Author: Gilles Sadowski <erans@apache.org>
Date:   Mon Aug 30 09:06:22 2010

    MATH-394, MATH-397, MATH-404
    Overhaul of the "optimization" package.
    Removed lots of duplicate code.
    Removed methods referring to the concept of "iteration".
    Removed interface methods to access the number of evaluations of the
    gradient and Jacobian.
    Removed all references to "OptimizationException" (replaced by
    "ConvergenceException").
    Javadoc comments updated.
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@990792 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
@@ -36,25 +36,25 @@
     public void testSumSinc() throws MathException {
         final MultivariateRealFunction func = new SumSincFunction(-1);
 
         int dim = 2;
         final double[] minPoint = new double[dim];
         for (int i = 0; i < dim; i++) {
             minPoint[i] = 0;
         }
 
         double[] init = new double[dim];
 
         // Initial is minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i];
         }
-        // doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-5, 1e-9, 1e-7);
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
 
         // Initial is far from minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i] + 3;
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-5, 1e-9, 1e-7);
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
     }
 
     @Test

commit f6464ec888f296c40734083d0af6b402c7a18567
Author: Gilles Sadowski <erans@apache.org>
Date:   Thu Aug 5 10:26:13 2010

    "PowellOptimizer": Added a constructor for setting of the absolute tolerance,
    removed one redundant function evaluation.
    Line search relative tolerance explicitly set in the optimizer instance
    created in "PowellOptimizerTest".
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@982639 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
@@ -36,25 +36,25 @@
     public void testSumSinc() throws MathException {
         final MultivariateRealFunction func = new SumSincFunction(-1);
 
-        int dim = 10;
+        int dim = 2;
         final double[] minPoint = new double[dim];
         for (int i = 0; i < dim; i++) {
             minPoint[i] = 0;
         }
 
         double[] init = new double[dim];
 
         // Initial is minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i];
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
+        // doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-5, 1e-9, 1e-7);
 
         // Initial is far from minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i] + 3;
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-5, 1e-9, 1e-7);
     }
 
     @Test

commit 87933eb908f0e9a52ead2b889a1ec9f97a64d898
Author: Gilles Sadowski <erans@apache.org>
Date:   Wed Jul 28 08:48:48 2010

    MATH-396
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@980039 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
--- a/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
@@ -39,25 +39,25 @@
     public void testSumSinc() throws MathException {
         final MultivariateRealFunction func = new SumSincFunction(-1);
 
-        int dim = 1;
+        int dim = 10;
         final double[] minPoint = new double[dim];
         for (int i = 0; i < dim; i++) {
             minPoint[i] = 0;
         }
 
         double[] init = new double[dim];
 
         // Initial is minimum.
         for (int i = 0; i < dim; i++) {
             init[i] = minPoint[i];
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-15, 1e-8);
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
 
         // Initial is far from minimum.
         for (int i = 0; i < dim; i++) {
-            init[i] = minPoint[i] + 4;
+            init[i] = minPoint[i] + 3;
         }
-        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-15, 1e-8);
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);
     }
 
     @Test

commit b1713b49f41498d9a310f548d6cf34686ab346df
Author: Gilles Sadowski <erans@apache.org>
Date:   Mon Jul 26 17:47:32 2010

    MATH-396.
    Introducing "PowellOptimizer" which uses "BracketFinder".
    "PowellOptimizerTest" uses "SumSincFunction" which uses "SincFunction".
    
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@979460 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
--- /dev/null
+++ b/src/test/java/org/apache/commons/math/optimization/general/PowellOptimizerTest.java
@@ -0,0 +39,25 @@
+    public void testSumSinc() throws MathException {
+        final MultivariateRealFunction func = new SumSincFunction(-1);
+
+        int dim = 1;
+        final double[] minPoint = new double[dim];
+        for (int i = 0; i < dim; i++) {
+            minPoint[i] = 0;
+        }
+
+        double[] init = new double[dim];
+
+        // Initial is minimum.
+        for (int i = 0; i < dim; i++) {
+            init[i] = minPoint[i];
+        }
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-15, 1e-8);
+
+        // Initial is far from minimum.
+        for (int i = 0; i < dim; i++) {
+            init[i] = minPoint[i] + 4;
+        }
+        doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-15, 1e-8);
+    }
+
+    @Test
