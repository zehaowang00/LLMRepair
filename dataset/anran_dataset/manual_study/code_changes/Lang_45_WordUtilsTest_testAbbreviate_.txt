commit d95fcd8e24568b4f9d3cb9da922a4029e293c793
Author: Henri Yandell <bayard@apache.org>
Date:   Sun May 11 01:18:02 2008

    Applying Vincent Behar's second patch for LANG-419 - fixing a bug in abbreviate such that lower limits greater than the length of the string weren't working correctly
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@655246 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/lang/WordUtilsTest.java b/src/test/org/apache/commons/lang/WordUtilsTest.java
--- a/src/test/org/apache/commons/lang/WordUtilsTest.java
+++ b/src/test/org/apache/commons/lang/WordUtilsTest.java
@@ -366,37 +366,38 @@
     public void testAbbreviate() {
         // check null and empty are returned respectively
         assertNull(WordUtils.abbreviate(null, 1,-1,""));
         assertEquals(StringUtils.EMPTY, WordUtils.abbreviate("", 1,-1,""));
 
         // test upper limit
         assertEquals("01234", WordUtils.abbreviate("0123456789", 0,5,""));
         assertEquals("01234", WordUtils.abbreviate("0123456789", 5, 2,""));
         assertEquals("012", WordUtils.abbreviate("012 3456789", 2, 5,""));
         assertEquals("012 3", WordUtils.abbreviate("012 3456789", 5, 2,""));
         assertEquals("0123456789", WordUtils.abbreviate("0123456789", 0,-1,""));
 
         // test upper limit + append string
         assertEquals("01234-", WordUtils.abbreviate("0123456789", 0,5,"-"));
         assertEquals("01234-", WordUtils.abbreviate("0123456789", 5, 2,"-"));
         assertEquals("012", WordUtils.abbreviate("012 3456789", 2, 5, null));
         assertEquals("012 3", WordUtils.abbreviate("012 3456789", 5, 2,""));
         assertEquals("0123456789", WordUtils.abbreviate("0123456789", 0,-1,""));
 
         // test lower value
         assertEquals("012", WordUtils.abbreviate("012 3456789", 0,5, null));
         assertEquals("01234", WordUtils.abbreviate("01234 56789", 5, 10, null));
         assertEquals("01 23 45 67", WordUtils.abbreviate("01 23 45 67 89", 9, -1, null));
         assertEquals("01 23 45 6", WordUtils.abbreviate("01 23 45 67 89", 9, 10, null));
+        assertEquals("0123456789", WordUtils.abbreviate("0123456789", 15, 20, null));
 
         // test lower value + append
         assertEquals("012", WordUtils.abbreviate("012 3456789", 0,5, null));
         assertEquals("01234-", WordUtils.abbreviate("01234 56789", 5, 10, "-"));
         assertEquals("01 23 45 67abc", WordUtils.abbreviate("01 23 45 67 89", 9, -1, "abc"));
         assertEquals("01 23 45 6", WordUtils.abbreviate("01 23 45 67 89", 9, 10, ""));
 
         // others
         assertEquals("", WordUtils.abbreviate("0123456790", 0,0,""));
         assertEquals("", WordUtils.abbreviate(" 0123456790", 0,-1,""));
     }
 
 }

commit 8688d11849b9335f63210dd9018545b3c3a907d8
Author: Henri Yandell <bayard@apache.org>
Date:   Tue Nov 13 13:04:59 2007

    Applying the truncateNicely patch from LANG-338 as abbreviate. I've added it to WordUtils rather than StringUtils; it feels like a better fit there to me
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@594599 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/lang/WordUtilsTest.java b/src/test/org/apache/commons/lang/WordUtilsTest.java
--- a/src/test/org/apache/commons/lang/WordUtilsTest.java
+++ b/src/test/org/apache/commons/lang/WordUtilsTest.java
@@ -365,1 +366,37 @@
+    public void testAbbreviate() {
+        // check null and empty are returned respectively
+        assertNull(WordUtils.abbreviate(null, 1,-1,""));
+        assertEquals(StringUtils.EMPTY, WordUtils.abbreviate("", 1,-1,""));
+
+        // test upper limit
+        assertEquals("01234", WordUtils.abbreviate("0123456789", 0,5,""));
+        assertEquals("01234", WordUtils.abbreviate("0123456789", 5, 2,""));
+        assertEquals("012", WordUtils.abbreviate("012 3456789", 2, 5,""));
+        assertEquals("012 3", WordUtils.abbreviate("012 3456789", 5, 2,""));
+        assertEquals("0123456789", WordUtils.abbreviate("0123456789", 0,-1,""));
+
+        // test upper limit + append string
+        assertEquals("01234-", WordUtils.abbreviate("0123456789", 0,5,"-"));
+        assertEquals("01234-", WordUtils.abbreviate("0123456789", 5, 2,"-"));
+        assertEquals("012", WordUtils.abbreviate("012 3456789", 2, 5, null));
+        assertEquals("012 3", WordUtils.abbreviate("012 3456789", 5, 2,""));
+        assertEquals("0123456789", WordUtils.abbreviate("0123456789", 0,-1,""));
+
+        // test lower value
+        assertEquals("012", WordUtils.abbreviate("012 3456789", 0,5, null));
+        assertEquals("01234", WordUtils.abbreviate("01234 56789", 5, 10, null));
+        assertEquals("01 23 45 67", WordUtils.abbreviate("01 23 45 67 89", 9, -1, null));
+        assertEquals("01 23 45 6", WordUtils.abbreviate("01 23 45 67 89", 9, 10, null));
+
+        // test lower value + append
+        assertEquals("012", WordUtils.abbreviate("012 3456789", 0,5, null));
+        assertEquals("01234-", WordUtils.abbreviate("01234 56789", 5, 10, "-"));
+        assertEquals("01 23 45 67abc", WordUtils.abbreviate("01 23 45 67 89", 9, -1, "abc"));
+        assertEquals("01 23 45 6", WordUtils.abbreviate("01 23 45 67 89", 9, 10, ""));
+
+        // others
+        assertEquals("", WordUtils.abbreviate("0123456790", 0,0,""));
+        assertEquals("", WordUtils.abbreviate(" 0123456790", 0,-1,""));
+    }
+
 }

commit b06d5bf2f92c993c77ac57da63d12c960413cb63
Author: Stephen Colebourne <scolebourne@apache.org>
Date:   Sun Aug 17 17:57:37 2003

    Rename WordWrapUtils to WordUtils
    Refactor wrapLine method, making it public and work properly
    Remove wrapText method
    Test
    
    
    git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137618 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/org/apache/commons/lang/WordUtilsTest.java b/src/test/org/apache/commons/lang/WordUtilsTest.java
--- /dev/null
+++ b/src/test/org/apache/commons/lang/WordUtilsTest.java
@@ -0,0 +198,1 @@
+}
