commit af44738c7de74f24e37ea0c1242e73b07c3f4362
Author: Brice Dutheil <brice.dutheil@gmail.com>
Date:   Sat Jun 30 09:06:31 2012

    issue 352 : With answer ReturnsEmptyValues, Mockito-mocked methods returning primitive types other than "int" throw ClassCastException: java.lang.Integer.
    Thanks to Jesse Wilson for spotting that one and providing a patch.
    I changed a few things however  especially:
     - used Primitives utility class instead
     - applied underscored names for test cases, as decided internally

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
@@ -15,16 +15,19 @@
-    public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Throwable {
+    public void should_return_the_usual_default_values_for_primitives() throws Throwable {
         Answer<Object> answer = new ReturnsSmartNulls();
         assertEquals(false  ,   answer.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0,  answer.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals((byte) 0,  answer.answer(invocationOf(HasPrimitiveMethods.class, "byteMethod")));
+        assertEquals((short) 0, answer.answer(invocationOf(HasPrimitiveMethods.class, "shortMethod")));
         assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
-        assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
-        assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
-        assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+        assertEquals(0L,        answer.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0f,        answer.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0d,        answer.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
 
+    @SuppressWarnings("unused")
     interface Foo {
         Foo get();
         Foo withArgs(String oneArg, String otherArg);
     }
 
     @Test

commit 62b6bdf44baeee172b2b1684835fb995bad2a47d
Author: Lucas Cavalcanti & Caires Vinicius & Victor Kendy <lucasmrtuner@gmail.com>
Date:   Fri Nov 5 16:33:46 2010

    printing args on smart nulls toString (Issue #225)

diff --git a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
@@ -15,15 +15,16 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Throwable {
         Answer<Object> answer = new ReturnsSmartNulls();
         assertEquals(false  ,   answer.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0,  answer.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
         assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
         assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
         assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
         assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
-    
+
     interface Foo {
         Foo get();
+        Foo withArgs(String oneArg, String otherArg);
     }
-    
+
     @Test

commit b5403f8d1f780ed7b866801e459c861dd4d98798
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri May 22 18:05:28 2009

    Finished fixing javadocs after changing ReturnValues into Answers
    More rename job in the same domain
    
    --HG--
    rename : src/org/mockito/internal/returnvalues/GloballyConfiguredAnswer.java => src/org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer.java
    rename : src/org/mockito/internal/returnvalues/ReturnsEmptyValues.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/ReturnsMocks.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java
    rename : src/org/mockito/internal/returnvalues/ReturnsMoreEmptyValues.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/ReturnsSmartNulls.java => src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java
    rename : src/org/mockito/internal/returnvalues/package.html => src/org/mockito/internal/stubbing/defaultanswers/package.html
    rename : test/org/mockito/internal/returnvalues/HasPrimitiveMethods.java => test/org/mockito/internal/stubbing/defaultanswers/HasPrimitiveMethods.java
    rename : test/org/mockito/internal/returnvalues/ReturnsEmptyValuesTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/ReturnsMocksTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java
    rename : test/org/mockito/internal/returnvalues/ReturnsMoreEmptyValuesTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java => test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
    rename : test/org/mockitousage/stubbing/StubbingConsecutiveReturnValuesTest.java => test/org/mockitousage/stubbing/StubbingConsecutiveAnswersTest.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401448

diff --git a/test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
--- a/test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java
+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java
@@ -20,15 +20,15 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Throwable {
-        Answer<Object> returnValues = new ReturnsSmartNulls();
-        assertEquals(false  ,   returnValues.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
-        assertEquals((char) 0,  returnValues.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
-        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
-        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
-        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
-        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+        Answer<Object> answer = new ReturnsSmartNulls();
+        assertEquals(false  ,   answer.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
+        assertEquals((char) 0,  answer.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
+        assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0,         answer.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface Foo {
         Foo get();
     }
     
     @Test

commit f375e673e52ebb2d3319182e2c65a2debe1805fd
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri May 22 17:31:48 2009

    Renamed ReturnValues into Answers
    
    --HG--
    rename : src/org/mockito/internal/returnvalues/GloballyConfiguredReturnValues.java => src/org/mockito/internal/returnvalues/GloballyConfiguredAnswer.java
    rename : src/org/mockito/internal/returnvalues/EmptyReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/MockReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsMocks.java
    rename : src/org/mockito/internal/returnvalues/MoreEmptyReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsMoreEmptyValues.java
    rename : src/org/mockito/internal/returnvalues/SmartNullReturnValues.java => src/org/mockito/internal/returnvalues/ReturnsSmartNulls.java
    rename : test/org/mockito/internal/returnvalues/EmptyReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/MockReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsMocksTest.java
    rename : test/org/mockito/internal/returnvalues/MoreEmptyReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsMoreEmptyValuesTest.java
    rename : test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java => test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401447

diff --git a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java b/test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java
--- a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
+++ b/test/org/mockito/internal/returnvalues/ReturnsSmartNullsTest.java
@@ -20,15 +20,15 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Throwable {
-        Answer<Object> returnValues = new SmartNullReturnValues();
+        Answer<Object> returnValues = new ReturnsSmartNulls();
         assertEquals(false  ,   returnValues.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0,  returnValues.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
         assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
         assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
         assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
         assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface Foo {
         Foo get();
     }
     
     @Test

commit cbca8d00eea63103309e939a233db533f2dc2675
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Fri May 22 17:23:42 2009

    Got rid of some hardly used deprecated API
    Changed ReturnValues into Answer (effectively got rid of ReturnValues)
    
    --HG--
    rename : src/org/mockito/internal/stubbing/answers/CallsRealMethod.java => src/org/mockito/internal/stubbing/answers/CallsRealMethods.java
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401446

diff --git a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
--- a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
+++ b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
@@ -20,15 +20,15 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Throwable {
-        SmartNullReturnValues returnValues = new SmartNullReturnValues();
-        assertEquals(false  ,   returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
-        assertEquals((char) 0,  returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "charMethod")));
-        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "intMethod")));
-        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "longMethod")));
-        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
-        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+        Answer<Object> returnValues = new SmartNullReturnValues();
+        assertEquals(false  ,   returnValues.answer(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
+        assertEquals((char) 0,  returnValues.answer(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "intMethod")));
+        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0,         returnValues.answer(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface Foo {
         Foo get();
     }
     
     @Test

commit 634d34822abe02168f897f5722ce1ab014e1de05
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Tue Apr 21 15:12:36 2009

    Implemented feature 72
    Partial mocking support finally made it to the trunk!
    This feature lets you stub the mock to call real method instead of unreal method...
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401356

diff --git a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
--- a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
+++ b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
@@ -20,15 +20,15 @@
-    public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Exception {
+    public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Throwable {
         SmartNullReturnValues returnValues = new SmartNullReturnValues();
         assertEquals(false  ,   returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0,  returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "charMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "intMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "longMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
     interface Foo {
         Foo get();
     }
     
     @Test

commit 17f010cdf38ef4e1b3a0b27299c243851f3d281e
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Mon Nov 3 07:52:26 2008

    changed SmartReturnValues -> now they return:
    -primitives
    -empty collections
    -0, false for primitive wrapper classes
    -SmartNulls
    -nulls when SmartNull cannot be created
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401073

diff --git a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
--- a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
+++ b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
@@ -28,15 +26,15 @@
     public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Exception {
         SmartNullReturnValues returnValues = new SmartNullReturnValues();
         assertEquals(false  ,   returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
         assertEquals((char) 0,  returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "charMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "intMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "longMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
         assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
     }
     
-    interface HasInterfaceMethod {
-        List<String> doListStuff();
+    interface Foo {
+        Foo get();
     }
     
     @Test

commit f79e36a635cd08eca34cefb16cf51fb9ca7ee923
Author: Szczepan Faber <szczepiq@gmail.com>
Date:   Thu Oct 30 19:08:58 2008

    added SmartNulls feature (just like in the branch)
    
    --HG--
    extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401065

diff --git a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
--- /dev/null
+++ b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java
@@ -0,0 +28,15 @@
+    public void shouldReturnTheUsualDefaultValuesForPrimitives() throws Exception {
+        SmartNullReturnValues returnValues = new SmartNullReturnValues();
+        assertEquals(false  ,   returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "booleanMethod")));
+        assertEquals((char) 0,  returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "charMethod")));
+        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "intMethod")));
+        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "longMethod")));
+        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "floatMethod")));
+        assertEquals(0,         returnValues.valueFor(invocationOf(HasPrimitiveMethods.class, "doubleMethod")));
+    }
+    
+    interface HasInterfaceMethod {
+        List<String> doListStuff();
+    }
+    
+    @Test
