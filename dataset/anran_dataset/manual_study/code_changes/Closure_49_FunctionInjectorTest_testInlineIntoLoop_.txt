commit 1a7ba5cb0111dd3ed9afd9691cab39b3c341e408
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Nov 3 17:10:49 2011

    Modify normalization to distinguish function expression names from
    parameters and local variables.
    Fixes issue 539.
    
    R=nicksantos
    DELTA=246  (61 added, 11 deleted, 174 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3615
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1552 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/FunctionInjectorTest.java b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
--- a/test/com/google/javascript/jscomp/FunctionInjectorTest.java
+++ b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
@@ -959,28 +959,28 @@
   public void testInlineIntoLoop() {
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){var b;return a;}; " +
         "for(;1;){ {" +
-            "var b$$inline_3=void 0;1}}",
+            "var b$$inline_1=void 0;1}}",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "do{ foo(1); } while(1)",
         "function foo(a){var b;return a;}; " +
         "do{ {" +
-            "var b$$inline_3=void 0;1}}while(1)",
+            "var b$$inline_1=void 0;1}}while(1)",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){for(var b in c)return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){var b;for(b in c)return a;}; " +
-        "for(;1;){ {JSCompiler_inline_label_foo_4:{" +
-            "var b$$inline_3=void 0;for(b$$inline_3 in c){" +
-              "1;break JSCompiler_inline_label_foo_4" +
+        "for(;1;){ {JSCompiler_inline_label_foo_2:{" +
+            "var b$$inline_1=void 0;for(b$$inline_1 in c){" +
+              "1;break JSCompiler_inline_label_foo_2" +
             "}}}}",
         "foo", INLINE_BLOCK);
   }
 

commit 82ba14e2d8c636f707c65249f8968e89f72718d0
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Wed Sep 8 19:48:25 2010

    A little more normalization: remove VAR declarations from FOR-IN looops.
    
    R=nicksantos
    DELTA=84  (71 added, 1 deleted, 12 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=207783
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@412 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/FunctionInjectorTest.java b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
--- a/test/com/google/javascript/jscomp/FunctionInjectorTest.java
+++ b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
@@ -899,28 +899,28 @@
   public void testInlineIntoLoop() {
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){var b;return a;}; " +
         "for(;1;){ {" +
             "var b$$inline_3=void 0;1}}",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "do{ foo(1); } while(1)",
         "function foo(a){var b;return a;}; " +
         "do{ {" +
             "var b$$inline_3=void 0;1}}while(1)",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){for(var b in c)return a;}; " +
         "for(;1;){ foo(1); }",
-        "function foo(a){for(var b in c)return a;}; " +
+        "function foo(a){var b;for(b in c)return a;}; " +
         "for(;1;){ {JSCompiler_inline_label_foo_4:{" +
-            "for(var b$$inline_3 in c){" +
+            "var b$$inline_3=void 0;for(b$$inline_3 in c){" +
               "1;break JSCompiler_inline_label_foo_4" +
             "}}}}",
         "foo", INLINE_BLOCK);
   }
 

commit 3df1d1eeb4a5868e5331ee98fb6748a2f1ccedba
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Mar 15 18:46:08 2010

    Cache expensive hashcode calculations. (John)
    
    Try again to simplify variable names in inlined function to simplify
    diffs. (John)
    
    Add an alias for the --define flag to ensure the api is backwards
    compatible. (Nick)
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@136 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/FunctionInjectorTest.java b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
--- a/test/com/google/javascript/jscomp/FunctionInjectorTest.java
+++ b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
@@ -849,28 +849,28 @@
   public void testInlineIntoLoop() {
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){var b;return a;}; " +
         "for(;1;){ {" +
-            "var JSCompiler_inline_b_3=void 0;1}}",
+            "var b$$inline_3=void 0;1}}",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "do{ foo(1); } while(1)",
         "function foo(a){var b;return a;}; " +
         "do{ {" +
-            "var JSCompiler_inline_b_3=void 0;1}}while(1)",
+            "var b$$inline_3=void 0;1}}while(1)",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){for(var b in c)return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){for(var b in c)return a;}; " +
         "for(;1;){ {JSCompiler_inline_label_foo_4:{" +
-            "for(var JSCompiler_inline_b_3 in c){" +
+            "for(var b$$inline_3 in c){" +
               "1;break JSCompiler_inline_label_foo_4" +
             "}}}}",
         "foo", INLINE_BLOCK);
   }
 

commit 14ddcfdc0b8d1cece3c79221b1870b84f055d419
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Dec 17 19:20:09 2009

    Change the internal representation of constant variables.
    
    Run inline-variables before smart-name-removal.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@37 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/FunctionInjectorTest.java b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
--- a/test/com/google/javascript/jscomp/FunctionInjectorTest.java
+++ b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
@@ -849,28 +849,28 @@
   public void testInlineIntoLoop() {
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){var b;return a;}; " +
         "for(;1;){ {" +
-            "var JSCompiler_inline_b_3=undefined;1}}",
+            "var JSCompiler_inline_b_3=void 0;1}}",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){var b;return a;}; " +
         "do{ foo(1); } while(1)",
         "function foo(a){var b;return a;}; " +
         "do{ {" +
-            "var JSCompiler_inline_b_3=undefined;1}}while(1)",
+            "var JSCompiler_inline_b_3=void 0;1}}while(1)",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){for(var b in c)return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){for(var b in c)return a;}; " +
         "for(;1;){ {JSCompiler_inline_label_foo_4:{" +
             "for(var JSCompiler_inline_b_3 in c){" +
               "1;break JSCompiler_inline_label_foo_4" +
             "}}}}",
         "foo", INLINE_BLOCK);
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/FunctionInjectorTest.java b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
@@ -0,0 +849,28 @@
+  public void testInlineIntoLoop() {
+    helperInlineReferenceToFunction(
+        "function foo(a){var b;return a;}; " +
+        "for(;1;){ foo(1); }",
+        "function foo(a){var b;return a;}; " +
+        "for(;1;){ {" +
+            "var JSCompiler_inline_b_3=undefined;1}}",
+        "foo", INLINE_BLOCK);
+
+    helperInlineReferenceToFunction(
+        "function foo(a){var b;return a;}; " +
+        "do{ foo(1); } while(1)",
+        "function foo(a){var b;return a;}; " +
+        "do{ {" +
+            "var JSCompiler_inline_b_3=undefined;1}}while(1)",
+        "foo", INLINE_BLOCK);
+
+    helperInlineReferenceToFunction(
+        "function foo(a){for(var b in c)return a;}; " +
+        "for(;1;){ foo(1); }",
+        "function foo(a){for(var b in c)return a;}; " +
+        "for(;1;){ {JSCompiler_inline_label_foo_4:{" +
+            "for(var JSCompiler_inline_b_3 in c){" +
+              "1;break JSCompiler_inline_label_foo_4" +
+            "}}}}",
+        "foo", INLINE_BLOCK);
+  }
+
