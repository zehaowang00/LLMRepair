commit 8e432a5f5fde4694834ce23c5ac1503ce8d381bc
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Thu Mar 5 13:09:53 2020

    Java8 and JUnit5 (#1335)
    
    * Migration to java8.
    
    * Tests ported to JUnit 5.
    
    * Surefire plugin added.
    
    * Assertions and Rules ported to JUnit 5.
    
    * JUnit 4 dependency removed.
    
    * MultiLocale annotation renamed and changed to include the @ParameterizedTest;
    multi locale tests need only a single annotation now.

diff --git a/src/test/java/org/jsoup/select/QueryParserTest.java b/src/test/java/org/jsoup/select/QueryParserTest.java
index f2ac60cf..95c4da16 100644
--- a/src/test/java/org/jsoup/select/QueryParserTest.java
+++ b/src/test/java/org/jsoup/select/QueryParserTest.java
@@ -1,7 +1,8 @@
 package org.jsoup.select;
 
-import org.junit.Test;
-import static org.junit.Assert.*;
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
 
 /**
  * Tests for the Selector Query Parser.
@@ -40,23 +41,21 @@
         assertEquals(2, andLeft.evaluators.size());
     }
 
-    @Test(expected = Selector.SelectorParseException.class) public void exceptionOnUncloseAttribute() {
-        Evaluator parse = QueryParser.parse("section > a[href=\"]");
+    @Test public void exceptionOnUncloseAttribute() {
+        assertThrows(Selector.SelectorParseException.class, () -> QueryParser.parse("section > a[href=\"]"));
     }
 
-    @Test(expected = Selector.SelectorParseException.class)  public void testParsesSingleQuoteInContains() {
-        Evaluator parse = QueryParser.parse("p:contains(One \" One)");
+    @Test public void testParsesSingleQuoteInContains() {
+        assertThrows(Selector.SelectorParseException.class, () -> QueryParser.parse("p:contains(One \" One)"));
     }
 
 
-    @Test(expected = Selector.SelectorParseException.class)
-    public void exceptOnEmptySelector() {
-        Evaluator parse = QueryParser.parse("");
+    @Test public void exceptOnEmptySelector() {
+        assertThrows(Selector.SelectorParseException.class, () -> QueryParser.parse(""));
     }
 
-    @Test(expected = Selector.SelectorParseException.class)
-    public void exceptOnNullSelector() {
-        Evaluator parse = QueryParser.parse(null);
+    @Test public void exceptOnNullSelector() {
+        assertThrows(Selector.SelectorParseException.class, () -> QueryParser.parse(null));
     }
 
     @Test public void okOnSpacesForeAndAft() {

commit 8fecf72da0c9d1d6da7ec1aab0214ff68588da88
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Thu Jan 5 22:48:35 2017

    Improved CSS query parse validation
    
    Fixes #803

diff --git a/src/test/java/org/jsoup/select/QueryParserTest.java b/src/test/java/org/jsoup/select/QueryParserTest.java
index 5bf3d562..0720e47c 100644
--- a/src/test/java/org/jsoup/select/QueryParserTest.java
+++ b/src/test/java/org/jsoup/select/QueryParserTest.java
@@ -40,12 +40,11 @@
         assertEquals(2, andLeft.evaluators.size());
     }
 
-    @Test public void exceptionOnUncloseAttribute() {
-        boolean threw = false;
-        try {Evaluator parse = QueryParser.parse("section > a[href=\"");}
-        catch (IllegalArgumentException e) {
-            threw = true;
-        }
-        assertTrue(threw);
+    @Test(expected = Selector.SelectorParseException.class) public void exceptionOnUncloseAttribute() {
+        Evaluator parse = QueryParser.parse("section > a[href=\"]");
+    }
+
+    @Test(expected = Selector.SelectorParseException.class)  public void testParsesSingleQuoteInContains() {
+        Evaluator parse = QueryParser.parse("p:contains(One \" One)");
     }
 }
