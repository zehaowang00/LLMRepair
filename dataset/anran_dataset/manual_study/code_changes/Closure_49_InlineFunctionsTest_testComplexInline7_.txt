commit 1a7ba5cb0111dd3ed9afd9691cab39b3c341e408
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Nov 3 17:10:49 2011

    Modify normalization to distinguish function expression names from
    parameters and local variables.
    Fixes issue 539.
    
    R=nicksantos
    DELTA=246  (61 added, 11 deleted, 174 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3615
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1552 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -1268,8 +1268,8 @@
   public void testComplexInline7() {
     test("function f(x,y){if (x) return y(); else return true;}" +
          "var b=1;z=f(1,b)",
-         "var b=1;{JSCompiler_inline_label_f_4:{if(1){z=b();" +
-         "break JSCompiler_inline_label_f_4}else{z=true;" +
-         "break JSCompiler_inline_label_f_4}z=void 0}}");
+         "var b=1;{JSCompiler_inline_label_f_2:{if(1){z=b();" +
+         "break JSCompiler_inline_label_f_2}else{z=true;" +
+         "break JSCompiler_inline_label_f_2}z=void 0}}");
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -0,0 +1077,8 @@
+  public void testComplexInline7() {
+    test("function f(x,y){if (x) return y(); else return true;}" +
+         "var b=1;z=f(1,b)",
+         "var b=1;{JSCompiler_inline_label_f_4:{if(1){z=b();" +
+         "break JSCompiler_inline_label_f_4}else{z=true;" +
+         "break JSCompiler_inline_label_f_4}z=void 0}}");
+  }
+
