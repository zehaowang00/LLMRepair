commit 1a7ba5cb0111dd3ed9afd9691cab39b3c341e408
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Thu Nov 3 17:10:49 2011

    Modify normalization to distinguish function expression names from
    parameters and local variables.
    Fixes issue 539.
    
    R=nicksantos
    DELTA=246  (61 added, 11 deleted, 174 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3615
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1552 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -842,21 +842,21 @@
   public void testShadowVariables16() {
     assumeMinimumCapture = false;
     // Inline functions defined as a child of the CALL node.
     test("var a=3;" +
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
-         "{var a$$inline_1=5;{a}}"
+         "{var a$$inline_0=5;{a}}"
          );
 
     assumeMinimumCapture = true;
     // Inline functions defined as a child of the CALL node.
     test("var a=3;" +
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
-         "{var a$$inline_2=5;{a}}"
+         "{var a$$inline_1=5;{a}}"
          );
 
   }
 

commit de20cf30dfdf0f885c9b97dfb75f8425df0280b9
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Aug 22 20:34:25 2011

    Add an inliner option to inline function without considering whether "capture" of variables. Traditionally, we have avoiding inlining function with closure into scope (because they might capture unintended values) or inline functions that require temporaries into scopes that contain closures (because the temps might leak into the closure scopes).
    This CL does not include a means of enabling the option.
    
    R=acleung
    DELTA=332  (313 added, 0 deleted, 19 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=3089
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1378 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -771,10 +842,21 @@
   public void testShadowVariables16() {
+    assumeMinimumCapture = false;
     // Inline functions defined as a child of the CALL node.
     test("var a=3;" +
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
          "{var a$$inline_1=5;{a}}"
          );
+
+    assumeMinimumCapture = true;
+    // Inline functions defined as a child of the CALL node.
+    test("var a=3;" +
+         "function foo(){return a}" +
+         "(function(){var a=5;(function(){foo()})()})()",
+         "var a=3;" +
+         "{var a$$inline_2=5;{a}}"
+         );
+
   }
 

commit 3df1d1eeb4a5868e5331ee98fb6748a2f1ccedba
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Mon Mar 15 18:46:08 2010

    Cache expensive hashcode calculations. (John)
    
    Try again to simplify variable names in inlined function to simplify
    diffs. (John)
    
    Add an alias for the --define flag to ensure the api is backwards
    compatible. (Nick)
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@136 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -676,10 +676,10 @@
   public void testShadowVariables16() {
     // Inline functions defined as a child of the CALL node.
     test("var a=3;" +
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
-         "{var JSCompiler_inline_a$$1_1=5;{a}}"
+         "{var a$$inline_1=5;{a}}"
          );
   }
 

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -0,0 +671,10 @@
+  public void testShadowVariables16() {
+    // Inline functions defined as a child of the CALL node.
+    test("var a=3;" +
+         "function foo(){return a}" +
+         "(function(){var a=5;(function(){foo()})()})()",
+         "var a=3;" +
+         "{var JSCompiler_inline_a$$1_1=5;{a}}"
+         );
+  }
+
