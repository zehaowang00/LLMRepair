commit 79c672355bb31aa69c23d2dd1ed8cc3f89dd2844
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Wed Feb 3 23:48:54 2010

    New: E + F adjacent sibling selector, E ~ F preceding sibling.

diff --git a/src/test/java/org/jsoup/select/SelectorTest.java b/src/test/java/org/jsoup/select/SelectorTest.java
index 34c268c3..596d7b94 100644
--- a/src/test/java/org/jsoup/select/SelectorTest.java
+++ b/src/test/java/org/jsoup/select/SelectorTest.java
@@ -216,4 +216,57 @@
         assertEquals(1, doc.select("DIV[TITLE=BAR]").size());
         assertEquals(0, doc.select("DIV[TITLE=BARBARELLA").size());
     }
+    
+    @Test public void adjacentSiblings() {
+        String h = "<ol><li>One<li>Two<li>Three</ol>";
+        Document doc = Jsoup.parse(h);
+        Elements sibs = doc.select("li + li");
+        assertEquals(2, sibs.size());
+        assertEquals("Two", sibs.get(0).text());
+        assertEquals("Three", sibs.get(1).text());
+    }
+    
+    @Test public void adjacentSiblingsWithId() {
+        String h = "<ol><li id=1>One<li id=2>Two<li id=3>Three</ol>";
+        Document doc = Jsoup.parse(h);
+        Elements sibs = doc.select("li#1 + li#2");
+        assertEquals(1, sibs.size());
+        assertEquals("Two", sibs.get(0).text());
+    }
+    
+    @Test public void notAdjacent() {
+        String h = "<ol><li id=1>One<li id=2>Two<li id=3>Three</ol>";
+        Document doc = Jsoup.parse(h);
+        Elements sibs = doc.select("li#1 + li#3");
+        assertEquals(0, sibs.size());
+    }
+    
+    @Test public void mixCombinator() {
+        String h = "<div class=foo><ol><li>One<li>Two<li>Three</ol></div>";
+        Document doc = Jsoup.parse(h);
+        Elements sibs = doc.select("body > div.foo li + li");
+        
+        assertEquals(2, sibs.size());
+        assertEquals("Two", sibs.get(0).text());
+        assertEquals("Three", sibs.get(1).text());
+    }
+    
+    @Test public void mixCombinatorGroup() {
+        String h = "<div class=foo><ol><li>One<li>Two<li>Three</ol></div>";
+        Document doc = Jsoup.parse(h);
+        Elements els = doc.select(".foo > ol, ol > li + li");
+        
+        assertEquals(3, els.size());
+        assertEquals("ol", els.get(0).tagName());
+        assertEquals("Two", els.get(1).text());
+        assertEquals("Three", els.get(2).text());
+    }
+    
+    @Test public void generalSiblings() {
+        String h = "<ol><li id=1>One<li id=2>Two<li id=3>Three</ol>";
+        Document doc = Jsoup.parse(h);
+        Elements els = doc.select("#1 ~ #3");
+        assertEquals(1, els.size());
+        assertEquals("Three", els.first().text());
+    }
 }
