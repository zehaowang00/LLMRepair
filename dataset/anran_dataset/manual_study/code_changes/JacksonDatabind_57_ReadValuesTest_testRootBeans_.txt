commit bbd8190030022df404a8f7c47c1bc32e990cb0d2
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Sep 1 21:36:27 2016

    Fix #1362

diff --git a/src/test/java/com/fasterxml/jackson/databind/seq/ReadValuesTest.java b/src/test/java/com/fasterxml/jackson/databind/seq/ReadValuesTest.java
--- a/src/test/java/com/fasterxml/jackson/databind/seq/ReadValuesTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/seq/ReadValuesTest.java
@@ -35,4 +46,37 @@
     public void testRootBeans() throws Exception
     {
-        final String JSON = "{\"a\":3}{\"a\":27}  ";
+        for (Source src : Source.values()) {
+            _testRootBeans(src);
+        }
+    }
+
+    private <T> MappingIterator<T> _iterator(ObjectReader r,
+            String json,
+            Source srcType) throws IOException
+    {
+        switch (srcType) {
+        case BYTE_ARRAY:
+            return r.readValues(json.getBytes("UTF-8"));
+        case BYTE_ARRAY_OFFSET:
+            {
+                ByteArrayOutputStream out = new ByteArrayOutputStream();
+                out.write(0);
+                out.write(0);
+                out.write(0);
+                out.write(json.getBytes("UTF-8"));
+                out.write(0);
+                out.write(0);
+                out.write(0);
+                byte[] b = out.toByteArray();
+                return r.readValues(b, 3, b.length-6);
+            }
+        case INPUT_STREAM:
+            return r.readValues(new ByteArrayInputStream(json.getBytes("UTF-8")));
+        case READER:
+            return r.readValues(new StringReader(json));
+        case STRING:
+        default:
+            return r.readValues(json);
+        }
+    }
 

commit 655d2a1c4b7d45b7d3c25e484f94e47d4d47f477
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Oct 30 01:29:07 2014

    Minor improvements to MappingIterator, preparing for sub-classability (initially for CSV)

diff --git a/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
--- a/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
+++ b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
@@ -30,5 +38,4 @@
     public void testRootBeans() throws Exception
     {
         final String JSON = "{\"a\":3}{\"a\":27}  ";
-        Iterator<Bean> it = MAPPER.reader(Bean.class).readValues(JSON);
 

commit a12061f037af30f20e4b0c75862224c2f5e6d056
Author: Tatu Saloranta <tsaloranta@gmail.com>
Date:   Sat Jul 21 00:42:26 2012

    Implement [Issue-33]: changes to ObjectReader.readValues() to simplify semantics

diff --git a/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
--- a/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
+++ b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
@@ -26,6 +29,5 @@
     public void testRootBeans() throws Exception
     {
         final String JSON = "{\"a\":3}{\"a\":27}  ";
-        ObjectMapper mapper = new ObjectMapper();
-        Iterator<Bean> it = mapper.reader(Bean.class).readValues(JSON);
+        Iterator<Bean> it = MAPPER.reader(Bean.class).readValues(JSON);
 

commit a63c2038a03c7090ce4773d6cf54809150e59350
Author: Tatu Saloranta <tsaloranta@gmail.com>
Date:   Sat Dec 24 03:26:53 2011

    Add unit tests, almost compilable

diff --git a/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java
@@ -0,0 +26,6 @@
+    public void testRootBeans() throws Exception
+    {
+        final String JSON = "{\"a\":3}{\"a\":27}  ";
+        ObjectMapper mapper = new ObjectMapper();
+        Iterator<Bean> it = mapper.reader(Bean.class).readValues(JSON);
+
