commit 552be4b677ec30a34d04d234395ba1a8c7beaacf
Author: Stephen Colebourne <scolebourne@joda.org>
Date:   Sun Dec 5 18:43:18 2010

    DateTimeZone.getOffsetFromLocal [2952991]
    The behaviour during DST overlaps is now defined to always return the earlier instant which is normally known as daylight or summer time. Previously, the result varied by hemisphere. This affects the constructor of DateTime and other methods
    
    git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1596 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1

diff --git a/JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java b/JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java
--- a/JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java
+++ b/JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java
@@ -884,19 +920,5 @@
-    // broken, and getOffsetFromLocal has no obvious way to determine which is correct
-//    public void test_getOffsetFromLocal_Moscow_Autumn() {
-//        doTest_getOffsetFromLocal(10, 28, 0, 0, "2007-10-28T00:00:00.000+04:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 0,30, "2007-10-28T00:30:00.000+04:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 1, 0, "2007-10-28T01:00:00.000+04:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 1,30, "2007-10-28T01:30:00.000+04:00", ZONE_MOSCOW);
-//        
-//        doTest_getOffsetFromLocal(10, 28, 2, 0, "2007-10-28T02:00:00.000+04:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 2,30, "2007-10-28T02:30:00.000+04:00", ZONE_MOSCOW);
-//        
-//        doTest_getOffsetFromLocal(10, 28, 3, 0, "2007-10-28T03:00:00.000+03:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 3,30, "2007-10-28T03:30:00.000+03:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 4, 0, "2007-10-28T04:00:00.000+03:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 5, 0, "2007-10-28T05:00:00.000+03:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 6, 0, "2007-10-28T06:00:00.000+03:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 7, 0, "2007-10-28T07:00:00.000+03:00", ZONE_MOSCOW);
-//        doTest_getOffsetFromLocal(10, 28, 8, 0, "2007-10-28T08:00:00.000+03:00", ZONE_MOSCOW);
-//    }
+    public void test_DateTime_constructor_Moscow_Autumn() {
+        DateTime dt = new DateTime(2007, 10, 28, 2, 30, ZONE_MOSCOW);
+        assertEquals("2007-10-28T02:30:00.000+04:00", dt.toString());
+    }
 

commit c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b
Author: Stephen Colebourne <scolebourne@joda.org>
Date:   Sat Aug 4 13:23:22 2007

    Fix DateTimeZone to better handle spring DST cutover
    bugs 1710316, 1747219, 1755158
    
    git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1232 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1

diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java b/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java
--- /dev/null
+++ b/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java
@@ -0,0 +705,19 @@
+    // broken, and getOffsetFromLocal has no obvious way to determine which is correct
+//    public void test_getOffsetFromLocal_Moscow_Autumn() {
+//        doTest_getOffsetFromLocal(10, 28, 0, 0, "2007-10-28T00:00:00.000+04:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 0,30, "2007-10-28T00:30:00.000+04:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 1, 0, "2007-10-28T01:00:00.000+04:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 1,30, "2007-10-28T01:30:00.000+04:00", ZONE_MOSCOW);
+//        
+//        doTest_getOffsetFromLocal(10, 28, 2, 0, "2007-10-28T02:00:00.000+04:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 2,30, "2007-10-28T02:30:00.000+04:00", ZONE_MOSCOW);
+//        
+//        doTest_getOffsetFromLocal(10, 28, 3, 0, "2007-10-28T03:00:00.000+03:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 3,30, "2007-10-28T03:30:00.000+03:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 4, 0, "2007-10-28T04:00:00.000+03:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 5, 0, "2007-10-28T05:00:00.000+03:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 6, 0, "2007-10-28T06:00:00.000+03:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 7, 0, "2007-10-28T07:00:00.000+03:00", ZONE_MOSCOW);
+//        doTest_getOffsetFromLocal(10, 28, 8, 0, "2007-10-28T08:00:00.000+03:00", ZONE_MOSCOW);
+//    }
+
