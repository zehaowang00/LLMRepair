commit e98a5000cd211539bf4ba65f62cc7f81395e1726
Author: Luc Maisonobe <luc@apache.org>
Date:   Mon Nov 28 15:16:28 2011

    Fixed case of unconstrained variables that still occur in the objective
    function in simplex solver.
    
    Patch provided by Thomas Neidhart
    
    Jira: MATH-713
    
    git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1207566 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java b/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
--- a/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
@@ -33,0 +33,14 @@
+    public void testMath713NegativeVariable() {
+        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 1.0}, 0.0d);
+        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
+        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));
+
+        double epsilon = 1e-6;
+        SimplexSolver solver = new SimplexSolver();
+        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
+
+        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) >= 0);
+        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) >= 0);
+    }
+
+    @Test
