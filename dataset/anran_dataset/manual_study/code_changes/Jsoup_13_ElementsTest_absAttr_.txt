commit 16b2ab8e25e6bea39ae04f9d310331e411fb2e65
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Tue Jan 17 16:51:48 2017

    Added eachText and eachAttr

diff --git a/src/test/java/org/jsoup/select/ElementsTest.java b/src/test/java/org/jsoup/select/ElementsTest.java
index 79ca967e..771d33c8 100644
--- a/src/test/java/org/jsoup/select/ElementsTest.java
+++ b/src/test/java/org/jsoup/select/ElementsTest.java
@@ -9,7 +9,9 @@
 
 import java.util.List;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
 
 /**
  Tests for ElementList.
@@ -328,4 +330,42 @@ public void tail(Node node, int depth) {
         assertEquals(1, prevAF.size());
         assertEquals("1", prevAF.first().text());
     }
+
+    @Test public void eachText() {
+        Document doc = Jsoup.parse("<div><p>1<p>2<p>3<p>4<p>5<p>6</div><div><p>7<p>8<p>9<p>10<p>11<p>12<p></p></div>");
+        List<String> divText = doc.select("div").eachText();
+        assertEquals(2, divText.size());
+        assertEquals("1 2 3 4 5 6", divText.get(0));
+        assertEquals("7 8 9 10 11 12", divText.get(1));
+
+        List<String> pText = doc.select("p").eachText();
+        Elements ps = doc.select("p");
+        assertEquals(13, ps.size());
+        assertEquals(12, pText.size()); // not 13, as last doesn't have text
+        assertEquals("1", pText.get(0));
+        assertEquals("2", pText.get(1));
+        assertEquals("5", pText.get(4));
+        assertEquals("7", pText.get(6));
+        assertEquals("12", pText.get(11));
+    }
+
+    @Test public void eachAttr() {
+        Document doc = Jsoup.parse(
+            "<div><a href='/foo'>1</a><a href='http://example.com/bar'>2</a><a href=''>3</a><a>4</a>",
+            "http://example.com");
+
+        List<String> hrefAttrs = doc.select("a").eachAttr("href");
+        assertEquals(3, hrefAttrs.size());
+        assertEquals("/foo", hrefAttrs.get(0));
+        assertEquals("http://example.com/bar", hrefAttrs.get(1));
+        assertEquals("", hrefAttrs.get(2));
+        assertEquals(4, doc.select("a").size());
+
+        List<String> absAttrs = doc.select("a").eachAttr("abs:href");
+        assertEquals(3, absAttrs.size());
+        assertEquals(3, absAttrs.size());
+        assertEquals("http://example.com/foo", absAttrs.get(0));
+        assertEquals("http://example.com/bar", absAttrs.get(1));
+        assertEquals("http://example.com", absAttrs.get(2));
+    }
 }

commit 411c01ff53f56f0b84bee210ad75c8c2114efa55
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Tue May 31 00:44:10 2011

    Improved "abs:" absolute URL handling in Elements.attr("abs:href") and Node.hasAttr("abs:href").
    
    Fixes #97

diff --git a/src/test/java/org/jsoup/select/ElementsTest.java b/src/test/java/org/jsoup/select/ElementsTest.java
index c0af17a2..76923f44 100644
--- a/src/test/java/org/jsoup/select/ElementsTest.java
+++ b/src/test/java/org/jsoup/select/ElementsTest.java
@@ -45,6 +45,16 @@
         assertTrue(ps.hasAttr("class"));
         assertFalse(ps.hasAttr("style"));
     }
+
+    @Test public void hasAbsAttr() {
+        Document doc = Jsoup.parse("<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org'>Two</a>");
+        Elements one = doc.select("#1");
+        Elements two = doc.select("#2");
+        Elements both = doc.select("a");
+        assertFalse(one.hasAttr("abs:href"));
+        assertTrue(two.hasAttr("abs:href"));
+        assertTrue(both.hasAttr("abs:href")); // hits on #2
+    }
     
     @Test public void attr() {
         Document doc = Jsoup.parse("<p title=foo><p title=bar><p class=foo><p class=bar>");
@@ -52,6 +62,17 @@
         assertEquals("foo", classVal);
     }
 
+    @Test public void absAttr() {
+        Document doc = Jsoup.parse("<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org'>Two</a>");
+        Elements one = doc.select("#1");
+        Elements two = doc.select("#2");
+        Elements both = doc.select("a");
+
+        assertEquals("", one.attr("abs:href"));
+        assertEquals("http://jsoup.org", two.attr("abs:href"));
+        assertEquals("http://jsoup.org", both.attr("abs:href"));
+    }
+
     @Test public void classes() {
         Document doc = Jsoup.parse("<div><p class='mellow yellow'></p><p class='red green'></p>");
 
