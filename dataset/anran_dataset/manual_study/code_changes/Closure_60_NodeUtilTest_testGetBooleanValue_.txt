commit fbaadc736f0031dd84bebea33abae497b47158cb
Author: nicksantos@google.com <nicksantos@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Wed Jul 6 22:58:25 2011

    fix a mishandling of the void keyword
    also fix a bunch of apis
    fixes issue 504
    
    R=johnlenz
    DELTA=126  (29 added, 0 deleted, 97 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=2506
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1248 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/NodeUtilTest.java b/test/com/google/javascript/jscomp/NodeUtilTest.java
--- a/test/com/google/javascript/jscomp/NodeUtilTest.java
+++ b/test/com/google/javascript/jscomp/NodeUtilTest.java
@@ -91,22 +91,22 @@
   public void testGetBooleanValue() {
-    assertBooleanTrue("true");
-    assertBooleanTrue("10");
-    assertBooleanTrue("'0'");
-    assertBooleanTrue("/a/");
-    assertBooleanTrue("{}");
-    assertBooleanTrue("[]");
-    assertBooleanFalse("false");
-    assertBooleanFalse("null");
-    assertBooleanFalse("0");
-    assertBooleanFalse("''");
-    assertBooleanFalse("undefined");
-    assertBooleanFalse("void 0");
-    assertBooleanFalse("void foo()");
-    assertBooleanUnknown("b");
-    assertBooleanUnknown("-'0.0'");
+    assertPureBooleanTrue("true");
+    assertPureBooleanTrue("10");
+    assertPureBooleanTrue("'0'");
+    assertPureBooleanTrue("/a/");
+    assertPureBooleanTrue("{}");
+    assertPureBooleanTrue("[]");
+    assertPureBooleanFalse("false");
+    assertPureBooleanFalse("null");
+    assertPureBooleanFalse("0");
+    assertPureBooleanFalse("''");
+    assertPureBooleanFalse("undefined");
+    assertPureBooleanFalse("void 0");
+    assertPureBooleanUnknown("void foo()");
+    assertPureBooleanUnknown("b");
+    assertPureBooleanUnknown("-'0.0'");
 
     // Known but getBooleanValue return false for expressions with side-effects
-    assertBooleanUnknown("{a:foo()}");
-    assertBooleanUnknown("[foo()]");
+    assertPureBooleanUnknown("{a:foo()}");
+    assertPureBooleanUnknown("[foo()]");
   }
 

commit 86a7d25f3cc1177f35dc6480260fb807912c03fa
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Fri Mar 25 19:27:41 2011

    Fix bad folding of expressions containing object and array literals with side-effects.
    
    R=nicksantos
    DELTA=144  (94 added, 0 deleted, 50 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=1088
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@941 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/NodeUtilTest.java b/test/com/google/javascript/jscomp/NodeUtilTest.java
--- a/test/com/google/javascript/jscomp/NodeUtilTest.java
+++ b/test/com/google/javascript/jscomp/NodeUtilTest.java
@@ -91,18 +91,22 @@
   public void testGetBooleanValue() {
     assertBooleanTrue("true");
     assertBooleanTrue("10");
     assertBooleanTrue("'0'");
     assertBooleanTrue("/a/");
     assertBooleanTrue("{}");
     assertBooleanTrue("[]");
     assertBooleanFalse("false");
     assertBooleanFalse("null");
     assertBooleanFalse("0");
     assertBooleanFalse("''");
     assertBooleanFalse("undefined");
     assertBooleanFalse("void 0");
     assertBooleanFalse("void foo()");
     assertBooleanUnknown("b");
     assertBooleanUnknown("-'0.0'");
+
+    // Known but getBooleanValue return false for expressions with side-effects
+    assertBooleanUnknown("{a:foo()}");
+    assertBooleanUnknown("[foo()]");
   }
 

commit 9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5
Author: johnlenz@google.com <johnlenz@google.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Jul 20 14:11:37 2010

    Correct "void" operator side-effect detection.
    
    R=bowdidge
    DELTA=17  (13 added, 1 deleted, 3 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=54013
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@298 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/NodeUtilTest.java b/test/com/google/javascript/jscomp/NodeUtilTest.java
--- a/test/com/google/javascript/jscomp/NodeUtilTest.java
+++ b/test/com/google/javascript/jscomp/NodeUtilTest.java
@@ -82,17 +83,18 @@
   public void testGetBooleanValue() {
     assertBooleanTrue("true");
     assertBooleanTrue("10");
     assertBooleanTrue("'0'");
     assertBooleanTrue("/a/");
     assertBooleanTrue("{}");
     assertBooleanTrue("[]");
     assertBooleanFalse("false");
     assertBooleanFalse("null");
     assertBooleanFalse("0");
     assertBooleanFalse("''");
     assertBooleanFalse("undefined");
     assertBooleanFalse("void 0");
+    assertBooleanFalse("void foo()");
     assertBooleanUnknown("b");
     assertBooleanUnknown("-'0.0'");
   }
 

commit e33e925eea3a8e4de958864e531e1adc4da62e18
Author: Nicholas.J.Santos <Nicholas.J.Santos@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Wed Jun 16 15:33:28 2010

    Change on 2010/06/14 by johnlenz
    
            Remove unneed parenthese from hook expressions.
    
            R=acleung
            DELTA=76  (20 added, 4 deleted, 52 changed)
    
    Change on 2010/06/14 by johnlenz
    
            Fix non-determinisim.
    
            R=jschorr
            DELTA=5  (3 added, 0 deleted, 2 changed)
    
    Change on 2010/06/15 by nicksantos
    
            fix a regression caused by a change in the ordering in which
            constant folding is done.
            parts of PeepholeSubstituteAlternateSyntax will crash if they
            see a NEG node with a NUMBER child.
            They were assuming that FoldConstants would fold these into one node.
    
            R=dcc,acleung
            DELTA=153  (70 added, 6 deleted, 77 changed)
    
    Change on 2010/06/15 by johnlenz
    
            More debug diffing improvements: convert unique globally unique names
            to locally unique names for reproduciblity.
    
            R=acleung
            DELTA=222  (44 added, 7 deleted, 171 changed)
    
    Change on 2010/06/15 by nicksantos
    
            Add the @nocompile annotation as a signal that this file should
            be dropped silently if it gets pulled into a --manage_closure_dependencies
            build.
    
            R=bowdidge,gboyer
            DELTA=82  (60 added, 1 deleted, 21 changed)
    
    Change on 2010/06/15 by dcc
    
            Refactor FoldConstants dead code removal into PeepholeRemoveDeadCode.
    
            R=acleung
            DELTA=744  (403 added, 307 deleted, 34 changed)
    
    Change on 2010/06/15 by dcc
    
            ExternExports test now emits type annotation for exported externs.
                    - Changed ExternExportsPass to generate the externs as an AST and then print
            to a String rather than ad hoc with a StringBuilder.
                    - Changed TypedCodeGenerator to generate '*' (AllType) for parameters with unknown types rather than '?' (UnknownType) since '?' is not valid JSDoc.
    
            R=acleung
            DELTA=643  (496 added, 66 deleted, 81 changed)
    
    Change on 2010/06/16 by johnlenz
    
            Tweak to PureFunctionIndentifier to propagate the side-effects for
            anonymous function expressions like: (Date.now||function(){return
            +new Date})()
    
            R=avd
            DELTA=42  (39 added, 0 deleted, 3 changed)
    
    
    Revision created by MOE tool push_codebase.
    MOE_MIGRATION=29010
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@243 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/NodeUtilTest.java b/test/com/google/javascript/jscomp/NodeUtilTest.java
--- a/test/com/google/javascript/jscomp/NodeUtilTest.java
+++ b/test/com/google/javascript/jscomp/NodeUtilTest.java
@@ -81,13 +82,17 @@
   public void testGetBooleanValue() {
-    assertTrue(NodeUtil.getBooleanValue(getNode("true")));
-    assertTrue(NodeUtil.getBooleanValue(getNode("10")));
-    assertTrue(NodeUtil.getBooleanValue(getNode("'0'")));
-    assertTrue(NodeUtil.getBooleanValue(getNode("/a/")));
-    assertTrue(NodeUtil.getBooleanValue(getNode("{}")));
-    assertTrue(NodeUtil.getBooleanValue(getNode("[]")));
-    assertFalse(NodeUtil.getBooleanValue(getNode("false")));
-    assertFalse(NodeUtil.getBooleanValue(getNode("null")));
-    assertFalse(NodeUtil.getBooleanValue(getNode("0")));
-    assertFalse(NodeUtil.getBooleanValue(getNode("''")));
-    assertFalse(NodeUtil.getBooleanValue(getNode("undefined")));
-    assertFalse(NodeUtil.getBooleanValue(getNode("void 0")));
+    assertBooleanTrue("true");
+    assertBooleanTrue("10");
+    assertBooleanTrue("'0'");
+    assertBooleanTrue("/a/");
+    assertBooleanTrue("{}");
+    assertBooleanTrue("[]");
+    assertBooleanFalse("false");
+    assertBooleanFalse("null");
+    assertBooleanFalse("0");
+    assertBooleanFalse("''");
+    assertBooleanFalse("undefined");
+    assertBooleanFalse("void 0");
+    assertBooleanUnknown("b");
+    assertBooleanUnknown("-'0.0'");
+  }
+

commit 6b49cfd9022fe111bdad745c78ea877fbc2f7ba3
Author: nicholas.j.santos@gmail.com <nicholas.j.santos@gmail.com@b0f006be-c8cd-11de-a2e8-8d36a3108c74>
Date:   Tue Nov 3 18:51:57 2009

    Initial commit.
    
    
    
    git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74

diff --git a/test/com/google/javascript/jscomp/NodeUtilTest.java b/test/com/google/javascript/jscomp/NodeUtilTest.java
--- /dev/null
+++ b/test/com/google/javascript/jscomp/NodeUtilTest.java
@@ -0,0 +82,13 @@
+  public void testGetBooleanValue() {
+    assertTrue(NodeUtil.getBooleanValue(getNode("true")));
+    assertTrue(NodeUtil.getBooleanValue(getNode("10")));
+    assertTrue(NodeUtil.getBooleanValue(getNode("'0'")));
+    assertTrue(NodeUtil.getBooleanValue(getNode("/a/")));
+    assertTrue(NodeUtil.getBooleanValue(getNode("{}")));
+    assertTrue(NodeUtil.getBooleanValue(getNode("[]")));
+    assertFalse(NodeUtil.getBooleanValue(getNode("false")));
+    assertFalse(NodeUtil.getBooleanValue(getNode("null")));
+    assertFalse(NodeUtil.getBooleanValue(getNode("0")));
+    assertFalse(NodeUtil.getBooleanValue(getNode("''")));
+    assertFalse(NodeUtil.getBooleanValue(getNode("undefined")));
+    assertFalse(NodeUtil.getBooleanValue(getNode("void 0")));
