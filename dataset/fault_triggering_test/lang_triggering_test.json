{
    "projects": [
        {
            "name": "Lang",
            "bugs": [
                {
                    "bug_id": 1,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.TestLang747",
                            "test_body": "250: public void TestLang747() {\n251: assertEquals(Integer.valueOf(0x8000),      NumberUtils.createNumber(\"0x8000\"));\n252: assertEquals(Integer.valueOf(0x80000),     NumberUtils.createNumber(\"0x80000\"));\n253: assertEquals(Integer.valueOf(0x800000),    NumberUtils.createNumber(\"0x800000\"));\n254: assertEquals(Integer.valueOf(0x8000000),   NumberUtils.createNumber(\"0x8000000\"));\n255: assertEquals(Integer.valueOf(0x7FFFFFFF),  NumberUtils.createNumber(\"0x7FFFFFFF\"));\n256: assertEquals(Long.valueOf(0x80000000L),    NumberUtils.createNumber(\"0x80000000\"));\n257: assertEquals(Long.valueOf(0xFFFFFFFFL),    NumberUtils.createNumber(\"0xFFFFFFFF\"));\n258: 259: // Leading zero tests\n260: assertEquals(Integer.valueOf(0x8000000),   NumberUtils.createNumber(\"0x08000000\"));\n261: assertEquals(Integer.valueOf(0x7FFFFFFF),  NumberUtils.createNumber(\"0x007FFFFFFF\"));\n262: assertEquals(Long.valueOf(0x80000000L),    NumberUtils.createNumber(\"0x080000000\"));\n263: assertEquals(Long.valueOf(0xFFFFFFFFL),    NumberUtils.createNumber(\"0x00FFFFFFFF\"));\n264: 265: assertEquals(Long.valueOf(0x800000000L),        NumberUtils.createNumber(\"0x800000000\"));\n266: assertEquals(Long.valueOf(0x8000000000L),       NumberUtils.createNumber(\"0x8000000000\"));\n267: assertEquals(Long.valueOf(0x80000000000L),      NumberUtils.createNumber(\"0x80000000000\"));\n268: assertEquals(Long.valueOf(0x800000000000L),     NumberUtils.createNumber(\"0x800000000000\"));\n269: assertEquals(Long.valueOf(0x8000000000000L),    NumberUtils.createNumber(\"0x8000000000000\"));\n270: assertEquals(Long.valueOf(0x80000000000000L),   NumberUtils.createNumber(\"0x80000000000000\"));\n271: assertEquals(Long.valueOf(0x800000000000000L),  NumberUtils.createNumber(\"0x800000000000000\"));\n272: assertEquals(Long.valueOf(0x7FFFFFFFFFFFFFFFL), NumberUtils.createNumber(\"0x7FFFFFFFFFFFFFFF\"));\n273: // N.B. Cannot use a hex constant such as 0x8000000000000000L here as that is interpreted as a negative long\n274: assertEquals(new BigInteger(\"8000000000000000\", 16), NumberUtils.createNumber(\"0x8000000000000000\"));\n275: assertEquals(new BigInteger(\"FFFFFFFFFFFFFFFF\", 16), NumberUtils.createNumber(\"0xFFFFFFFFFFFFFFFF\"));\n276: 277: // Leading zero tests\n278: assertEquals(Long.valueOf(0x80000000000000L),   NumberUtils.createNumber(\"0x00080000000000000\"));\n279: assertEquals(Long.valueOf(0x800000000000000L),  NumberUtils.createNumber(\"0x0800000000000000\"));\n280: assertEquals(Long.valueOf(0x7FFFFFFFFFFFFFFFL), NumberUtils.createNumber(\"0x07FFFFFFFFFFFFFFF\"));\n281: // N.B. Cannot use a hex constant such as 0x8000000000000000L here as that is interpreted as a negative long\n282: assertEquals(new BigInteger(\"8000000000000000\", 16), NumberUtils.createNumber(\"0x00008000000000000000\"));\n283: assertEquals(new BigInteger(\"FFFFFFFFFFFFFFFF\", 16), NumberUtils.createNumber(\"0x0FFFFFFFFFFFFFFFF\"));\n284: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "450: public static Number createNumber(final String str) throws NumberFormatException {\n451: if (str == null) {\n454: if (StringUtils.isBlank(str)) {\n458: final String[] hex_prefixes = {\"0x\", \"0X\", \"-0x\", \"-0X\", \"#\", \"-#\"};\n459: int pfxLen = 0;\n460: for(final String pfx : hex_prefixes) {\n461: if (str.startsWith(pfx)) {\n462: pfxLen += pfx.length();\n463: break;\n466: if (pfxLen > 0) { // we have a hex number\n467: final int hexDigits = str.length() - pfxLen;\n468: if (hexDigits > 16) { // too many for Long\n471: if (hexDigits > 8) { // too many for an int\n474: return createInteger(str);\n614: }",
                                    "suspicious_rank": 0.316
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;",
                                    "method_body": "679: public static Integer createInteger(final String str) {\n680: if (str == null) {\n684: return Integer.decode(str);\n685: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "255: public static boolean isBlank(final CharSequence cs) {\n257: if (cs == null || (strLen = cs.length()) == 0) {\n260: for (int i = 0; i < strLen; i++) {\n261: if (Character.isWhitespace(cs.charAt(i)) == false) {\n262: return false;\n266: }",
                                    "suspicious_rank": 0.18
                                }
                            ],
                            "stack_trace": "java.lang.NumberFormatException: For input string: \"80000000\"\nat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\nat java.lang.Integer.parseInt(Integer.java:495)\nat java.lang.Integer.valueOf(Integer.java:556)\nat java.lang.Integer.decode(Integer.java:984)\nat org.apache.commons.lang3.math.NumberUtils.createInteger(NumberUtils.java:684)\nat org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:474)\nat org.apache.commons.lang3.math.NumberUtilsTest.TestLang747(NumberUtilsTest.java:256)"
                        }
                    ]
                },
                {
                    "bug_id": 2,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales",
                            "test_body": "546: public void testParseAllLocales() {\n547: Locale[] locales = Locale.getAvailableLocales();\n548: int failures = 0;\n549: for (Locale l : locales) {\n550: // Check if it's possible to recreate the Locale using just the standard constructor\n551: Locale locale = new Locale(l.getLanguage(), l.getCountry(), l.getVariant());\n552: if (l.equals(locale)) { // it is possible for LocaleUtils.toLocale to handle these Locales\n553: String str = l.toString();\n554: // Look for the script/extension suffix\n555: int suff = str.indexOf(\"_#\");\n556: if (suff == - 1) {\n557: suff = str.indexOf(\"#\");\n558: }\n559: if (suff >= 0) { // we have a suffix\n560: try {\n561: LocaleUtils.toLocale(str); // shouuld cause IAE\n562: System.out.println(\"Should not have parsed: \" + str);\n563: failures++;\n564: continue; // try next Locale\n565: } catch (IllegalArgumentException iae) {\n566: // expected; try without suffix\n567: str = str.substring(0, suff);\n568: }\n569: }\n570: Locale loc = LocaleUtils.toLocale(str);\n571: if (!l.equals(loc)) {\n572: System.out.println(\"Failed to parse: \" + str);\n573: failures++;\n574: }                    \n575: }\n576: }\n577: if (failures > 0) {\n578: fail(\"Failed \"+failures+\" test(s)\");\n579: }\n580: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "238: public static boolean isAvailableLocale(final Locale locale) {\n239: return availableLocaleList().contains(locale);\n240: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.LocaleUtils:toLocale(Ljava/lang/String;)Ljava/util/Locale;",
                                    "method_body": "88: public static Locale toLocale(final String str) {\n89: if (str == null) {\n92: final int len = str.length();\n93: if (len < 2) {\n96: final char ch0 = str.charAt(0);\n97: if (ch0 == '_') {\n117: final char ch1 = str.charAt(1);\n118: if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n121: if (len == 2) {\n122: return new Locale(str);\n124: if (len < 5) {\n127: if (str.charAt(2) != '_') {\n130: final char ch3 = str.charAt(3);\n131: if (ch3 == '_') {\n134: final char ch4 = str.charAt(4);\n135: if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n138: if (len == 5) {\n139: return new Locale(str.substring(0, 2), str.substring(3, 5));\n141: if (len < 7) {\n144: if (str.charAt(5) != '_') {\n147: return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n149: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.LocaleUtils:availableLocaleList()Ljava/util/List;",
                                    "method_body": "213: public static List<Locale> availableLocaleList() {\n214: return SyncAvoid.AVAILABLE_LOCALE_LIST;\n215: }",
                                    "suspicious_rank": 0.154
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Failed 2 test(s)\nat org.junit.Assert.fail(Assert.java:88)\nat org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales(LocaleUtilsTest.java:578)"
                        }
                    ]
                },
                {
                    "bug_id": 3,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss",
                            "test_body": "123: public void testStringCreateNumberEnsureNoPrecisionLoss(){\n124: String shouldBeFloat = \"1.23\";\n125: String shouldBeDouble = \"3.40282354e+38\";\n126: String shouldBeBigDecimal = \"1.797693134862315759e+308\";\n127: 128: assertTrue(NumberUtils.createNumber(shouldBeFloat) instanceof Float);\n129: assertTrue(NumberUtils.createNumber(shouldBeDouble) instanceof Double);\n130: assertTrue(NumberUtils.createNumber(shouldBeBigDecimal) instanceof BigDecimal);\n131: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "450: public static Number createNumber(final String str) throws NumberFormatException {\n451: if (str == null) {\n454: if (StringUtils.isBlank(str)) {\n458: final String[] hex_prefixes = {\"0x\", \"0X\", \"-0x\", \"-0X\", \"#\", \"-#\"};\n459: int pfxLen = 0;\n460: for(final String pfx : hex_prefixes) {\n461: if (str.startsWith(pfx)) {\n466: if (pfxLen > 0) { // we have a hex number\n476: final char lastChar = str.charAt(str.length() - 1);\n480: final int decPos = str.indexOf('.');\n481: final int expPos = str.indexOf('e') + str.indexOf('E') + 1; // assumes both not present\n485: int numDecimals = 0; // Check required precision (LANG-693)\n486: if (decPos > -1) { // there is a decimal point\n488: if (expPos > -1) { // there is an exponent\n489: if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE\n492: dec = str.substring(decPos + 1, expPos);\n494: dec = str.substring(decPos + 1);\n496: mant = str.substring(0, decPos);\n497: numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.\n509: if (!Character.isDigit(lastChar) && lastChar != '.') {\n570: if (expPos > -1 && expPos < str.length() - 1) {\n571: exp = str.substring(expPos + 1, str.length());\n573: exp = null;\n575: if (dec == null && exp == null) { // no decimal point and no exponent\n591: final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n593: final Float f = createFloat(str);\n594: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n595: return f;\n610: }",
                                    "suspicious_rank": 0.192
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;",
                                    "method_body": "642: public static Float createFloat(final String str) {\n643: if (str == null) {\n646: return Float.valueOf(str);\n647: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "620: private static boolean isAllZeros(final String str) {\n621: if (str == null) {\n624: for (int i = str.length() - 1; i >= 0; i--) {\n625: if (str.charAt(i) != '0') {\n626: return false;\n630: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "255: public static boolean isBlank(final CharSequence cs) {\n257: if (cs == null || (strLen = cs.length()) == 0) {\n260: for (int i = 0; i < strLen; i++) {\n261: if (Character.isWhitespace(cs.charAt(i)) == false) {\n262: return false;\n266: }",
                                    "suspicious_rank": 0.105
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError\nat org.junit.Assert.fail(Assert.java:86)\nat org.junit.Assert.assertTrue(Assert.java:41)\nat org.junit.Assert.assertTrue(Assert.java:52)\nat org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(NumberUtilsTest.java:129)"
                        }
                    ]
                },
                {
                    "bug_id": 4,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882",
                            "test_body": "44: public void testLang882() throws IOException {\n45: final LookupTranslator lt = new LookupTranslator(new CharSequence[][] { { new StringBuffer(\"one\"), new StringBuffer(\"two\") } });\n46: final StringWriter out = new StringWriter();\n47: final int result = lt.translate(new StringBuffer(\"one\"), 0, out);\n48: assertEquals(\"Incorrect codepoint consumption\", 3, result);\n49: assertEquals(\"Incorrect value\", \"two\", out.toString());\n50: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.LookupTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "69: public int translate(final CharSequence input, final int index, final Writer out) throws IOException {\n70: int max = longest;\n71: if (index + longest > input.length()) {\n75: for (int i = max; i >= shortest; i--) {\n76: final CharSequence subSeq = input.subSequence(index, index + i);\n77: final CharSequence result = lookupMap.get(subSeq);\n78: if (result != null) {\n83: return 0;\n84: }",
                                    "suspicious_rank": 0.113
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.LookupTranslator:<init>([[Ljava/lang/CharSequence;)V",
                                    "method_body": "45: public LookupTranslator(final CharSequence[]... lookup) {\n46: lookupMap = new HashMap<CharSequence, CharSequence>();\n47: int _shortest = Integer.MAX_VALUE;\n48: int _longest = 0;\n49: if (lookup != null) {\n50: for (final CharSequence[] seq : lookup) {\n51: this.lookupMap.put(seq[0], seq[1]);\n52: final int sz = seq[0].length();\n53: if (sz < _shortest) {\n54: _shortest = sz;\n56: if (sz > _longest) {\n57: _longest = sz;\n61: shortest = _shortest;\n62: longest = _longest;\n63: }",
                                    "suspicious_rank": 0.104
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Incorrect codepoint consumption expected:<3> but was:<0>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.junit.Assert.assertEquals(Assert.java:555)\nat org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882(LookupTranslatorTest.java:48)"
                        }
                    ]
                },
                {
                    "bug_id": 5,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.LocaleUtilsTest.testLang865",
                            "test_body": "504: public void testLang865() {\n505: assertValidToLocale(\"_GB\", \"\", \"GB\", \"\");\n506: assertValidToLocale(\"_GB_P\", \"\", \"GB\", \"P\");\n507: assertValidToLocale(\"_GB_POSIX\", \"\", \"GB\", \"POSIX\");\n508: try {\n509: LocaleUtils.toLocale(\"_G\");\n510: fail(\"Must be at least 3 chars if starts with underscore\");\n511: } catch (final IllegalArgumentException iae) {\n512: }\n513: try {\n514: LocaleUtils.toLocale(\"_Gb\");\n515: fail(\"Must be uppercase if starts with underscore\");\n516: } catch (final IllegalArgumentException iae) {\n517: }\n518: try {\n519: LocaleUtils.toLocale(\"_gB\");\n520: fail(\"Must be uppercase if starts with underscore\");\n521: } catch (final IllegalArgumentException iae) {\n522: }\n523: try {\n524: LocaleUtils.toLocale(\"_1B\");\n525: fail(\"Must be letter if starts with underscore\");\n526: } catch (final IllegalArgumentException iae) {\n527: }\n528: try {\n529: LocaleUtils.toLocale(\"_G1\");\n530: fail(\"Must be letter if starts with underscore\");\n531: } catch (final IllegalArgumentException iae) {\n532: }\n533: try {\n534: LocaleUtils.toLocale(\"_GB_\");\n535: fail(\"Must be at least 5 chars if starts with underscore\");\n536: } catch (final IllegalArgumentException iae) {\n537: }\n538: try {\n539: LocaleUtils.toLocale(\"_GBAP\");\n540: fail(\"Must have underscore after the country if starts with underscore and is at least 5 chars\");\n541: } catch (final IllegalArgumentException iae) {\n542: }\n543: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.LocaleUtils:toLocale(Ljava/lang/String;)Ljava/util/Locale;",
                                    "method_body": "88: public static Locale toLocale(final String str) {\n89: if (str == null) {\n92: final int len = str.length();\n93: if (len < 2) {\n94: throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n128: }",
                                    "suspicious_rank": 0.258
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.LocaleUtils$SyncAvoid:access$100()Ljava/util/Set;",
                                    "method_body": "263: public static List<Locale> countriesByLanguage(String languageCode) {\n284: }"
                                }
                            ],
                            "stack_trace": "java.lang.IllegalArgumentException: Invalid locale format: _GB\nat org.apache.commons.lang3.LocaleUtils.toLocale(LocaleUtils.java:99)\nat org.apache.commons.lang3.LocaleUtilsTest.assertValidToLocale(LocaleUtilsTest.java:119)\nat org.apache.commons.lang3.LocaleUtilsTest.testLang865(LocaleUtilsTest.java:505)"
                        }
                    ]
                },
                {
                    "bug_id": 6,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs",
                            "test_body": "2186: public void testEscapeSurrogatePairs() throws Exception {\n2187: assertEquals(\"\\uD83D\\uDE30\", StringEscapeUtils.escapeCsv(\"\\uD83D\\uDE30\"));\n2188: // Examples from https://en.wikipedia.org/wiki/UTF-16\n2189: assertEquals(\"\\uD800\\uDC00\", StringEscapeUtils.escapeCsv(\"\\uD800\\uDC00\"));\n2190: assertEquals(\"\\uD834\\uDD1E\", StringEscapeUtils.escapeCsv(\"\\uD834\\uDD1E\"));\n2191: assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.escapeCsv(\"\\uDBFF\\uDFFD\"));\n2192: 2193: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;[C)Z",
                                    "method_body": "1736: public static boolean containsNone(CharSequence cs, char... searchChars) {\n1737: if (cs == null || searchChars == null) {\n1740: int csLen = cs.length();\n1741: int csLast = csLen - 1;\n1742: int searchLen = searchChars.length;\n1743: int searchLast = searchLen - 1;\n1744: for (int i = 0; i < csLen; i++) {\n1745: char ch = cs.charAt(i);\n1746: for (int j = 0; j < searchLen; j++) {\n1747: if (searchChars[j] == ch) {\n1763: return true;\n1764: }",
                                    "suspicious_rank": 0.192
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringEscapeUtils:escapeCsv(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "555: public static final String escapeCsv(String input) {\n556: return ESCAPE_CSV.translate(input);\n557: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringEscapeUtils$CsvEscaper:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "154: public int translate(CharSequence input, int index, Writer out) throws IOException {\n156: if(index != 0) {\n160: if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {\n161: out.write(input.toString());\n167: return input.length();\n168: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
                                    "method_body": "46: public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\n54: if (input == null) {\n58: StringWriter writer = new StringWriter(input.length() * 2);\n59: translate(input, writer);\n60: return writer.toString();\n65: }",
                                    "suspicious_rank": 0.096
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
                                    "method_body": "75: public final void translate(CharSequence input, Writer out) throws IOException {\n76: if (out == null) {\n79: if (input == null) {\n82: int pos = 0;\n83: int len = input.length();\n84: while (pos < len) {\n85: int consumed = translate(input, pos, out);\n86: if (consumed == 0) {\n94: for (int pt = 0; pt < consumed; pt++) {\n95: pos += Character.charCount(Character.codePointAt(input, pos));\n98: }",
                                    "suspicious_rank": 0.094
                                }
                            ],
                            "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 2\nat java.lang.String.charAt(String.java:658)\nat java.lang.Character.codePointAt(Character.java:4668)\nat org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:95)\nat org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:59)\nat org.apache.commons.lang3.StringEscapeUtils.escapeCsv(StringEscapeUtils.java:556)\nat org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs(StringUtilsTest.java:2187)"
                        }
                    ]
                },
                {
                    "bug_id": 7,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber",
                            "test_body": "185: public void testCreateNumber() {\n186: // a lot of things can go wrong\n187: assertEquals(\"createNumber(String) 1 failed\", Float.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5\"));\n188: assertEquals(\"createNumber(String) 2 failed\", Integer.valueOf(\"12345\"), NumberUtils.createNumber(\"12345\"));\n189: assertEquals(\"createNumber(String) 3 failed\", Double.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5D\"));\n190: assertEquals(\"createNumber(String) 3 failed\", Double.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5d\"));\n191: assertEquals(\"createNumber(String) 4 failed\", Float.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5F\"));\n192: assertEquals(\"createNumber(String) 4 failed\", Float.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5f\"));\n193: assertEquals(\"createNumber(String) 5 failed\", Long.valueOf(Integer.MAX_VALUE + 1L), NumberUtils.createNumber(\"\"\n194: + (Integer.MAX_VALUE + 1L)));\n195: assertEquals(\"createNumber(String) 6 failed\", Long.valueOf(12345), NumberUtils.createNumber(\"12345L\"));\n196: assertEquals(\"createNumber(String) 6 failed\", Long.valueOf(12345), NumberUtils.createNumber(\"12345l\"));\n197: assertEquals(\"createNumber(String) 7 failed\", Float.valueOf(\"-1234.5\"), NumberUtils.createNumber(\"-1234.5\"));\n198: assertEquals(\"createNumber(String) 8 failed\", Integer.valueOf(\"-12345\"), NumberUtils.createNumber(\"-12345\"));\n199: assertTrue(\"createNumber(String) 9a failed\", 0xFADE == NumberUtils.createNumber(\"0xFADE\").intValue());\n200: assertTrue(\"createNumber(String) 9b failed\", 0xFADE == NumberUtils.createNumber(\"0Xfade\").intValue());\n201: assertTrue(\"createNumber(String) 10a failed\", -0xFADE == NumberUtils.createNumber(\"-0xFADE\").intValue());\n202: assertTrue(\"createNumber(String) 10b failed\", -0xFADE == NumberUtils.createNumber(\"-0Xfade\").intValue());\n203: assertEquals(\"createNumber(String) 11 failed\", Double.valueOf(\"1.1E200\"), NumberUtils.createNumber(\"1.1E200\"));\n204: assertEquals(\"createNumber(String) 12 failed\", Float.valueOf(\"1.1E20\"), NumberUtils.createNumber(\"1.1E20\"));\n205: assertEquals(\"createNumber(String) 13 failed\", Double.valueOf(\"-1.1E200\"), NumberUtils.createNumber(\"-1.1E200\"));\n206: assertEquals(\"createNumber(String) 14 failed\", Double.valueOf(\"1.1E-200\"), NumberUtils.createNumber(\"1.1E-200\"));\n207: assertEquals(\"createNumber(null) failed\", null, NumberUtils.createNumber(null));\n208: assertEquals(\"createNumber(String) failed\", new BigInteger(\"12345678901234567890\"), NumberUtils\n209: .createNumber(\"12345678901234567890L\"));\n210: 211: // jdk 1.2 doesn't support this. unsure about jdk 1.2.2\n212: if (SystemUtils.isJavaVersionAtLeast(JAVA_1_3)) {\n213: assertEquals(\"createNumber(String) 15 failed\", new BigDecimal(\"1.1E-700\"), NumberUtils\n214: .createNumber(\"1.1E-700F\"));\n215: }\n216: assertEquals(\"createNumber(String) 16 failed\", Long.valueOf(\"10\" + Integer.MAX_VALUE), NumberUtils\n217: .createNumber(\"10\" + Integer.MAX_VALUE + \"L\"));\n218: assertEquals(\"createNumber(String) 17 failed\", Long.valueOf(\"10\" + Integer.MAX_VALUE), NumberUtils\n219: .createNumber(\"10\" + Integer.MAX_VALUE));\n220: assertEquals(\"createNumber(String) 18 failed\", new BigInteger(\"10\" + Long.MAX_VALUE), NumberUtils\n221: .createNumber(\"10\" + Long.MAX_VALUE));\n222: 223: // LANG-521\n224: assertEquals(\"createNumber(String) LANG-521 failed\", Float.valueOf(\"2.\"), NumberUtils.createNumber(\"2.\"));\n225: 226: // LANG-638\n227: assertFalse(\"createNumber(String) succeeded\", checkCreateNumber(\"1eE\"));\n228: 229: // LANG-693\n230: assertEquals(\"createNumber(String) LANG-693 failed\", Double.valueOf(Double.MAX_VALUE), NumberUtils\n231: .createNumber(\"\" + Double.MAX_VALUE));\n232: 233: // LANG-822\n234: // ensure that the underlying negative number would create a BigDecimal\n235: final Number bigNum = NumberUtils.createNumber(\"-1.1E-700F\");\n236: assertEquals(BigDecimal.class,bigNum.getClass());\n237: assertNotNull(bigNum);\n238: 239: // Check that the code fails to create a valid number when preceeded by -- rather than -\n240: try {\n241: NumberUtils.createNumber(\"--1.1E-700F\");\n242: fail(\"Expected NumberFormatException\");\n243: } catch (NumberFormatException nfe) {\n244: // expected\n245: }\n246: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;",
                                    "method_body": "681: public static Long createLong(String str) {\n682: if (str == null) {\n685: return Long.decode(str);\n686: }",
                                    "suspicious_rank": 0.289
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isDigits(Ljava/lang/String;)Z",
                                    "method_body": "1295: public static boolean isDigits(String str) {\n1296: if (StringUtils.isEmpty(str)) {\n1299: for (int i = 0; i < str.length(); i++) {\n1300: if (!Character.isDigit(str.charAt(i))) {\n1304: return true;\n1305: }",
                                    "suspicious_rank": 0.289
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:isJavaVersionAtLeast(Lorg/apache/commons/lang3/JavaVersion;)Z",
                                    "method_body": "1382: public static boolean isJavaVersionAtLeast(JavaVersion requiredVersion) {\n1383: return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);\n1384: }",
                                    "suspicious_rank": 0.113
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;",
                                    "method_body": "663: public static Integer createInteger(String str) {\n664: if (str == null) {\n668: return Integer.decode(str);\n669: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "608: private static boolean isAllZeros(String str) {\n609: if (str == null) {\n612: for (int i = str.length() - 1; i >= 0; i--) {\n613: if (str.charAt(i) != '0') {\n614: return false;\n618: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;",
                                    "method_body": "646: public static Double createDouble(String str) {\n647: if (str == null) {\n650: return Double.valueOf(str);\n651: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;",
                                    "method_body": "630: public static Float createFloat(String str) {\n631: if (str == null) {\n634: return Float.valueOf(str);\n635: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.JavaVersion:atLeast(Lorg/apache/commons/lang3/JavaVersion;)Z",
                                    "method_body": "104: public boolean atLeast(JavaVersion requiredVersion) {\n105: return this.value >= requiredVersion.value;\n106: }",
                                    "suspicious_rank": 0.111
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "233: public static boolean isBlank(CharSequence cs) {\n235: if (cs == null || (strLen = cs.length()) == 0) {\n238: for (int i = 0; i < strLen; i++) {\n239: if (Character.isWhitespace(cs.charAt(i)) == false) {\n240: return false;\n244: }",
                                    "suspicious_rank": 0.118
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;",
                                    "method_body": "713: public static BigDecimal createBigDecimal(String str) {\n714: if (str == null) {\n718: if (StringUtils.isBlank(str)) {\n725: return new BigDecimal(str);\n726: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "445: public static Number createNumber(String str) throws NumberFormatException {\n446: if (str == null) {\n447: return null;\n449: if (StringUtils.isBlank(str)) {\n452: if (str.startsWith(\"--\")) {\n453: return null;\n455: if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n456: int hexDigits = str.length() - 2; // drop 0x\n457: if (str.startsWith(\"-\")) { // drop -\n458: hexDigits--;\n460: if (hexDigits > 8) { // too many for an int\n463: return createInteger(str);\n465: char lastChar = str.charAt(str.length() - 1);\n469: int decPos = str.indexOf('.');\n470: int expPos = str.indexOf('e') + str.indexOf('E') + 1;\n472: if (decPos > -1) {\n474: if (expPos > -1) {\n475: if (expPos < decPos || expPos > str.length()) {\n478: dec = str.substring(decPos + 1, expPos);\n480: dec = str.substring(decPos + 1);\n482: mant = str.substring(0, decPos);\n484: if (expPos > -1) {\n485: if (expPos > str.length()) {\n486: throw new NumberFormatException(str + \" is not a valid number.\");\n490: mant = str;\n492: dec = null;\n494: if (!Character.isDigit(lastChar) && lastChar != '.') {\n495: if (expPos > -1 && expPos < str.length() - 1) {\n496: exp = str.substring(expPos + 1, str.length() - 1);\n498: exp = null;\n501: String numeric = str.substring(0, str.length() - 1);\n502: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n503: switch (lastChar) {\n506: if (dec == null\n510: return createLong(numeric);\n511: } catch (NumberFormatException nfe) { // NOPMD\n514: return createBigInteger(numeric);\n521: Float f = NumberUtils.createFloat(numeric);\n522: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n525: return f;\n530: }\n535: Double d = NumberUtils.createDouble(numeric);\n536: if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n537: return d;\n541: }\n543: return createBigDecimal(numeric);\n555: if (expPos > -1 && expPos < str.length() - 1) {\n556: exp = str.substring(expPos + 1, str.length());\n558: exp = null;\n560: if (dec == null && exp == null) {\n563: return createInteger(str);\n564: } catch (NumberFormatException nfe) { // NOPMD\n568: return createLong(str);\n569: } catch (NumberFormatException nfe) { // NOPMD\n572: return createBigInteger(str);\n576: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n578: Float f = createFloat(str);\n579: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n580: return f;\n584: }\n586: Double d = createDouble(str);\n587: if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n588: return d;\n598: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "194: public static boolean isEmpty(CharSequence cs) {\n195: return cs == null || cs.length() == 0;\n196: }",
                                    "suspicious_rank": 0.037
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;",
                                    "method_body": "697: public static BigInteger createBigInteger(String str) {\n698: if (str == null) {\n701: return new BigInteger(str);\n702: }",
                                    "suspicious_rank": 0.333
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected NumberFormatException\nat org.junit.Assert.fail(Assert.java:88)\nat org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:242)"
                        }
                    ]
                },
                {
                    "bug_id": 8,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected",
                            "test_body": null,
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getDisplayNames(ILjava/util/Calendar;Ljava/util/Locale;)Ljava/util/Map;",
                                    "method_body": "345: private static Map<String, Integer> getDisplayNames(int field, Calendar definingCalendar, Locale locale) {\n346: return definingCalendar.getDisplayNames(field, Calendar.ALL_STYLES, locale);\n347: }",
                                    "suspicious_rank": 0.122
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:getTimeZoneDisplay(Ljava/util/TimeZone;ZILjava/util/Locale;)Ljava/lang/String;",
                                    "method_body": "1078: static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale) {\n1079: TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);\n1080: String value = cTimeZoneDisplayCache.get(key);\n1081: if (value == null) {\n1089: return value;\n1090: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "118: public static FastDateFormat getInstance(String pattern) {\n119: return cache.getInstance(pattern, null, null);\n120: }",
                                    "suspicious_rank": 0.16
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:format(Ljava/util/Calendar;)Ljava/lang/String;",
                                    "method_body": "414: public String format(Calendar calendar) {\n415: return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();\n416: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField:estimateLength()I",
                                    "method_body": "995: public int estimateLength() {\n996: return mRule.estimateLength();\n997: }",
                                    "suspicious_rank": 0.243
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:<init>(C)V",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n616: buffer.append(mValue);\n617: }\n618: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "720: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n721: regex.append(validTimeZoneChars);\n722: return true;\n723: }",
                                    "suspicious_rank": 0.243
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:applyRules(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "452: protected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {\n453: for (Rule rule : mRules) {\n454: rule.appendTo(buf, calendar);\n456: return buf;\n457: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:estimateLength()I",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n616: buffer.append(mValue);\n617: }\n618: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "136: protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale) {\n137: mPattern = pattern;\n138: mTimeZone = timeZone;\n139: mLocale = locale;\n141: init();\n142: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField:<init>(I)V",
                                    "method_body": "863: TwoDigitNumberField(int field) {\n864: mField = field;\n865: }",
                                    "suspicious_rank": 0.16
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:<init>([Ljava/lang/Object;)V",
                                    "method_body": "179: public MultipartKey(Object... keys) {\n180: this.keys = keys;\n181: }",
                                    "suspicious_rank": 0.157
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "97: protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {\n98: this.pattern = pattern;\n99: this.timeZone = timeZone;\n100: this.locale = locale;\n101: init();\n102: }",
                                    "suspicious_rank": 0.185
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getStrategy(Ljava/lang/String;Ljava/util/Calendar;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;",
                                    "method_body": "386: boolean isNumber();\n419: switch(formatField.charAt(0)) {\n426: return new CopyQuotedStrategy(formatField);\n446: return getLocaleSpecificStrategy(Calendar.AM_PM, definingCalendar);\n450: return MODULO_HOUR_STRATEGY;\n454: return MINUTE_STRATEGY;\n463: return getLocaleSpecificStrategy(Calendar.ZONE_OFFSET, definingCalendar);\n465: }",
                                    "suspicious_rank": 0.185
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "577: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n578: regex.append('(');\n579: for(String textKeyValue : keyValues.keySet()) {\n580: escapeRegex(regex, textKeyValue, false).append('|');\n581: }\n582: regex.setCharAt(regex.length()-1, ')');\n583: return true;\n584: }",
                                    "suspicious_rank": 0.122
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:isNumber()Z",
                                    "method_body": "569: public boolean isNumber() {\n570: return false;\n571: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField:estimateLength()I",
                                    "method_body": "715: public int estimateLength() {\n716: return 4;\n717: }",
                                    "suspicious_rank": 0.2
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TextField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "691: public void appendTo(StringBuffer buffer, Calendar calendar) {\n692: buffer.append(mValues[calendar.get(mField)]);\n693: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/text/Format;",
                                    "method_body": "69: public F getInstance(String pattern, TimeZone timeZone, Locale locale) {\n70: if (pattern == null) {\n73: if (timeZone == null) {\n74: timeZone = TimeZone.getDefault();\n76: if (locale == null) {\n77: locale = Locale.getDefault();\n79: MultipartKey key = new MultipartKey(pattern, timeZone, locale);\n80: F format = cInstanceCache.get(key);\n81: if (format == null) {\n82: format = createInstance(pattern, timeZone, locale);\n83: F previousValue= cInstanceCache.putIfAbsent(key, format);\n84: if (previousValue != null) {\n90: return format;\n91: }",
                                    "suspicious_rank": 0.159
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField:<init>(Lorg/apache/commons/lang3/time/FastDatePrinter$NumberRule;)V",
                                    "method_body": "987: TwelveHourField(NumberRule rule) {\n988: mRule = rule;\n989: }",
                                    "suspicious_rank": 0.243
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getCache(I)Ljava/util/concurrent/ConcurrentMap;",
                                    "method_body": "475: private static ConcurrentMap<Locale, Strategy> getCache(int field) {\n476: synchronized(caches) {\n477: if(caches[field]==null) {\n480: return caches[field];\n482: }",
                                    "suspicious_rank": 0.226
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "536: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n537: escapeRegex(regex, formatField, true);\n538: return false;\n539: }",
                                    "suspicious_rank": 0.187
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TextField:<init>(I[Ljava/lang/String;)V",
                                    "method_body": "667: TextField(int field, String[] values) {\n668: mField = field;\n669: mValues = values;\n670: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "887: public final void appendTo(StringBuffer buffer, int value) {\n888: if (value < 100) {\n889: buffer.append((char)(value / 10 + '0'));\n890: buffer.append((char)(value % 10 + '0'));\n894: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule:estimateLength()I",
                                    "method_body": "1122: public int estimateLength() {\n1126: return Math.max(mStandard.length(), mDaylight.length());\n1127: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:<init>(ILjava/util/Calendar;Ljava/util/Locale;)V",
                                    "method_body": "560: TextStrategy(int field, Calendar definingCalendar, Locale locale) {\n561: this.field= field;\n562: this.keyValues= getDisplayNames(field, definingCalendar, locale);\n563: }",
                                    "suspicious_rank": 0.122
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "879: public void appendTo(StringBuffer buffer, Calendar calendar) {\n880: appendTo(buffer, calendar.get(mField));\n881: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:isNumber()Z",
                                    "method_body": "524: public boolean isNumber() {\n525: char c= formatField.charAt(0);\n526: if(c=='\\'') {\n529: return Character.isDigit(c);\n530: }",
                                    "suspicious_rank": 0.189
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField:<init>(I)V",
                                    "method_body": "707: UnpaddedNumberField(int field) {\n708: mField = field;\n709: }",
                                    "suspicious_rank": 0.2
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Calendar;)Ljava/lang/String;",
                                    "method_body": "419: public String format(Calendar calendar) {\n420: return printer.format(calendar);\n421: }",
                                    "suspicious_rank": 0.164
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey:<init>(Ljava/util/TimeZone;ZILjava/util/Locale;)V",
                                    "method_body": "1215: TimeZoneDisplayKey(TimeZone timeZone,\n1216: boolean daylight, int style, Locale locale) {\n1217: mTimeZone = timeZone;\n1218: if (daylight) {\n1219: style |= 0x80000000;\n1221: mStyle = style;\n1222: mLocale = locale;\n1223: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1133: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1134: if (zone.useDaylightTime()\n1138: buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));\n1140: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "440: public StringBuffer format(Calendar calendar, StringBuffer buf) {\n441: return applyRules(calendar, buf);\n442: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1003: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1004: int value = calendar.get(Calendar.HOUR);\n1005: if (value == 0) {\n1008: mRule.appendTo(buffer, value);\n1009: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy:<init>(Ljava/util/Locale;)V",
                                    "method_body": "686: TimeZoneStrategy(Locale locale) {\n687: for(String id : TimeZone.getAvailableIDs()) {\n688: if(id.startsWith(\"GMT\")) {\n689: continue;\n691: TimeZone tz= TimeZone.getTimeZone(id);\n692: tzNames.put(tz.getDisplayName(false, TimeZone.SHORT, locale), tz);\n693: tzNames.put(tz.getDisplayName(false, TimeZone.LONG, locale), tz);\n694: if(tz.useDaylightTime()) {\n695: tzNames.put(tz.getDisplayName(true, TimeZone.SHORT, locale), tz);\n696: tzNames.put(tz.getDisplayName(true, TimeZone.LONG, locale), tz);\n699: StringBuilder sb= new StringBuilder();\n700: sb.append(\"(GMT[+\\\\-]\\\\d{0,1}\\\\d{2}|[+\\\\-]\\\\d{2}:?\\\\d{2}|\");\n701: for(String id : tzNames.keySet()) {\n702: escapeRegex(sb, id, false).append('|');\n703: }\n704: sb.setCharAt(sb.length()-1, ')');\n705: validTimeZoneChars= sb.toString();\n706: }",
                                    "suspicious_rank": 0.243
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:parsePattern()Ljava/util/List;",
                                    "method_body": "167: protected List<Rule> parsePattern() {\n168: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n169: List<Rule> rules = new ArrayList<Rule>();\n171: String[] ERAs = symbols.getEras();\n172: String[] months = symbols.getMonths();\n173: String[] shortMonths = symbols.getShortMonths();\n174: String[] weekdays = symbols.getWeekdays();\n175: String[] shortWeekdays = symbols.getShortWeekdays();\n176: String[] AmPmStrings = symbols.getAmPmStrings();\n178: int length = mPattern.length();\n179: int[] indexRef = new int[1];\n181: for (int i = 0; i < length; i++) {\n182: indexRef[0] = i;\n183: String token = parseToken(mPattern, indexRef);\n184: i = indexRef[0];\n186: int tokenLen = token.length();\n187: if (tokenLen == 0) {\n192: char c = token.charAt(0);\n194: switch (c) {\n220: rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));\n221: break;\n226: rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n227: break;\n250: rule = new TextField(Calendar.AM_PM, AmPmStrings);\n251: break;\n259: if (tokenLen >= 4) {\n262: rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);\n264: break;\n273: String sub = token.substring(1);\n274: if (sub.length() == 1) {\n275: rule = new CharacterLiteral(sub.charAt(0));\n284: rules.add(rule);\n287: return rules;\n288: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey:hashCode()I",
                                    "method_body": "1229: public int hashCode() {\n1230: return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();\n1231: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField:estimateLength()I",
                                    "method_body": "871: public int estimateLength() {\n872: return 2;\n873: }",
                                    "suspicious_rank": 0.16
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey:equals(Ljava/lang/Object;)Z",
                                    "method_body": "1237: public boolean equals(Object obj) {\n1238: if (this == obj) {\n1241: if (obj instanceof TimeZoneDisplayKey) {\n1242: TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;\n1243: return\n1249: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "731: public final void appendTo(StringBuffer buffer, int value) {\n732: if (value < 10) {\n733: buffer.append((char)(value + '0'));\n740: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "368: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n369: printer= new FastDatePrinter(pattern, timeZone, locale);\n370: parser= new FastDateParser(pattern, timeZone, locale);\n371: }",
                                    "suspicious_rank": 0.159
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getLocaleSpecificStrategy(ILjava/util/Calendar;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;",
                                    "method_body": "491: private Strategy getLocaleSpecificStrategy(int field, Calendar definingCalendar) {\n492: ConcurrentMap<Locale,Strategy> cache = getCache(field);\n493: Strategy strategy= cache.get(Integer.valueOf(field));\n494: if(strategy==null) {\n495: strategy= field==Calendar.ZONE_OFFSET\n498: Strategy inCache= cache.putIfAbsent(locale, strategy);\n499: if(inCache!=null) {\n500: return inCache;\n504: }",
                                    "suspicious_rank": 0.226
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule:<init>(Ljava/util/TimeZone;Ljava/util/Locale;I)V",
                                    "method_body": "1109: TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {\n1110: mLocale = locale;\n1111: mStyle = style;\n1112: zone = timeZone;\n1114: mStandard = getTimeZoneDisplay(timeZone, false, style, locale);\n1115: mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);\n1116: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$1:createInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "90: protected FastDateFormat createInstance(String pattern, TimeZone timeZone, Locale locale) {\n91: return new FastDateFormat(pattern, timeZone, locale);\n92: }",
                                    "suspicious_rank": 0.159
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:parseToken(Ljava/lang/String;[I)Ljava/lang/String;",
                                    "method_body": "297: protected String parseToken(String pattern, int[] indexRef) {\n298: StringBuilder buf = new StringBuilder();\n300: int i = indexRef[0];\n301: int length = pattern.length();\n303: char c = pattern.charAt(i);\n304: if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {\n307: buf.append(c);\n309: while (i + 1 < length) {\n310: char peek = pattern.charAt(i + 1);\n311: if (peek == c) {\n312: buf.append(c);\n313: i++;\n317: }\n320: buf.append('\\'');\n322: boolean inLiteral = false;\n324: for (; i < length; i++) {\n325: c = pattern.charAt(i);\n327: if (c == '\\'') {\n335: } else if (!inLiteral &&\n337: i--;\n338: break;\n340: buf.append(c);\n345: indexRef[0] = i;\n346: return buf.toString();\n347: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;",
                                    "method_body": "299: private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n300: regex.append(\"\\\\Q\");\n301: for(int i= 0; i<value.length(); ++i) {\n302: char c= value.charAt(i);\n303: switch(c) {\n305: if(unquote) {\n331: regex.append(c);\n333: regex.append(\"\\\\E\");\n334: return regex;\n335: }",
                                    "suspicious_rank": 0.187
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
                                    "method_body": "366: boolean isNextNumber() {\n367: return nextStrategy!=null && nextStrategy.isNumber();\n368: }",
                                    "suspicious_rank": 0.185
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:init()V",
                                    "method_body": "108: private void init() {\n109: Calendar definingCalendar = Calendar.getInstance(timeZone, locale);\n110: thisYear= definingCalendar.get(Calendar.YEAR);\n112: StringBuilder regex= new StringBuilder();\n113: List<Strategy> collector = new ArrayList<Strategy>();\n115: Matcher patternMatcher= formatPattern.matcher(pattern);\n116: if(!patternMatcher.lookingAt()) {\n121: currentFormatField= patternMatcher.group();\n122: Strategy currentStrategy= getStrategy(currentFormatField, definingCalendar);\n124: patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n125: if(!patternMatcher.lookingAt()) {\n126: nextStrategy = null;\n127: break;\n129: String nextFormatField= patternMatcher.group();\n130: nextStrategy = getStrategy(nextFormatField, definingCalendar);\n131: if(currentStrategy.addRegex(this, regex)) {\n132: collector.add(currentStrategy);\n134: currentFormatField= nextFormatField;\n135: currentStrategy= nextStrategy;\n136: }\n137: if (patternMatcher.regionStart() != patternMatcher.regionEnd()) {\n140: if(currentStrategy.addRegex(this, regex)) {\n141: collector.add(currentStrategy);\n143: currentFormatField= null;\n144: strategies= collector.toArray(new Strategy[collector.size()]);\n145: parsePattern= Pattern.compile(regex.toString());\n146: }",
                                    "suspicious_rank": 0.185
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n616: buffer.append(mValue);\n617: }\n618: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:selectNumberRule(II)Lorg/apache/commons/lang3/time/FastDatePrinter$NumberRule;",
                                    "method_body": "356: protected NumberRule selectNumberRule(int field, int padding) {\n357: switch (padding) {\n359: return new UnpaddedNumberField(field);\n361: return new TwoDigitNumberField(field);\n365: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TextField:estimateLength()I",
                                    "method_body": "676: public int estimateLength() {\n677: int max = 0;\n678: for (int i=mValues.length; --i >= 0; ) {\n679: int len = mValues[i].length();\n680: if (len > max) {\n681: max = len;\n683: }\n684: return max;\n685: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:init()V",
                                    "method_body": "147: private void init() {\n148: List<Rule> rulesList = parsePattern();\n149: mRules = rulesList.toArray(new Rule[rulesList.size()]);\n151: int len = 0;\n152: for (int i=mRules.length; --i >= 0; ) {\n153: len += mRules[i].estimateLength();\n156: mMaxLengthEstimate = len;\n157: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "632: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n633: if(parser.isNextNumber()) {\n637: regex.append(\"(\\\\p{IsNd}++)\");\n639: return true;\n640: }",
                                    "suspicious_rank": 0.185
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:<init>(Ljava/lang/String;)V",
                                    "method_body": "516: CopyQuotedStrategy(String formatField) {\n517: this.formatField= formatField;\n518: }",
                                    "suspicious_rank": 0.187
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:hashCode()I",
                                    "method_body": "198: public int hashCode() {\n199: if(hashCode==0) {\n200: int rc= 0;\n201: for(Object key : keys) {\n202: if(key!=null) {\n203: rc= rc*7 + key.hashCode();\n206: hashCode= rc;\n208: return hashCode;\n209: }",
                                    "suspicious_rank": 0.157
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<11:03PM [CL]T> but was:<11:03PM [PS]T>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected(FastDatePrinterTest.java:286)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected",
                            "test_body": "266: public void testCalendarTimezoneRespected() {\n267: String[] availableZones = TimeZone.getAvailableIDs();\n268: TimeZone currentZone = TimeZone.getDefault();\n269: 270: TimeZone anotherZone = null;\n271: for (String zone : availableZones) {\n272: if (!zone.equals(currentZone.getID())) {\n273: anotherZone = TimeZone.getTimeZone(zone);\n274: }\n275: }\n276: 277: assertNotNull(\"Cannot find another timezone\", anotherZone);\n278: 279: final String pattern = \"h:mma z\";\n280: final Calendar cal = Calendar.getInstance(anotherZone);\n281: 282: SimpleDateFormat sdf = new SimpleDateFormat(pattern);\n283: sdf.setTimeZone(anotherZone);\n284: String expectedValue = sdf.format(cal.getTime());\n285: String actualValue = FastDateFormat.getInstance(pattern).format(cal);\n286: assertEquals(expectedValue, actualValue);\n287: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:getTimeZoneDisplay(Ljava/util/TimeZone;ZILjava/util/Locale;)Ljava/lang/String;",
                                    "method_body": "1078: static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale) {\n1079: TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);\n1080: String value = cTimeZoneDisplayCache.get(key);\n1081: if (value == null) {\n1089: return value;\n1090: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "118: public static FastDateFormat getInstance(String pattern) {\n119: return cache.getInstance(pattern, null, null);\n120: }",
                                    "suspicious_rank": 0.16
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:format(Ljava/util/Calendar;)Ljava/lang/String;",
                                    "method_body": "414: public String format(Calendar calendar) {\n415: return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();\n416: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:applyRules(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "452: protected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {\n453: for (Rule rule : mRules) {\n454: rule.appendTo(buf, calendar);\n456: return buf;\n457: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:<init>([Ljava/lang/Object;)V",
                                    "method_body": "179: public MultipartKey(Object... keys) {\n180: this.keys = keys;\n181: }",
                                    "suspicious_rank": 0.157
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TextField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "691: public void appendTo(StringBuffer buffer, Calendar calendar) {\n692: buffer.append(mValues[calendar.get(mField)]);\n693: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/text/Format;",
                                    "method_body": "69: public F getInstance(String pattern, TimeZone timeZone, Locale locale) {\n70: if (pattern == null) {\n73: if (timeZone == null) {\n74: timeZone = TimeZone.getDefault();\n76: if (locale == null) {\n77: locale = Locale.getDefault();\n79: MultipartKey key = new MultipartKey(pattern, timeZone, locale);\n80: F format = cInstanceCache.get(key);\n81: if (format == null) {\n82: format = createInstance(pattern, timeZone, locale);\n83: F previousValue= cInstanceCache.putIfAbsent(key, format);\n84: if (previousValue != null) {\n90: return format;\n91: }",
                                    "suspicious_rank": 0.159
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:equals(Ljava/lang/Object;)Z",
                                    "method_body": "187: public boolean equals(Object obj) {\n191: return Arrays.equals(keys, ((MultipartKey)obj).keys);\n192: }",
                                    "suspicious_rank": 0.0
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "887: public final void appendTo(StringBuffer buffer, int value) {\n888: if (value < 100) {\n889: buffer.append((char)(value / 10 + '0'));\n890: buffer.append((char)(value % 10 + '0'));\n894: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "879: public void appendTo(StringBuffer buffer, Calendar calendar) {\n880: appendTo(buffer, calendar.get(mField));\n881: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Calendar;)Ljava/lang/String;",
                                    "method_body": "419: public String format(Calendar calendar) {\n420: return printer.format(calendar);\n421: }",
                                    "suspicious_rank": 0.164
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey:<init>(Ljava/util/TimeZone;ZILjava/util/Locale;)V",
                                    "method_body": "1215: TimeZoneDisplayKey(TimeZone timeZone,\n1216: boolean daylight, int style, Locale locale) {\n1217: mTimeZone = timeZone;\n1218: if (daylight) {\n1219: style |= 0x80000000;\n1221: mStyle = style;\n1222: mLocale = locale;\n1223: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1133: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1134: if (zone.useDaylightTime()\n1138: buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));\n1140: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "440: public StringBuffer format(Calendar calendar, StringBuffer buf) {\n441: return applyRules(calendar, buf);\n442: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1003: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1004: int value = calendar.get(Calendar.HOUR);\n1005: if (value == 0) {\n1008: mRule.appendTo(buffer, value);\n1009: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey:hashCode()I",
                                    "method_body": "1229: public int hashCode() {\n1230: return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();\n1231: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey:equals(Ljava/lang/Object;)Z",
                                    "method_body": "1237: public boolean equals(Object obj) {\n1238: if (this == obj) {\n1241: if (obj instanceof TimeZoneDisplayKey) {\n1242: TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;\n1243: return\n1249: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "731: public final void appendTo(StringBuffer buffer, int value) {\n732: if (value < 10) {\n733: buffer.append((char)(value + '0'));\n740: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n616: buffer.append(mValue);\n617: }\n618: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:hashCode()I",
                                    "method_body": "198: public int hashCode() {\n199: if(hashCode==0) {\n200: int rc= 0;\n201: for(Object key : keys) {\n202: if(key!=null) {\n203: rc= rc*7 + key.hashCode();\n206: hashCode= rc;\n208: return hashCode;\n209: }",
                                    "suspicious_rank": 0.157
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<11:03PM [CL]T> but was:<11:03PM [PS]T>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected(FastDatePrinterTest.java:286)"
                        }
                    ]
                },
                {
                    "bug_id": 9,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832",
                            "test_body": null,
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "368: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n369: printer= new FastDatePrinter(pattern, timeZone, locale);\n370: parser= new FastDateParser(pattern, timeZone, locale);\n371: }",
                                    "suspicious_rank": 0.152
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:modify(I)I",
                                    "method_body": "740: public int modify(int iValue) {\n741: return iValue;\n742: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:estimateLength()I",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n618: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "136: protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale) {\n137: mPattern = pattern;\n138: mTimeZone = timeZone;\n139: mLocale = locale;\n141: init();\n142: }",
                                    "suspicious_rank": 0.142
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$1:createInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "90: protected FastDateFormat createInstance(String pattern, TimeZone timeZone, Locale locale) {\n91: return new FastDateFormat(pattern, timeZone, locale);\n92: }",
                                    "suspicious_rank": 0.152
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral:estimateLength()I",
                                    "method_body": "640: public int estimateLength() {\n641: return mValue.length();\n642: }",
                                    "suspicious_rank": 0.055
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:<init>([Ljava/lang/Object;)V",
                                    "method_body": "179: public MultipartKey(Object... keys) {\n180: this.keys = keys;\n181: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "104: protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {\n105: this.pattern = pattern;\n106: this.timeZone = timeZone;\n107: this.locale = locale;\n108: init();\n109: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:parsePattern()Ljava/util/List;",
                                    "method_body": "167: protected List<Rule> parsePattern() {\n168: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n169: List<Rule> rules = new ArrayList<Rule>();\n171: String[] ERAs = symbols.getEras();\n172: String[] months = symbols.getMonths();\n173: String[] shortMonths = symbols.getShortMonths();\n174: String[] weekdays = symbols.getWeekdays();\n175: String[] shortWeekdays = symbols.getShortWeekdays();\n176: String[] AmPmStrings = symbols.getAmPmStrings();\n178: int length = mPattern.length();\n179: int[] indexRef = new int[1];\n181: for (int i = 0; i < length; i++) {\n182: indexRef[0] = i;\n183: String token = parseToken(mPattern, indexRef);\n184: i = indexRef[0];\n186: int tokenLen = token.length();\n187: if (tokenLen == 0) {\n192: char c = token.charAt(0);\n194: switch (c) {\n217: rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n218: break;\n273: String sub = token.substring(1);\n274: if (sub.length() == 1) {\n275: rule = new CharacterLiteral(sub.charAt(0));\n277: rule = new StringLiteral(sub);\n279: break;\n284: rules.add(rule);\n287: return rules;\n288: }",
                                    "suspicious_rank": 0.142
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:<init>(C)V",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n618: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getStrategy(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;",
                                    "method_body": "504: boolean isNumber();\n535: switch(formatField.charAt(0)) {\n537: if(formatField.length()>2) {\n538: formatField= formatField.substring(1, formatField.length()-1);\n542: return new CopyQuotedStrategy(formatField);\n566: return DAY_OF_MONTH_STRATEGY;\n591: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/text/Format;",
                                    "method_body": "69: public F getInstance(String pattern, TimeZone timeZone, Locale locale) {\n70: if (pattern == null) {\n73: if (timeZone == null) {\n76: if (locale == null) {\n79: MultipartKey key = new MultipartKey(pattern, timeZone, locale);\n80: F format = cInstanceCache.get(key);\n81: if (format == null) {\n82: format = createInstance(pattern, timeZone, locale);\n83: F previousValue= cInstanceCache.putIfAbsent(key, format);\n84: if (previousValue != null) {\n90: return format;\n91: }",
                                    "suspicious_rank": 0.152
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField:estimateLength()I",
                                    "method_body": "715: public int estimateLength() {\n716: return 4;\n717: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "164: public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) {\n165: return cache.getInstance(pattern, timeZone, locale);\n166: }",
                                    "suspicious_rank": 0.202
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parse(Ljava/lang/String;)Ljava/util/Date;",
                                    "method_body": "471: public Date parse(String source) throws ParseException {\n472: return parser.parse(source);\n473: }",
                                    "suspicious_rank": 0.309
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral:<init>(Ljava/lang/String;)V",
                                    "method_body": "632: StringLiteral(String value) {\n633: mValue = value;\n634: }",
                                    "suspicious_rank": 0.055
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:parseToken(Ljava/lang/String;[I)Ljava/lang/String;",
                                    "method_body": "297: protected String parseToken(String pattern, int[] indexRef) {\n298: StringBuilder buf = new StringBuilder();\n300: int i = indexRef[0];\n301: int length = pattern.length();\n303: char c = pattern.charAt(i);\n304: if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {\n307: buf.append(c);\n309: while (i + 1 < length) {\n310: char peek = pattern.charAt(i + 1);\n311: if (peek == c) {\n320: buf.append('\\'');\n322: boolean inLiteral = false;\n324: for (; i < length; i++) {\n325: c = pattern.charAt(i);\n327: if (c == '\\'') {\n328: if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {\n333: inLiteral = !inLiteral;\n335: } else if (!inLiteral &&\n337: i--;\n338: break;\n340: buf.append(c);\n345: indexRef[0] = i;\n346: return buf.toString();\n347: }",
                                    "suspicious_rank": 0.142
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;",
                                    "method_body": "303: private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n304: for(int i= 0; i<value.length(); ++i) {\n305: char c= value.charAt(i);\n306: switch(c) {\n331: regex.append(c);\n333: return regex;\n334: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;",
                                    "method_body": "275: public Date parse(String source, ParsePosition pos) {\n276: int offset= pos.getIndex();\n277: Matcher matcher= parsePattern.matcher(source.substring(offset));\n278: if(!matcher.lookingAt()) {\n282: Calendar cal= Calendar.getInstance(timeZone, locale);\n283: cal.clear();\n285: for(int i=0; i<strategies.length;) {\n286: Strategy strategy= strategies[i++];\n287: strategy.setCalendar(this, cal, matcher.group(i));\n288: }\n289: pos.setIndex(offset+matcher.end());\n290: return cal.getTime();\n291: }",
                                    "suspicious_rank": 0.431
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "623: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n624: escapeRegex(regex, formatField, true);\n625: return false;\n626: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
                                    "method_body": "484: boolean isNextNumber() {\n485: return nextStrategy!=null && nextStrategy.isNumber();\n486: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:init()V",
                                    "method_body": "115: private void init() {\n116: thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n118: nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();\n120: StringBuilder regex= new StringBuilder();\n121: List<Strategy> collector = new ArrayList<Strategy>();\n123: Matcher patternMatcher= formatPattern.matcher(pattern);\n124: if(!patternMatcher.lookingAt()) {\n128: currentFormatField= patternMatcher.group();\n129: Strategy currentStrategy= getStrategy(currentFormatField);\n131: patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n132: if(!patternMatcher.lookingAt()) {\n133: nextStrategy = null;\n134: break;\n136: String nextFormatField= patternMatcher.group();\n137: nextStrategy = getStrategy(nextFormatField);\n138: if(currentStrategy.addRegex(this, regex)) {\n141: currentFormatField= nextFormatField;\n142: currentStrategy= nextStrategy;\n143: }\n144: if(currentStrategy.addRegex(this, regex)) {\n145: collector.add(currentStrategy);\n147: currentFormatField= null;\n148: strategies= collector.toArray(new Strategy[collector.size()]);\n149: parsePattern= Pattern.compile(regex.toString());\n150: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:selectNumberRule(II)Lorg/apache/commons/lang3/time/FastDatePrinter$NumberRule;",
                                    "method_body": "356: protected NumberRule selectNumberRule(int field, int padding) {\n357: switch (padding) {\n359: return new UnpaddedNumberField(field);\n365: }",
                                    "suspicious_rank": 0.143
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;)Ljava/util/Date;",
                                    "method_body": "249: public Date parse(String source) throws ParseException {\n250: Date date= parse(source, new ParsePosition(0));\n251: if(date==null) {\n260: return date;\n261: }",
                                    "suspicious_rank": 0.436
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:init()V",
                                    "method_body": "147: private void init() {\n148: List<Rule> rulesList = parsePattern();\n149: mRules = rulesList.toArray(new Rule[rulesList.size()]);\n151: int len = 0;\n152: for (int i=mRules.length; --i >= 0; ) {\n153: len += mRules[i].estimateLength();\n156: mMaxLengthEstimate = len;\n157: }",
                                    "suspicious_rank": 0.142
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "717: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n718: if(parser.isNextNumber()) {\n722: regex.append(\"(\\\\p{IsNd}++)\");\n724: return true;\n725: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
                                    "method_body": "731: public void setCalendar(FastDateParser parser, Calendar cal, String value) {\n732: cal.set(field, modify(Integer.parseInt(value)));\n733: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:<init>(Ljava/lang/String;)V",
                                    "method_body": "603: CopyQuotedStrategy(String formatField) {\n604: this.formatField= formatField;\n605: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:hashCode()I",
                                    "method_body": "198: public int hashCode() {\n199: if(hashCode==0) {\n200: int rc= 0;\n201: for(Object key : keys) {\n202: if(key!=null) {\n203: rc= rc*7 + key.hashCode();\n206: hashCode= rc;\n208: return hashCode;\n209: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField:<init>(I)V",
                                    "method_body": "707: UnpaddedNumberField(int field) {\n708: mField = field;\n709: }",
                                    "suspicious_rank": 0.151
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Parsed dates should be equal expected:<null> but was:<Fri Jan 02 21:00:00 PST 1970>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:384)\nat org.apache.commons.lang3.time.FastDateParserTest.testLANG_832(FastDateParserTest.java:339)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateParserTest.testLANG_832",
                            "test_body": "346: public void testLANG_832() throws Exception {\n347: testSdfAndFdp(\"'d'd\" ,\"d3\", false); // OK\n348: testSdfAndFdp(\"'d'd'\",\"d3\", true); // should fail (unterminated quote)\n349: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:modify(I)I",
                                    "method_body": "740: public int modify(int iValue) {\n741: return iValue;\n742: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "104: protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {\n105: this.pattern = pattern;\n106: this.timeZone = timeZone;\n107: this.locale = locale;\n108: init();\n109: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getStrategy(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;",
                                    "method_body": "504: boolean isNumber();\n535: switch(formatField.charAt(0)) {\n537: if(formatField.length()>2) {\n538: formatField= formatField.substring(1, formatField.length()-1);\n542: return new CopyQuotedStrategy(formatField);\n566: return DAY_OF_MONTH_STRATEGY;\n591: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;",
                                    "method_body": "303: private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n304: for(int i= 0; i<value.length(); ++i) {\n305: char c= value.charAt(i);\n306: switch(c) {\n331: regex.append(c);\n333: return regex;\n334: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;",
                                    "method_body": "275: public Date parse(String source, ParsePosition pos) {\n276: int offset= pos.getIndex();\n277: Matcher matcher= parsePattern.matcher(source.substring(offset));\n278: if(!matcher.lookingAt()) {\n282: Calendar cal= Calendar.getInstance(timeZone, locale);\n283: cal.clear();\n285: for(int i=0; i<strategies.length;) {\n286: Strategy strategy= strategies[i++];\n287: strategy.setCalendar(this, cal, matcher.group(i));\n288: }\n289: pos.setIndex(offset+matcher.end());\n290: return cal.getTime();\n291: }",
                                    "suspicious_rank": 0.431
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "623: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n624: escapeRegex(regex, formatField, true);\n625: return false;\n626: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
                                    "method_body": "484: boolean isNextNumber() {\n485: return nextStrategy!=null && nextStrategy.isNumber();\n486: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:init()V",
                                    "method_body": "115: private void init() {\n116: thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n118: nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();\n120: StringBuilder regex= new StringBuilder();\n121: List<Strategy> collector = new ArrayList<Strategy>();\n123: Matcher patternMatcher= formatPattern.matcher(pattern);\n124: if(!patternMatcher.lookingAt()) {\n128: currentFormatField= patternMatcher.group();\n129: Strategy currentStrategy= getStrategy(currentFormatField);\n131: patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n132: if(!patternMatcher.lookingAt()) {\n133: nextStrategy = null;\n134: break;\n136: String nextFormatField= patternMatcher.group();\n137: nextStrategy = getStrategy(nextFormatField);\n138: if(currentStrategy.addRegex(this, regex)) {\n141: currentFormatField= nextFormatField;\n142: currentStrategy= nextStrategy;\n143: }\n144: if(currentStrategy.addRegex(this, regex)) {\n145: collector.add(currentStrategy);\n147: currentFormatField= null;\n148: strategies= collector.toArray(new Strategy[collector.size()]);\n149: parsePattern= Pattern.compile(regex.toString());\n150: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;)Ljava/util/Date;",
                                    "method_body": "249: public Date parse(String source) throws ParseException {\n250: Date date= parse(source, new ParsePosition(0));\n251: if(date==null) {\n260: return date;\n261: }",
                                    "suspicious_rank": 0.436
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getParsePattern()Ljava/util/regex/Pattern;",
                                    "method_body": "179: Pattern getParsePattern() {\n180: return parsePattern;\n181: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "717: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n718: if(parser.isNextNumber()) {\n722: regex.append(\"(\\\\p{IsNd}++)\");\n724: return true;\n725: }",
                                    "suspicious_rank": 0.266
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
                                    "method_body": "731: public void setCalendar(FastDateParser parser, Calendar cal, String value) {\n732: cal.set(field, modify(Integer.parseInt(value)));\n733: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:<init>(Ljava/lang/String;)V",
                                    "method_body": "603: CopyQuotedStrategy(String formatField) {\n604: this.formatField= formatField;\n605: }",
                                    "suspicious_rank": 0.268
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected FDF failure, but got Fri Jan 02 21:00:00 PST 1970 for ['d'd',d3] using d(\\p{IsNd}++)\nat junit.framework.Assert.fail(Assert.java:57)\nat org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:373)\nat org.apache.commons.lang3.time.FastDateParserTest.testLANG_832(FastDateParserTest.java:339)"
                        }
                    ]
                },
                {
                    "bug_id": 10,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_831",
                            "test_body": null,
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:hashCode()I",
                                    "method_body": "198: public int hashCode() {\n199: if(hashCode==0) {\n200: int rc= 0;\n201: for(Object key : keys) {\n202: if(key!=null) {\n203: rc= rc*7 + key.hashCode();\n206: hashCode= rc;\n208: return hashCode;\n209: }",
                                    "suspicious_rank": 0.152
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "671: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n672: regex.append('(');\n673: for(KeyValue textKeyValue : parser.getDisplayNames(field)) {\n674: escapeRegex(regex, textKeyValue.key, false).append('|');\n676: regex.setCharAt(regex.length()-1, ')');\n677: return true;\n678: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$KeyValue:<init>(Ljava/lang/String;I)V",
                                    "method_body": "357: public KeyValue(String key, int value) {\n358: this.key= key;\n359: this.value= value;\n360: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "368: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n369: printer= new FastDatePrinter(pattern, timeZone, locale);\n370: parser= new FastDateParser(pattern, timeZone, locale);\n371: }",
                                    "suspicious_rank": 0.153
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:estimateLength()I",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n618: }",
                                    "suspicious_rank": 0.145
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$3:modify(I)I",
                                    "method_body": "849: public int modify(int iValue) {\n850: return iValue-1;\n851: }",
                                    "suspicious_rank": 0.381
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "136: protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale) {\n137: mPattern = pattern;\n138: mTimeZone = timeZone;\n139: mLocale = locale;\n141: init();\n142: }",
                                    "suspicious_rank": 0.143
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$1:createInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "90: protected FastDateFormat createInstance(String pattern, TimeZone timeZone, Locale locale) {\n91: return new FastDateFormat(pattern, timeZone, locale);\n92: }",
                                    "suspicious_rank": 0.153
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
                                    "method_body": "684: public void setCalendar(FastDateParser parser, Calendar cal, String value) {\n685: KeyValue[] textKeyValues= parser.getDisplayNames(field);\n686: int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);\n687: if(idx<0) {\n696: cal.set(field, textKeyValues[idx].value);\n697: }",
                                    "suspicious_rank": 0.452
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;)Ljava/util/Date;",
                                    "method_body": "249: public Date parse(String source) throws ParseException {\n250: Date date= parse(source, new ParsePosition(0));\n251: if(date==null) {\n260: return date;\n261: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "104: protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {\n105: this.pattern = pattern;\n106: this.timeZone = timeZone;\n107: this.locale = locale;\n108: init();\n109: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:parsePattern()Ljava/util/List;",
                                    "method_body": "167: protected List<Rule> parsePattern() {\n168: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n169: List<Rule> rules = new ArrayList<Rule>();\n171: String[] ERAs = symbols.getEras();\n172: String[] months = symbols.getMonths();\n173: String[] shortMonths = symbols.getShortMonths();\n174: String[] weekdays = symbols.getWeekdays();\n175: String[] shortWeekdays = symbols.getShortWeekdays();\n176: String[] AmPmStrings = symbols.getAmPmStrings();\n178: int length = mPattern.length();\n179: int[] indexRef = new int[1];\n181: for (int i = 0; i < length; i++) {\n182: indexRef[0] = i;\n183: String token = parseToken(mPattern, indexRef);\n184: i = indexRef[0];\n186: int tokenLen = token.length();\n187: if (tokenLen == 0) {\n192: char c = token.charAt(0);\n194: switch (c) {\n206: if (tokenLen >= 4) {\n208: } else if (tokenLen == 3) {\n210: } else if (tokenLen == 2) {\n213: rule = UnpaddedMonthField.INSTANCE;\n215: break;\n235: rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n236: break;\n273: String sub = token.substring(1);\n274: if (sub.length() == 1) {\n275: rule = new CharacterLiteral(sub.charAt(0));\n284: rules.add(rule);\n287: return rules;\n288: }",
                                    "suspicious_rank": 0.143
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:createKeyValues([Ljava/lang/String;[Ljava/lang/String;)[Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;",
                                    "method_body": "433: private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) {\n434: KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)];\n435: copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues);\n436: Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR);\n437: return fieldKeyValues;\n438: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:<init>(C)V",
                                    "method_body": "584: void appendTo(StringBuffer buffer, int value);\n599: CharacterLiteral(char value) {\n600: mValue = value;\n601: }\n608: return 1;\n618: }",
                                    "suspicious_rank": 0.145
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getStrategy(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;",
                                    "method_body": "513: boolean isNumber();\n544: switch(formatField.charAt(0)) {\n551: return new CopyQuotedStrategy(formatField);\n555: return DAY_OF_WEEK_STRATEGY;\n565: return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY;\n600: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:count([Ljava/lang/String;)I",
                                    "method_body": "445: private static int count(String[] values) {\n446: int count= 0;\n447: if(values!=null) {\n448: for(String value : values) {\n449: if(value.length()>0) {\n450: ++count;\n454: return count;\n455: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField:estimateLength()I",
                                    "method_body": "761: public int estimateLength() {\n762: return 2;\n763: }",
                                    "suspicious_rank": 0.189
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:copy([Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;I[Ljava/lang/String;)I",
                                    "method_body": "464: private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) {\n465: if(values!=null) {\n466: for(int i= 0; i<values.length; ++i) {\n467: String value= values[i];\n468: if(value.length()>0) {\n469: fieldKeyValues[offset++]= new KeyValue(value, i);\n473: return offset;\n474: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "164: public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) {\n165: return cache.getInstance(pattern, timeZone, locale);\n166: }",
                                    "suspicious_rank": 0.204
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/text/Format;",
                                    "method_body": "69: public F getInstance(String pattern, TimeZone timeZone, Locale locale) {\n70: if (pattern == null) {\n73: if (timeZone == null) {\n76: if (locale == null) {\n79: MultipartKey key = new MultipartKey(pattern, timeZone, locale);\n80: F format = cInstanceCache.get(key);\n81: if (format == null) {\n82: format = createInstance(pattern, timeZone, locale);\n83: F previousValue= cInstanceCache.putIfAbsent(key, format);\n84: if (previousValue != null) {\n90: return format;\n91: }",
                                    "suspicious_rank": 0.153
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parse(Ljava/lang/String;)Ljava/util/Date;",
                                    "method_body": "471: public Date parse(String source) throws ParseException {\n472: return parser.parse(source);\n473: }",
                                    "suspicious_rank": 0.316
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getDisplayNames(I)[Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;",
                                    "method_body": "378: KeyValue[] getDisplayNames(int field) {\n379: Integer fieldInt = Integer.valueOf(field);\n380: KeyValue[] fieldKeyValues= nameValues.get(fieldInt);\n381: if(fieldKeyValues==null) {\n382: DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale);\n383: switch(field) {\n395: fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays());\n396: break;\n406: KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues);\n407: if(prior!=null) {\n411: return fieldKeyValues;\n412: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;",
                                    "method_body": "303: private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n304: boolean wasWhite= false;\n305: for(int i= 0; i<value.length(); ++i) {\n306: char c= value.charAt(i);\n307: if(Character.isWhitespace(c)) {\n308: if(!wasWhite) {\n309: wasWhite= true;\n310: regex.append(\"\\\\s*+\");\n314: wasWhite= false;\n315: switch(c) {\n340: regex.append(c);\n342: return regex;\n343: }",
                                    "suspicious_rank": 0.271
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;",
                                    "method_body": "275: public Date parse(String source, ParsePosition pos) {\n276: int offset= pos.getIndex();\n277: Matcher matcher= parsePattern.matcher(source.substring(offset));\n278: if(!matcher.lookingAt()) {\n282: Calendar cal= Calendar.getInstance(timeZone, locale);\n283: cal.clear();\n285: for(int i=0; i<strategies.length;) {\n286: Strategy strategy= strategies[i++];\n287: strategy.setCalendar(this, cal, matcher.group(i));\n288: }\n289: pos.setIndex(offset+matcher.end());\n290: return cal.getTime();\n291: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "632: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n633: escapeRegex(regex, formatField, true);\n634: return false;\n635: }",
                                    "suspicious_rank": 0.271
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
                                    "method_body": "493: boolean isNextNumber() {\n494: return nextStrategy!=null && nextStrategy.isNumber();\n495: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:init()V",
                                    "method_body": "115: private void init() {\n116: thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n118: nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();\n120: StringBuilder regex= new StringBuilder();\n121: List<Strategy> collector = new ArrayList<Strategy>();\n123: Matcher patternMatcher= formatPattern.matcher(pattern);\n124: if(!patternMatcher.lookingAt()) {\n128: currentFormatField= patternMatcher.group();\n129: Strategy currentStrategy= getStrategy(currentFormatField);\n131: patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n132: if(!patternMatcher.lookingAt()) {\n133: nextStrategy = null;\n134: break;\n136: String nextFormatField= patternMatcher.group();\n137: nextStrategy = getStrategy(nextFormatField);\n138: if(currentStrategy.addRegex(this, regex)) {\n139: collector.add(currentStrategy);\n141: currentFormatField= nextFormatField;\n142: currentStrategy= nextStrategy;\n143: }\n144: if(currentStrategy.addRegex(this, regex)) {\n145: collector.add(currentStrategy);\n147: currentFormatField= null;\n148: strategies= collector.toArray(new Strategy[collector.size()]);\n149: parsePattern= Pattern.compile(regex.toString());\n150: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$1:compare(Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;)I",
                                    "method_body": "368: public int compare(KeyValue left, KeyValue right) {\n369: return left.key.compareToIgnoreCase(right.key);\n370: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:parseToken(Ljava/lang/String;[I)Ljava/lang/String;",
                                    "method_body": "297: protected String parseToken(String pattern, int[] indexRef) {\n298: StringBuilder buf = new StringBuilder();\n300: int i = indexRef[0];\n301: int length = pattern.length();\n303: char c = pattern.charAt(i);\n304: if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {\n307: buf.append(c);\n309: while (i + 1 < length) {\n310: char peek = pattern.charAt(i + 1);\n311: if (peek == c) {\n320: buf.append('\\'');\n322: boolean inLiteral = false;\n324: for (; i < length; i++) {\n325: c = pattern.charAt(i);\n327: if (c == '\\'') {\n335: } else if (!inLiteral &&\n337: i--;\n338: break;\n340: buf.append(c);\n345: indexRef[0] = i;\n346: return buf.toString();\n347: }",
                                    "suspicious_rank": 0.143
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TextField:<init>(I[Ljava/lang/String;)V",
                                    "method_body": "667: TextField(int field, String[] values) {\n668: mField = field;\n669: mValues = values;\n670: }",
                                    "suspicious_rank": 0.142
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:<init>([Ljava/lang/Object;)V",
                                    "method_body": "179: public MultipartKey(Object... keys) {\n180: this.keys = keys;\n181: }",
                                    "suspicious_rank": 0.152
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TextField:estimateLength()I",
                                    "method_body": "676: public int estimateLength() {\n677: int max = 0;\n678: for (int i=mValues.length; --i >= 0; ) {\n679: int len = mValues[i].length();\n680: if (len > max) {\n681: max = len;\n683: }\n684: return max;\n685: }",
                                    "suspicious_rank": 0.142
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:init()V",
                                    "method_body": "147: private void init() {\n148: List<Rule> rulesList = parsePattern();\n149: mRules = rulesList.toArray(new Rule[rulesList.size()]);\n151: int len = 0;\n152: for (int i=mRules.length; --i >= 0; ) {\n153: len += mRules[i].estimateLength();\n156: mMaxLengthEstimate = len;\n157: }",
                                    "suspicious_rank": 0.143
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "726: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n727: if(parser.isNextNumber()) {\n731: regex.append(\"(\\\\p{IsNd}++)\");\n733: return true;\n734: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
                                    "method_body": "740: public void setCalendar(FastDateParser parser, Calendar cal, String value) {\n741: cal.set(field, modify(Integer.parseInt(value)));\n742: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:<init>(Ljava/lang/String;)V",
                                    "method_body": "612: CopyQuotedStrategy(String formatField) {\n613: this.formatField= formatField;\n614: }",
                                    "suspicious_rank": 0.271
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:isNumber()Z",
                                    "method_body": "620: public boolean isNumber() {\n621: char c= formatField.charAt(0);\n622: if(c=='\\'') {\n625: return Character.isDigit(c);\n626: }",
                                    "suspicious_rank": 0.272
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Parsed dates should be equal expected:<null> but was:<Mon Mar 02 21:00:00 PST 1970>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:379)\nat org.apache.commons.lang3.time.FastDateParserTest.testLANG_831(FastDateParserTest.java:339)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateParserTest.testLANG_831",
                            "test_body": "347: public void testLANG_831() throws Exception {\n348: testSdfAndFdp(\"M E\",\"3  Tue\", true);\n349: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "671: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n672: regex.append('(');\n673: for(KeyValue textKeyValue : parser.getDisplayNames(field)) {\n674: escapeRegex(regex, textKeyValue.key, false).append('|');\n676: regex.setCharAt(regex.length()-1, ')');\n677: return true;\n678: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$KeyValue:<init>(Ljava/lang/String;I)V",
                                    "method_body": "357: public KeyValue(String key, int value) {\n358: this.key= key;\n359: this.value= value;\n360: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$3:modify(I)I",
                                    "method_body": "849: public int modify(int iValue) {\n850: return iValue-1;\n851: }",
                                    "suspicious_rank": 0.381
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
                                    "method_body": "684: public void setCalendar(FastDateParser parser, Calendar cal, String value) {\n685: KeyValue[] textKeyValues= parser.getDisplayNames(field);\n686: int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);\n687: if(idx<0) {\n696: cal.set(field, textKeyValues[idx].value);\n697: }",
                                    "suspicious_rank": 0.452
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;)Ljava/util/Date;",
                                    "method_body": "249: public Date parse(String source) throws ParseException {\n250: Date date= parse(source, new ParsePosition(0));\n251: if(date==null) {\n260: return date;\n261: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "104: protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {\n105: this.pattern = pattern;\n106: this.timeZone = timeZone;\n107: this.locale = locale;\n108: init();\n109: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:createKeyValues([Ljava/lang/String;[Ljava/lang/String;)[Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;",
                                    "method_body": "433: private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) {\n434: KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)];\n435: copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues);\n436: Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR);\n437: return fieldKeyValues;\n438: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getStrategy(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;",
                                    "method_body": "513: boolean isNumber();\n544: switch(formatField.charAt(0)) {\n551: return new CopyQuotedStrategy(formatField);\n555: return DAY_OF_WEEK_STRATEGY;\n565: return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY;\n600: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:count([Ljava/lang/String;)I",
                                    "method_body": "445: private static int count(String[] values) {\n446: int count= 0;\n447: if(values!=null) {\n448: for(String value : values) {\n449: if(value.length()>0) {\n450: ++count;\n454: return count;\n455: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:copy([Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;I[Ljava/lang/String;)I",
                                    "method_body": "464: private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) {\n465: if(values!=null) {\n466: for(int i= 0; i<values.length; ++i) {\n467: String value= values[i];\n468: if(value.length()>0) {\n469: fieldKeyValues[offset++]= new KeyValue(value, i);\n473: return offset;\n474: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getDisplayNames(I)[Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;",
                                    "method_body": "378: KeyValue[] getDisplayNames(int field) {\n379: Integer fieldInt = Integer.valueOf(field);\n380: KeyValue[] fieldKeyValues= nameValues.get(fieldInt);\n381: if(fieldKeyValues==null) {\n382: DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale);\n383: switch(field) {\n395: fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays());\n396: break;\n406: KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues);\n407: if(prior!=null) {\n411: return fieldKeyValues;\n412: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;",
                                    "method_body": "303: private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n304: boolean wasWhite= false;\n305: for(int i= 0; i<value.length(); ++i) {\n306: char c= value.charAt(i);\n307: if(Character.isWhitespace(c)) {\n308: if(!wasWhite) {\n309: wasWhite= true;\n310: regex.append(\"\\\\s*+\");\n314: wasWhite= false;\n315: switch(c) {\n340: regex.append(c);\n342: return regex;\n343: }",
                                    "suspicious_rank": 0.271
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;",
                                    "method_body": "275: public Date parse(String source, ParsePosition pos) {\n276: int offset= pos.getIndex();\n277: Matcher matcher= parsePattern.matcher(source.substring(offset));\n278: if(!matcher.lookingAt()) {\n282: Calendar cal= Calendar.getInstance(timeZone, locale);\n283: cal.clear();\n285: for(int i=0; i<strategies.length;) {\n286: Strategy strategy= strategies[i++];\n287: strategy.setCalendar(this, cal, matcher.group(i));\n288: }\n289: pos.setIndex(offset+matcher.end());\n290: return cal.getTime();\n291: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "632: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n633: escapeRegex(regex, formatField, true);\n634: return false;\n635: }",
                                    "suspicious_rank": 0.271
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
                                    "method_body": "493: boolean isNextNumber() {\n494: return nextStrategy!=null && nextStrategy.isNumber();\n495: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:init()V",
                                    "method_body": "115: private void init() {\n116: thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n118: nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();\n120: StringBuilder regex= new StringBuilder();\n121: List<Strategy> collector = new ArrayList<Strategy>();\n123: Matcher patternMatcher= formatPattern.matcher(pattern);\n124: if(!patternMatcher.lookingAt()) {\n128: currentFormatField= patternMatcher.group();\n129: Strategy currentStrategy= getStrategy(currentFormatField);\n131: patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n132: if(!patternMatcher.lookingAt()) {\n133: nextStrategy = null;\n134: break;\n136: String nextFormatField= patternMatcher.group();\n137: nextStrategy = getStrategy(nextFormatField);\n138: if(currentStrategy.addRegex(this, regex)) {\n139: collector.add(currentStrategy);\n141: currentFormatField= nextFormatField;\n142: currentStrategy= nextStrategy;\n143: }\n144: if(currentStrategy.addRegex(this, regex)) {\n145: collector.add(currentStrategy);\n147: currentFormatField= null;\n148: strategies= collector.toArray(new Strategy[collector.size()]);\n149: parsePattern= Pattern.compile(regex.toString());\n150: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$1:compare(Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;)I",
                                    "method_body": "368: public int compare(KeyValue left, KeyValue right) {\n369: return left.key.compareToIgnoreCase(right.key);\n370: }",
                                    "suspicious_rank": 0.263
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser:getParsePattern()Ljava/util/regex/Pattern;",
                                    "method_body": "179: Pattern getParsePattern() {\n180: return parsePattern;\n181: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
                                    "method_body": "726: public boolean addRegex(FastDateParser parser, StringBuilder regex) {\n727: if(parser.isNextNumber()) {\n731: regex.append(\"(\\\\p{IsNd}++)\");\n733: return true;\n734: }",
                                    "suspicious_rank": 0.268
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
                                    "method_body": "740: public void setCalendar(FastDateParser parser, Calendar cal, String value) {\n741: cal.set(field, modify(Integer.parseInt(value)));\n742: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:<init>(Ljava/lang/String;)V",
                                    "method_body": "612: CopyQuotedStrategy(String formatField) {\n613: this.formatField= formatField;\n614: }",
                                    "suspicious_rank": 0.271
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:isNumber()Z",
                                    "method_body": "620: public boolean isNumber() {\n621: char c= formatField.charAt(0);\n622: if(c=='\\'') {\n625: return Character.isDigit(c);\n626: }",
                                    "suspicious_rank": 0.272
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected FDF failure, but got Mon Mar 02 21:00:00 PST 1970 for [M E,3  Tue] using (\\p{IsNd}++)\\s*+(Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\nat junit.framework.Assert.fail(Assert.java:57)\nat org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:368)\nat org.apache.commons.lang3.time.FastDateParserTest.testLANG_831(FastDateParserTest.java:339)"
                        }
                    ]
                },
                {
                    "bug_id": 11,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.RandomStringUtilsTest.testLANG807",
                            "test_body": "133: public void testLANG807() {\n134: try {\n135: RandomStringUtils.random(3,5,5,false,false);\n136: fail(\"Expected IllegalArgumentException\");\n137: } catch (IllegalArgumentException ex) { // distinguish from Random#nextInt message\n138: final String msg = ex.getMessage();\n139: assertTrue(\"Message (\" + msg + \") must contain 'start'\", msg.contains(\"start\"));\n140: assertTrue(\"Message (\" + msg + \") must contain 'end'\", msg.contains(\"end\"));\n141: }\n142: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ)Ljava/lang/String;",
                                    "method_body": "162: public static String random(int count, int start, int end, boolean letters, boolean numbers) {\n163: return random(count, start, end, letters, numbers, null, RANDOM);\n164: }",
                                    "suspicious_rank": 0.289
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;",
                                    "method_body": "223: public static String random(int count, int start, int end, boolean letters, boolean numbers,\n225: if (count == 0) {\n227: } else if (count < 0) {\n230: if (chars != null && chars.length == 0) {\n234: if (start == 0 && end == 0) {\n247: char[] buffer = new char[count];\n248: int gap = end - start;\n250: while (count-- != 0) {\n252: if (chars == null) {\n253: ch = (char) (random.nextInt(gap) + start);\n289: }",
                                    "suspicious_rank": 0.258
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Message (n must be positive) must contain 'start'\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.TestCase.assertTrue(TestCase.java:192)\nat org.apache.commons.lang3.RandomStringUtilsTest.testLANG807(RandomStringUtilsTest.java:139)"
                        }
                    ]
                },
                {
                    "bug_id": 12,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.RandomStringUtilsTest.testExceptions",
                            "test_body": "133: public void testExceptions() {\n134: final char[] DUMMY = new char[]{'a'}; // valid char array\n135: try {\n136: RandomStringUtils.random(-1);\n137: fail();\n138: } catch (IllegalArgumentException ex) {}\n139: try {\n140: RandomStringUtils.random(-1, true, true);\n141: fail();\n142: } catch (IllegalArgumentException ex) {}\n143: try {\n144: RandomStringUtils.random(-1, DUMMY);\n145: fail();\n146: } catch (IllegalArgumentException ex) {}\n147: try {\n148: RandomStringUtils.random(1, new char[0]); // must not provide empty array => IAE\n149: fail();\n150: } catch (IllegalArgumentException ex) {}\n151: try {\n152: RandomStringUtils.random(-1, \"\");\n153: fail();\n154: } catch (IllegalArgumentException ex) {}\n155: try {\n156: RandomStringUtils.random(-1, (String)null);\n157: fail();\n158: } catch (IllegalArgumentException ex) {}\n159: try {\n160: RandomStringUtils.random(-1, 'a', 'z', false, false);\n161: fail();\n162: } catch (IllegalArgumentException ex) {}\n163: try {\n164: RandomStringUtils.random(-1, 'a', 'z', false, false, DUMMY);\n165: fail();\n166: } catch (IllegalArgumentException ex) {}\n167: try {\n168: RandomStringUtils.random(-1, 'a', 'z', false, false, DUMMY, new Random());\n169: fail();\n170: } catch (IllegalArgumentException ex) {}\n171: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ)Ljava/lang/String;",
                                    "method_body": "162: public static String random(int count, int start, int end, boolean letters, boolean numbers) {\n163: return random(count, start, end, letters, numbers, null, RANDOM);\n164: }",
                                    "suspicious_rank": 0.289
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;",
                                    "method_body": "223: public static String random(int count, int start, int end, boolean letters, boolean numbers,\n225: if (count == 0) {\n227: } else if (count < 0) {\n228: throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n231: if (start == 0 && end == 0) {\n232: if (!letters && !numbers) {\n233: end = Integer.MAX_VALUE;\n240: char[] buffer = new char[count];\n241: int gap = end - start;\n243: while (count-- != 0) {\n245: if (chars == null) {\n248: ch = chars[random.nextInt(gap) + start];\n282: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(I[C)Ljava/lang/String;",
                                    "method_body": "317: public static String random(int count, char... chars) {\n318: if (chars == null) {\n321: return random(count, 0, chars.length, false, false, chars, RANDOM);\n322: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(I)Ljava/lang/String;",
                                    "method_body": "68: public static String random(int count) {\n69: return random(count, false, false);\n70: }",
                                    "suspicious_rank": 0.289
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IZZ)Ljava/lang/String;",
                                    "method_body": "142: public static String random(int count, boolean letters, boolean numbers) {\n143: return random(count, 0, 0, letters, numbers);\n144: }",
                                    "suspicious_rank": 0.289
                                }
                            ],
                            "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 2094380118\nat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:248)\nat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:321)\nat org.apache.commons.lang3.RandomStringUtilsTest.testExceptions(RandomStringUtilsTest.java:148)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.RandomStringUtilsTest.testLANG805",
                            "test_body": "128: public void testLANG805() {\n129: long seed = System.currentTimeMillis();\n130: assertEquals(\"aaa\", RandomStringUtils.random(3,0,0,false,false,new char[]{'a'},new Random(seed)));\n131: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;",
                                    "method_body": "223: public static String random(int count, int start, int end, boolean letters, boolean numbers,\n225: if (count == 0) {\n227: } else if (count < 0) {\n228: throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n231: if (start == 0 && end == 0) {\n232: if (!letters && !numbers) {\n233: end = Integer.MAX_VALUE;\n240: char[] buffer = new char[count];\n241: int gap = end - start;\n243: while (count-- != 0) {\n245: if (chars == null) {\n248: ch = chars[random.nextInt(gap) + start];\n282: }",
                                    "suspicious_rank": 0.5
                                }
                            ],
                            "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 117011530\nat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:248)\nat org.apache.commons.lang3.RandomStringUtilsTest.testLANG805(RandomStringUtilsTest.java:130)"
                        }
                    ]
                },
                {
                    "bug_id": 13,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.SerializationUtilsTest.testPrimitiveTypeClassSerialization",
                            "test_body": "368: public void testPrimitiveTypeClassSerialization() {\n369: Class<?>[] primitiveTypes = { byte.class, short.class, int.class, long.class, float.class, double.class,\n370: boolean.class, char.class, void.class };\n371: 372: for (Class<?> primitiveType : primitiveTypes) {\n373: Class<?> clone = SerializationUtils.clone(primitiveType);\n374: assertEquals(primitiveType, clone);\n375: }\n376: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.SerializationUtils:serialize(Ljava/io/Serializable;)[B",
                                    "method_body": "161: public static byte[] serialize(Serializable obj) {\n162: ByteArrayOutputStream baos = new ByteArrayOutputStream(512);\n163: serialize(obj, baos);\n164: return baos.toByteArray();\n165: }",
                                    "suspicious_rank": 0.14
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream:resolveClass(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;",
                                    "method_body": "263: protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {\n264: String name = desc.getName();\n266: return Class.forName(name, false, classLoader);\n267: } catch (ClassNotFoundException ex) {\n268: return Class.forName(name, false, Thread.currentThread().getContextClassLoader());\n270: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SerializationUtils:serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V",
                                    "method_body": "130: public static void serialize(Serializable obj, OutputStream outputStream) {\n131: if (outputStream == null) {\n134: ObjectOutputStream out = null;\n137: out = new ObjectOutputStream(outputStream);\n138: out.writeObject(obj);\n144: if (out != null) {\n145: out.close();\n149: }\n151: }",
                                    "suspicious_rank": 0.12
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SerializationException:<init>(Ljava/lang/String;Ljava/lang/Throwable;)V",
                                    "method_body": "74: public SerializationException(String msg, Throwable cause) {\n75: super(msg, cause);\n76: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream:<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V",
                                    "method_body": "248: public ClassLoaderAwareObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {\n249: super(in);\n250: this.classLoader = classLoader;\n252: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SerializationUtils:clone(Ljava/io/Serializable;)Ljava/io/Serializable;",
                                    "method_body": "78: public static <T extends Serializable> T clone(T object) {\n79: if (object == null) {\n82: byte[] objectData = serialize(object);\n83: ByteArrayInputStream bais = new ByteArrayInputStream(objectData);\n85: ClassLoaderAwareObjectInputStream in = null;\n88: in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());\n95: T readObject = (T) in.readObject();\n96: return readObject;\n98: } catch (ClassNotFoundException ex) {\n99: throw new SerializationException(\"ClassNotFoundException while reading cloned object data\", ex);\n103: try {\n104: if (in != null) {\n105: in.close();\n108: throw new SerializationException(\"IOException on closing cloned object data InputStream.\", ex);\n109: }\n111: }",
                                    "suspicious_rank": 0.204
                                }
                            ],
                            "stack_trace": "org.apache.commons.lang3.SerializationException: ClassNotFoundException while reading cloned object data\nat org.apache.commons.lang3.SerializationUtils.clone(SerializationUtils.java:99)\nat org.apache.commons.lang3.SerializationUtilsTest.testPrimitiveTypeClassSerialization(SerializationUtilsTest.java:373)"
                        }
                    ]
                },
                {
                    "bug_id": 14,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals",
                            "test_body": "486: public void testEquals() {\n487: final CharSequence fooCs = FOO, barCs = BAR, foobarCs = FOOBAR;\n488: assertTrue(StringUtils.equals(null, null));\n489: assertTrue(StringUtils.equals(fooCs, fooCs));\n490: assertTrue(StringUtils.equals(fooCs, (CharSequence) new StringBuilder(FOO)));\n491: assertTrue(StringUtils.equals(fooCs, (CharSequence) new String(new char[] { 'f', 'o', 'o' })));\n492: assertTrue(StringUtils.equals(fooCs, (CharSequence) new CustomCharSequence(FOO)));\n493: assertTrue(StringUtils.equals((CharSequence) new CustomCharSequence(FOO), fooCs));\n494: assertFalse(StringUtils.equals(fooCs, (CharSequence) new String(new char[] { 'f', 'O', 'O' })));\n495: assertFalse(StringUtils.equals(fooCs, barCs));\n496: assertFalse(StringUtils.equals(fooCs, null));\n497: assertFalse(StringUtils.equals(null, fooCs));\n498: assertFalse(StringUtils.equals(fooCs, foobarCs));\n499: assertFalse(StringUtils.equals(foobarCs, fooCs));\n500: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z",
                                    "method_body": "781: public static boolean equals(CharSequence cs1, CharSequence cs2) {\n782: if (cs1 == cs2) {\n783: return true;\n785: if (cs1 == null || cs2 == null) {\n788: return cs1.equals(cs2);\n789: }",
                                    "suspicious_rank": 0.243
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertTrue(Assert.java:31)\nat junit.framework.TestCase.assertTrue(TestCase.java:201)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals(StringUtilsEqualsIndexOfTest.java:490)"
                        }
                    ]
                },
                {
                    "bug_id": 15,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable",
                            "test_body": "108: public void testIsAssignable() throws SecurityException, NoSuchMethodException,\n109: NoSuchFieldException {\n110: List list0 = null;\n111: List<Object> list1 = null;\n112: List<?> list2 = null;\n113: List<? super Object> list3 = null;\n114: List<String> list4 = null;\n115: List<? extends String> list5 = null;\n116: List<? super String> list6 = null;\n117: List[] list7 = null;\n118: List<Object>[] list8 = null;\n119: List<?>[] list9 = null;\n120: List<? super Object>[] list10 = null;\n121: List<String>[] list11 = null;\n122: List<? extends String>[] list12 = null;\n123: List<? super String>[] list13;\n124: Class<?> clazz = getClass();\n125: Method method = clazz.getMethod(\"dummyMethod\", List.class, List.class, List.class,\n126: List.class, List.class, List.class, List.class, List[].class, List[].class,\n127: List[].class, List[].class, List[].class, List[].class, List[].class);\n128: Type[] types = method.getGenericParameterTypes();\n129: //        list0 = list0;\n130: delegateBooleanAssertion(types, 0, 0, true);\n131: list1 = list0;\n132: delegateBooleanAssertion(types, 0, 1, true);\n133: list0 = list1;\n134: delegateBooleanAssertion(types, 1, 0, true);\n135: list2 = list0;\n136: delegateBooleanAssertion(types, 0, 2, true);\n137: list0 = list2;\n138: delegateBooleanAssertion(types, 2, 0, true);\n139: list3 = list0;\n140: delegateBooleanAssertion(types, 0, 3, true);\n141: list0 = list3;\n142: delegateBooleanAssertion(types, 3, 0, true);\n143: list4 = list0;\n144: delegateBooleanAssertion(types, 0, 4, true);\n145: list0 = list4;\n146: delegateBooleanAssertion(types, 4, 0, true);\n147: list5 = list0;\n148: delegateBooleanAssertion(types, 0, 5, true);\n149: list0 = list5;\n150: delegateBooleanAssertion(types, 5, 0, true);\n151: list6 = list0;\n152: delegateBooleanAssertion(types, 0, 6, true);\n153: list0 = list6;\n154: delegateBooleanAssertion(types, 6, 0, true);\n155: //        list1 = list1;\n156: delegateBooleanAssertion(types, 1, 1, true);\n157: list2 = list1;\n158: delegateBooleanAssertion(types, 1, 2, true);\n159: list1 = (List<Object>) list2;\n160: delegateBooleanAssertion(types, 2, 1, false);\n161: list3 = list1;\n162: delegateBooleanAssertion(types, 1, 3, true);\n163: list1 = (List<Object>) list3;\n164: delegateBooleanAssertion(types, 3, 1, false);\n165: // list4 = list1;\n166: delegateBooleanAssertion(types, 1, 4, false);\n167: // list1 = list4;\n168: delegateBooleanAssertion(types, 4, 1, false);\n169: // list5 = list1;\n170: delegateBooleanAssertion(types, 1, 5, false);\n171: // list1 = list5;\n172: delegateBooleanAssertion(types, 5, 1, false);\n173: list6 = list1;\n174: delegateBooleanAssertion(types, 1, 6, true);\n175: list1 = (List<Object>) list6;\n176: delegateBooleanAssertion(types, 6, 1, false);\n177: //        list2 = list2;\n178: delegateBooleanAssertion(types, 2, 2, true);\n179: list2 = list3;\n180: delegateBooleanAssertion(types, 2, 3, false);\n181: list2 = list4;\n182: delegateBooleanAssertion(types, 3, 2, true);\n183: list3 = (List<? super Object>) list2;\n184: delegateBooleanAssertion(types, 2, 4, false);\n185: list2 = list5;\n186: delegateBooleanAssertion(types, 4, 2, true);\n187: list4 = (List<String>) list2;\n188: delegateBooleanAssertion(types, 2, 5, false);\n189: list2 = list6;\n190: delegateBooleanAssertion(types, 5, 2, true);\n191: list5 = (List<? extends String>) list2;\n192: delegateBooleanAssertion(types, 2, 6, false);\n193: //        list3 = list3;\n194: delegateBooleanAssertion(types, 6, 2, true);\n195: list6 = (List<? super String>) list2;\n196: delegateBooleanAssertion(types, 3, 3, true);\n197: // list4 = list3;\n198: delegateBooleanAssertion(types, 3, 4, false);\n199: // list3 = list4;\n200: delegateBooleanAssertion(types, 4, 3, false);\n201: // list5 = list3;\n202: delegateBooleanAssertion(types, 3, 5, false);\n203: // list3 = list5;\n204: delegateBooleanAssertion(types, 5, 3, false);\n205: list6 = list3;\n206: delegateBooleanAssertion(types, 3, 6, true);\n207: list3 = (List<? super Object>) list6;\n208: delegateBooleanAssertion(types, 6, 3, false);\n209: //        list4 = list4;\n210: delegateBooleanAssertion(types, 4, 4, true);\n211: list5 = list4;\n212: delegateBooleanAssertion(types, 4, 5, true);\n213: list4 = (List<String>) list5;\n214: delegateBooleanAssertion(types, 5, 4, false);\n215: list6 = list4;\n216: delegateBooleanAssertion(types, 4, 6, true);\n217: list4 = (List<String>) list6;\n218: delegateBooleanAssertion(types, 6, 4, false);\n219: //        list5 = list5;\n220: delegateBooleanAssertion(types, 5, 5, true);\n221: list6 = (List<? super String>) list5;\n222: delegateBooleanAssertion(types, 5, 6, false);\n223: list5 = (List<? extends String>) list6;\n224: delegateBooleanAssertion(types, 6, 5, false);\n225: //        list6 = list6;\n226: delegateBooleanAssertion(types, 6, 6, true);\n227: 228: //        list7 = list7;\n229: delegateBooleanAssertion(types, 7, 7, true);\n230: list8 = list7;\n231: delegateBooleanAssertion(types, 7, 8, true);\n232: list7 = list8;\n233: delegateBooleanAssertion(types, 8, 7, true);\n234: list9 = list7;\n235: delegateBooleanAssertion(types, 7, 9, true);\n236: list7 = list9;\n237: delegateBooleanAssertion(types, 9, 7, true);\n238: list10 = list7;\n239: delegateBooleanAssertion(types, 7, 10, true);\n240: list7 = list10;\n241: delegateBooleanAssertion(types, 10, 7, true);\n242: list11 = list7;\n243: delegateBooleanAssertion(types, 7, 11, true);\n244: list7 = list11;\n245: delegateBooleanAssertion(types, 11, 7, true);\n246: list12 = list7;\n247: delegateBooleanAssertion(types, 7, 12, true);\n248: list7 = list12;\n249: delegateBooleanAssertion(types, 12, 7, true);\n250: list13 = list7;\n251: delegateBooleanAssertion(types, 7, 13, true);\n252: list7 = list13;\n253: delegateBooleanAssertion(types, 13, 7, true);\n254: //        list8 = list8;\n255: delegateBooleanAssertion(types, 8, 8, true);\n256: list9 = list8;\n257: delegateBooleanAssertion(types, 8, 9, true);\n258: list8 = (List<Object>[]) list9;\n259: delegateBooleanAssertion(types, 9, 8, false);\n260: list10 = list8;\n261: delegateBooleanAssertion(types, 8, 10, true);\n262: list8 = (List<Object>[]) list10; // NOTE cast is required by Sun Java, but not by Eclipse\n263: delegateBooleanAssertion(types, 10, 8, false);\n264: // list11 = list8;\n265: delegateBooleanAssertion(types, 8, 11, false);\n266: // list8 = list11;\n267: delegateBooleanAssertion(types, 11, 8, false);\n268: // list12 = list8;\n269: delegateBooleanAssertion(types, 8, 12, false);\n270: // list8 = list12;\n271: delegateBooleanAssertion(types, 12, 8, false);\n272: list13 = list8;\n273: delegateBooleanAssertion(types, 8, 13, true);\n274: list8 = (List<Object>[]) list13;\n275: delegateBooleanAssertion(types, 13, 8, false);\n276: //        list9 = list9;\n277: delegateBooleanAssertion(types, 9, 9, true);\n278: list10 = (List<? super Object>[]) list9;\n279: delegateBooleanAssertion(types, 9, 10, false);\n280: list9 = list10;\n281: delegateBooleanAssertion(types, 10, 9, true);\n282: list11 = (List<String>[]) list9;\n283: delegateBooleanAssertion(types, 9, 11, false);\n284: list9 = list11;\n285: delegateBooleanAssertion(types, 11, 9, true);\n286: list12 = (List<? extends String>[]) list9;\n287: delegateBooleanAssertion(types, 9, 12, false);\n288: list9 = list12;\n289: delegateBooleanAssertion(types, 12, 9, true);\n290: list13 = (List<? super String>[]) list9;\n291: delegateBooleanAssertion(types, 9, 13, false);\n292: list9 = list13;\n293: delegateBooleanAssertion(types, 13, 9, true);\n294: //        list10 = list10;\n295: delegateBooleanAssertion(types, 10, 10, true);\n296: // list11 = list10;\n297: delegateBooleanAssertion(types, 10, 11, false);\n298: // list10 = list11;\n299: delegateBooleanAssertion(types, 11, 10, false);\n300: // list12 = list10;\n301: delegateBooleanAssertion(types, 10, 12, false);\n302: // list10 = list12;\n303: delegateBooleanAssertion(types, 12, 10, false);\n304: list13 = list10;\n305: delegateBooleanAssertion(types, 10, 13, true);\n306: list10 = (List<? super Object>[]) list13;\n307: delegateBooleanAssertion(types, 13, 10, false);\n308: //        list11 = list11;\n309: delegateBooleanAssertion(types, 11, 11, true);\n310: list12 = list11;\n311: delegateBooleanAssertion(types, 11, 12, true);\n312: list11 = (List<String>[]) list12;\n313: delegateBooleanAssertion(types, 12, 11, false);\n314: list13 = list11;\n315: delegateBooleanAssertion(types, 11, 13, true);\n316: list11 = (List<String>[]) list13;\n317: delegateBooleanAssertion(types, 13, 11, false);\n318: //        list12 = list12;\n319: delegateBooleanAssertion(types, 12, 12, true);\n320: list13 = (List<? super String>[]) list12;\n321: delegateBooleanAssertion(types, 12, 13, false);\n322: list12 = (List<? extends String>[]) list13;\n323: delegateBooleanAssertion(types, 13, 12, false);\n324: //        list13 = list13;\n325: delegateBooleanAssertion(types, 13, 13, true);\n326: Type disType = getClass().getField(\"dis\").getGenericType();\n327: // Reporter.log( ( ( ParameterizedType ) disType\n328: // ).getOwnerType().getClass().toString() );\n329: Type datType = getClass().getField(\"dat\").getGenericType();\n330: Type daType = getClass().getField(\"da\").getGenericType();\n331: Type uhderType = getClass().getField(\"uhder\").getGenericType();\n332: Type dingType = getClass().getField(\"ding\").getGenericType();\n333: Type testerType = getClass().getField(\"tester\").getGenericType();\n334: Type tester2Type = getClass().getField(\"tester2\").getGenericType();\n335: Type dat2Type = getClass().getField(\"dat2\").getGenericType();\n336: Type dat3Type = getClass().getField(\"dat3\").getGenericType();\n337: dis = dat;\n338: Assert.assertTrue(TypeUtils.isAssignable(datType, disType));\n339: // dis = da;\n340: Assert.assertFalse(TypeUtils.isAssignable(daType, disType));\n341: dis = uhder;\n342: Assert.assertTrue(TypeUtils.isAssignable(uhderType, disType));\n343: dis = ding;\n344: Assert.assertFalse(String.format(\"type %s not assignable to %s!\", dingType, disType),\n345: TypeUtils.isAssignable(dingType, disType));\n346: dis = tester;\n347: Assert.assertTrue(TypeUtils.isAssignable(testerType, disType));\n348: // dis = tester2;\n349: Assert.assertFalse(TypeUtils.isAssignable(tester2Type, disType));\n350: // dat = dat2;\n351: Assert.assertFalse(TypeUtils.isAssignable(dat2Type, datType));\n352: // dat2 = dat;\n353: Assert.assertFalse(TypeUtils.isAssignable(datType, dat2Type));\n354: // dat = dat3;\n355: Assert.assertFalse(TypeUtils.isAssignable(dat3Type, datType));\n356: char ch = 0;\n357: boolean bo = false;\n358: byte by = 0;\n359: short sh = 0;\n360: int in = 0;\n361: long lo = 0;\n362: float fl = 0;\n363: double du = 0;\n364: du = ch;\n365: Assert.assertTrue(TypeUtils.isAssignable(char.class, double.class));\n366: du = by;\n367: Assert.assertTrue(TypeUtils.isAssignable(byte.class, double.class));\n368: du = sh;\n369: Assert.assertTrue(TypeUtils.isAssignable(short.class, double.class));\n370: du = in;\n371: Assert.assertTrue(TypeUtils.isAssignable(int.class, double.class));\n372: du = lo;\n373: Assert.assertTrue(TypeUtils.isAssignable(long.class, double.class));\n374: du = fl;\n375: Assert.assertTrue(TypeUtils.isAssignable(float.class, double.class));\n376: lo = in;\n377: Assert.assertTrue(TypeUtils.isAssignable(int.class, long.class));\n378: lo = Integer.valueOf(0);\n379: Assert.assertTrue(TypeUtils.isAssignable(Integer.class, long.class));\n380: // Long lngW = 1;\n381: Assert.assertFalse(TypeUtils.isAssignable(int.class, Long.class));\n382: // lngW = Integer.valueOf( 0 );\n383: Assert.assertFalse(TypeUtils.isAssignable(Integer.class, Long.class));\n384: in = Integer.valueOf(0);\n385: Assert.assertTrue(TypeUtils.isAssignable(Integer.class, int.class));\n386: Integer inte = in;\n387: Assert.assertTrue(TypeUtils.isAssignable(int.class, Integer.class));\n388: Assert.assertTrue(TypeUtils.isAssignable(int.class, Number.class));\n389: Assert.assertTrue(TypeUtils.isAssignable(int.class, Object.class));\n390: Type intComparableType = getClass().getField(\"intComparable\").getGenericType();\n391: intComparable = 1;\n392: Assert.assertTrue(TypeUtils.isAssignable(int.class, intComparableType));\n393: Assert.assertTrue(TypeUtils.isAssignable(int.class, Comparable.class));\n394: Serializable ser = 1;\n395: Assert.assertTrue(TypeUtils.isAssignable(int.class, Serializable.class));\n396: Type longComparableType = getClass().getField(\"longComparable\").getGenericType();\n397: // longComparable = 1;\n398: Assert.assertFalse(TypeUtils.isAssignable(int.class, longComparableType));\n399: // longComparable = Integer.valueOf( 0 );\n400: Assert.assertFalse(TypeUtils.isAssignable(Integer.class, longComparableType));\n401: // int[] ia;\n402: // long[] la = ia;\n403: Assert.assertFalse(TypeUtils.isAssignable(int[].class, long[].class));\n404: Integer[] ia = null;\n405: Type caType = getClass().getField(\"intWildcardComparable\").getGenericType();\n406: intWildcardComparable = ia;\n407: Assert.assertTrue(TypeUtils.isAssignable(Integer[].class, caType));\n408: // int[] ina = ia;\n409: Assert.assertFalse(TypeUtils.isAssignable(Integer[].class, int[].class));\n410: int[] ina = null;\n411: Object[] oa;\n412: // oa = ina;\n413: Assert.assertFalse(TypeUtils.isAssignable(int[].class, Object[].class));\n414: oa = new Integer[0];\n415: Assert.assertTrue(TypeUtils.isAssignable(Integer[].class, Object[].class));\n416: Type bClassType = AClass.class.getField(\"bClass\").getGenericType();\n417: Type cClassType = AClass.class.getField(\"cClass\").getGenericType();\n418: Type dClassType = AClass.class.getField(\"dClass\").getGenericType();\n419: Type eClassType = AClass.class.getField(\"eClass\").getGenericType();\n420: Type fClassType = AClass.class.getField(\"fClass\").getGenericType();\n421: AClass aClass = new AClass(new AAClass<String>());\n422: aClass.bClass = aClass.cClass;\n423: Assert.assertTrue(TypeUtils.isAssignable(cClassType, bClassType));\n424: aClass.bClass = aClass.dClass;\n425: Assert.assertTrue(TypeUtils.isAssignable(dClassType, bClassType));\n426: aClass.bClass = aClass.eClass;\n427: Assert.assertTrue(TypeUtils.isAssignable(eClassType, bClassType));\n428: aClass.bClass = aClass.fClass;\n429: Assert.assertTrue(TypeUtils.isAssignable(fClassType, bClassType));\n430: aClass.cClass = aClass.dClass;\n431: Assert.assertTrue(TypeUtils.isAssignable(dClassType, cClassType));\n432: aClass.cClass = aClass.eClass;\n433: Assert.assertTrue(TypeUtils.isAssignable(eClassType, cClassType));\n434: aClass.cClass = aClass.fClass;\n435: Assert.assertTrue(TypeUtils.isAssignable(fClassType, cClassType));\n436: aClass.dClass = aClass.eClass;\n437: Assert.assertTrue(TypeUtils.isAssignable(eClassType, dClassType));\n438: aClass.dClass = aClass.fClass;\n439: Assert.assertTrue(TypeUtils.isAssignable(fClassType, dClassType));\n440: aClass.eClass = aClass.fClass;\n441: Assert.assertTrue(TypeUtils.isAssignable(fClassType, eClassType));\n442: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:substituteTypeVariables(Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/lang/reflect/Type;",
                                    "method_body": "471: private static Type substituteTypeVariables(Type type, Map<TypeVariable<?>, Type> typeVarAssigns) {\n472: if (type instanceof TypeVariable<?> && typeVarAssigns != null) {\n483: return type;\n484: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getImplicitLowerBounds(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;",
                                    "method_body": "941: public static Type[] getImplicitLowerBounds(WildcardType wildcardType) {\n942: Type[] bounds = wildcardType.getLowerBounds();\n944: return bounds.length == 0 ? new Type[] { null } : bounds;\n945: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getTypeArguments(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;",
                                    "method_body": "545: private static Map<TypeVariable<?>, Type> getTypeArguments(Type type, Class<?> toClass,\n547: if (type instanceof Class<?>) {\n548: return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);\n551: if (type instanceof ParameterizedType) {\n552: return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);\n587: }",
                                    "suspicious_rank": 0.632
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
                                    "method_body": "46: public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\n54: if (input == null) {\n58: StringWriter writer = new StringWriter(input.length() * 2);\n59: translate(input, writer);\n60: return writer.toString();\n65: }",
                                    "suspicious_rank": 0.12
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/ParameterizedType;Ljava/util/Map;)Z",
                                    "method_body": "179: private static boolean isAssignable(Type type, ParameterizedType toParameterizedType,\n181: if (type == null) {\n187: if (toParameterizedType == null) {\n192: if (toParameterizedType.equals(type)) {\n193: return true;\n197: Class<?> toClass = getRawType(toParameterizedType);\n200: Map<TypeVariable<?>, Type> fromTypeVarAssigns = getTypeArguments(type, toClass, null);\n203: if (fromTypeVarAssigns == null) {\n210: if (fromTypeVarAssigns.isEmpty()) {\n211: return true;\n215: Map<TypeVariable<?>, Type> toTypeVarAssigns = getTypeArguments(toParameterizedType,\n219: for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {\n220: Type toTypeArg = entry.getValue();\n221: Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());\n226: if (fromTypeArg != null\n230: return false;\n232: }\n234: return true;\n235: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getTypeArguments(Ljava/lang/reflect/ParameterizedType;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;",
                                    "method_body": "597: private static Map<TypeVariable<?>, Type> getTypeArguments(\n600: Class<?> cls = getRawType(parameterizedType);\n603: if (!isAssignable(cls, toClass)) {\n607: Type ownerType = parameterizedType.getOwnerType();\n610: if (ownerType instanceof ParameterizedType) {\n612: ParameterizedType parameterizedOwnerType = (ParameterizedType) ownerType;\n613: typeVarAssigns = getTypeArguments(parameterizedOwnerType,\n615: } else {\n617: typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()\n622: Type[] typeArgs = parameterizedType.getActualTypeArguments();\n624: TypeVariable<?>[] typeParams = cls.getTypeParameters();\n627: for (int i = 0; i < typeParams.length; i++) {\n628: Type typeArg = typeArgs[i];\n629: typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns\n633: if (toClass.equals(cls)) {\n635: return typeVarAssigns;\n639: return getTypeArguments(getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n640: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getClosestParentType(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;",
                                    "method_body": "797: private static Type getClosestParentType(Class<?> cls, Class<?> superClass) {\n799: if (superClass.isInterface()) {\n801: Type[] interfaceTypes = cls.getGenericInterfaces();\n803: Type genericInterface = null;\n806: for (Type midType : interfaceTypes) {\n807: Class<?> midClass = null;\n809: if (midType instanceof ParameterizedType) {\n810: midClass = getRawType((ParameterizedType) midType);\n820: if (isAssignable(midClass, superClass)\n822: genericInterface = midType;\n827: if (genericInterface != null) {\n828: return genericInterface;\n834: return cls.getGenericSuperclass();\n835: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/GenericArrayType;Ljava/util/Map;)Z",
                                    "method_body": "260: private static boolean isAssignable(Type type, GenericArrayType toGenericArrayType,\n262: if (type == null) {\n268: if (toGenericArrayType == null) {\n273: if (toGenericArrayType.equals(type)) {\n274: return true;\n277: Type toComponentType = toGenericArrayType.getGenericComponentType();\n279: if (type instanceof Class<?>) {\n287: if (type instanceof GenericArrayType) {\n289: return isAssignable(((GenericArrayType) type).getGenericComponentType(),\n324: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z",
                                    "method_body": "64: public static boolean isAssignable(Type type, Type toType) {\n65: return isAssignable(type, toType, null);\n66: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/WildcardType;Ljava/util/Map;)Z",
                                    "method_body": "336: private static boolean isAssignable(Type type, WildcardType toWildcardType,\n338: if (type == null) {\n344: if (toWildcardType == null) {\n349: if (toWildcardType.equals(type)) {\n353: Type[] toUpperBounds = getImplicitUpperBounds(toWildcardType);\n354: Type[] toLowerBounds = getImplicitLowerBounds(toWildcardType);\n356: if (type instanceof WildcardType) {\n357: WildcardType wildcardType = (WildcardType) type;\n358: Type[] upperBounds = getImplicitUpperBounds(wildcardType);\n359: Type[] lowerBounds = getImplicitLowerBounds(wildcardType);\n361: for (Type toBound : toUpperBounds) {\n364: toBound = substituteTypeVariables(toBound, typeVarAssigns);\n369: for (Type bound : upperBounds) {\n370: if (!isAssignable(bound, toBound, typeVarAssigns)) {\n371: return false;\n376: for (Type toBound : toLowerBounds) {\n379: toBound = substituteTypeVariables(toBound, typeVarAssigns);\n384: for (Type bound : lowerBounds) {\n385: if (!isAssignable(toBound, bound, typeVarAssigns)) {\n386: return false;\n391: return true;\n394: for (Type toBound : toUpperBounds) {\n397: if (!isAssignable(type, substituteTypeVariables(toBound, typeVarAssigns),\n399: return false;\n403: for (Type toBound : toLowerBounds) {\n406: if (!isAssignable(substituteTypeVariables(toBound, typeVarAssigns), type,\n408: return false;\n412: return true;\n413: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
                                    "method_body": "75: public final void translate(CharSequence input, Writer out) throws IOException {\n76: if (out == null) {\n79: if (input == null) {\n82: int pos = 0;\n83: int len = input.length();\n84: while (pos < len) {\n85: int consumed = translate(input, pos, out);\n86: if (consumed == 0) {\n87: char[] c = Character.toChars(Character.codePointAt(input, pos));\n88: out.write(c);\n89: pos+= c.length;\n90: continue;\n94: for (int pt = 0; pt < consumed; pt++) {\n95: pos += Character.charCount(Character.codePointAt(input, pos));\n97: }\n98: }",
                                    "suspicious_rank": 0.116
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringEscapeUtils:escapeHtml4(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "432: public static final String escapeHtml4(String input) {\n433: return ESCAPE_HTML4.translate(input);\n434: }",
                                    "suspicious_rank": 0.316
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getImplicitUpperBounds(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;",
                                    "method_body": "926: public static Type[] getImplicitUpperBounds(WildcardType wildcardType) {\n927: Type[] bounds = wildcardType.getUpperBounds();\n929: return bounds.length == 0 ? new Type[] { Object.class } : normalizeUpperBounds(bounds);\n930: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.LookupTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "64: public int translate(CharSequence input, int index, Writer out) throws IOException {\n65: int max = longest;\n66: if (index + longest > input.length()) {\n70: for (int i = max; i >= shortest; i--) {\n71: CharSequence subSeq = input.subSequence(index, index + i);\n72: CharSequence result = lookupMap.get(subSeq);\n73: if (result != null) {\n74: out.write(result.toString());\n75: return i;\n78: return 0;\n79: }",
                                    "suspicious_rank": 0.158
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/util/Map;)Z",
                                    "method_body": "77: private static boolean isAssignable(Type type, Type toType,\n79: if (toType == null || toType instanceof Class<?>) {\n80: return isAssignable(type, (Class<?>) toType);\n83: if (toType instanceof ParameterizedType) {\n84: return isAssignable(type, (ParameterizedType) toType, typeVarAssigns);\n87: if (toType instanceof GenericArrayType) {\n88: return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);\n91: if (toType instanceof WildcardType) {\n92: return isAssignable(type, (WildcardType) toType, typeVarAssigns);\n102: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ClassUtils:isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z",
                                    "method_body": "588: public static boolean isAssignable(Class<?> cls, Class<?> toClass) {\n589: return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));\n590: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getRawType(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/Class;",
                                    "method_body": "985: private static Class<?> getRawType(ParameterizedType parameterizedType) {\n986: Type rawType = parameterizedType.getRawType();\n993: if (!(rawType instanceof Class<?>)) {\n997: return (Class<?>) rawType;\n998: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.JavaVersion:atLeast(Lorg/apache/commons/lang3/JavaVersion;)Z",
                                    "method_body": "104: public boolean atLeast(JavaVersion requiredVersion) {\n105: return this.value >= requiredVersion.value;\n106: }",
                                    "suspicious_rank": 0.272
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/Class;)Z",
                                    "method_body": "112: private static boolean isAssignable(Type type, Class<?> toClass) {\n113: if (type == null) {\n115: return toClass == null || !toClass.isPrimitive();\n120: if (toClass == null) {\n121: return false;\n125: if (toClass.equals(type)) {\n126: return true;\n129: if (type instanceof Class<?>) {\n131: return ClassUtils.isAssignable((Class<?>) type, toClass);\n134: if (type instanceof ParameterizedType) {\n136: return isAssignable(getRawType((ParameterizedType) type), toClass);\n168: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:isJavaVersionAtLeast(Lorg/apache/commons/lang3/JavaVersion;)Z",
                                    "method_body": "1370: public static boolean isJavaVersionAtLeast(JavaVersion requiredVersion) {\n1371: return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);\n1372: }",
                                    "suspicious_rank": 0.277
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ClassUtils:isAssignable(Ljava/lang/Class;Ljava/lang/Class;Z)Z",
                                    "method_body": "619: public static boolean isAssignable(Class<?> cls, Class<?> toClass, boolean autoboxing) {\n620: if (toClass == null) {\n624: if (cls == null) {\n628: if (autoboxing) {\n629: if (cls.isPrimitive() && !toClass.isPrimitive()) {\n630: cls = primitiveToWrapper(cls);\n631: if (cls == null) {\n635: if (toClass.isPrimitive() && !cls.isPrimitive()) {\n642: if (cls.equals(toClass)) {\n645: if (cls.isPrimitive()) {\n689: return toClass.isAssignableFrom(cls);\n690: }",
                                    "suspicious_rank": 0.283
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "50: public int translate(CharSequence input, int index, Writer out) throws IOException {\n51: for (CharSequenceTranslator translator : translators) {\n52: int consumed = translator.translate(input, index, out);\n53: if(consumed != 0) {\n54: return consumed;\n57: return 0;\n58: }",
                                    "suspicious_rank": 0.162
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:normalizeUpperBounds([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;",
                                    "method_body": "875: public static Type[] normalizeUpperBounds(Type[] bounds) {\n877: if (bounds.length < 2) {\n878: return bounds;\n899: }",
                                    "suspicious_rank": 0.5
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: type class org.apache.commons.lang3.reflect.TypeUtilsTest$Thing not assignable to org.apache.commons.lang3.reflect.TypeUtilsTest.org.apache.commons.lang3.reflect.TypeUtilsTest$This<java.lang.String, java.lang.String>!\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.assertTrue(Assert.java:41)\nat org.junit.Assert.assertFalse(Assert.java:64)\nat org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable(TypeUtilsTest.java:344)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments",
                            "test_body": "472: public void testGetTypeArguments() {\n473: Map<TypeVariable<?>, Type> typeVarAssigns;\n474: TypeVariable<?> treeSetTypeVar;\n475: Type typeArg;\n476: 477: typeVarAssigns = TypeUtils.getTypeArguments(Integer.class, Comparable.class);\n478: treeSetTypeVar = Comparable.class.getTypeParameters()[0];\n479: Assert.assertTrue(\"Type var assigns for Comparable from Integer: \" + typeVarAssigns,\n480: typeVarAssigns.containsKey(treeSetTypeVar));\n481: typeArg = typeVarAssigns.get(treeSetTypeVar);\n482: Assert.assertEquals(\"Type argument of Comparable from Integer: \" + typeArg, Integer.class,\n483: typeVarAssigns.get(treeSetTypeVar));\n484: 485: typeVarAssigns = TypeUtils.getTypeArguments(int.class, Comparable.class);\n486: treeSetTypeVar = Comparable.class.getTypeParameters()[0];\n487: Assert.assertTrue(\"Type var assigns for Comparable from int: \" + typeVarAssigns,\n488: typeVarAssigns.containsKey(treeSetTypeVar));\n489: typeArg = typeVarAssigns.get(treeSetTypeVar);\n490: Assert.assertEquals(\"Type argument of Comparable from int: \" + typeArg, Integer.class,\n491: typeVarAssigns.get(treeSetTypeVar));\n492: 493: Collection<Integer> col = Arrays.asList(new Integer[0]);\n494: typeVarAssigns = TypeUtils.getTypeArguments(List.class, Collection.class);\n495: treeSetTypeVar = Comparable.class.getTypeParameters()[0];\n496: Assert.assertFalse(\"Type var assigns for Collection from List: \" + typeVarAssigns,\n497: typeVarAssigns.containsKey(treeSetTypeVar));\n498: 499: typeVarAssigns = TypeUtils.getTypeArguments(AAAClass.BBBClass.class, AAClass.BBClass.class);\n500: Assert.assertTrue(typeVarAssigns.size() == 2);\n501: Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.class.getTypeParameters()[0]));\n502: Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.BBClass.class.getTypeParameters()[0]));\n503: 504: typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);\n505: Assert.assertEquals(2, typeVarAssigns.size());\n506: Assert.assertEquals(String.class, typeVarAssigns.get(This.class.getTypeParameters()[0]));\n507: Assert.assertEquals(Other.class.getTypeParameters()[0], typeVarAssigns.get(This.class.getTypeParameters()[1]));\n508: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.ClassUtils:primitiveToWrapper(Ljava/lang/Class;)Ljava/lang/Class;",
                                    "method_body": "704: public static Class<?> primitiveToWrapper(Class<?> cls) {\n705: Class<?> convertedClass = cls;\n706: if (cls != null && cls.isPrimitive()) {\n707: convertedClass = primitiveWrapperMap.get(cls);\n709: return convertedClass;\n710: }",
                                    "suspicious_rank": 0.224
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getTypeArguments(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/util/Map;",
                                    "method_body": "533: public static Map<TypeVariable<?>, Type> getTypeArguments(Type type, Class<?> toClass) {\n534: return getTypeArguments(type, toClass, null);\n535: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getTypeArguments(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;",
                                    "method_body": "545: private static Map<TypeVariable<?>, Type> getTypeArguments(Type type, Class<?> toClass,\n547: if (type instanceof Class<?>) {\n548: return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);\n551: if (type instanceof ParameterizedType) {\n552: return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);\n587: }",
                                    "suspicious_rank": 0.632
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getTypeArguments(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;",
                                    "method_body": "650: private static Map<TypeVariable<?>, Type> getTypeArguments(Class<?> cls, Class<?> toClass,\n653: if (!isAssignable(cls, toClass)) {\n658: if (cls.isPrimitive()) {\n660: if (toClass.isPrimitive()) {\n667: cls = ClassUtils.primitiveToWrapper(cls);\n671: HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()\n675: if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {\n676: return typeVarAssigns;\n680: return getTypeArguments(getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n681: }",
                                    "suspicious_rank": 0.632
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getTypeArguments(Ljava/lang/reflect/ParameterizedType;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;",
                                    "method_body": "597: private static Map<TypeVariable<?>, Type> getTypeArguments(\n600: Class<?> cls = getRawType(parameterizedType);\n603: if (!isAssignable(cls, toClass)) {\n607: Type ownerType = parameterizedType.getOwnerType();\n610: if (ownerType instanceof ParameterizedType) {\n612: ParameterizedType parameterizedOwnerType = (ParameterizedType) ownerType;\n613: typeVarAssigns = getTypeArguments(parameterizedOwnerType,\n615: } else {\n617: typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()\n622: Type[] typeArgs = parameterizedType.getActualTypeArguments();\n624: TypeVariable<?>[] typeParams = cls.getTypeParameters();\n627: for (int i = 0; i < typeParams.length; i++) {\n628: Type typeArg = typeArgs[i];\n629: typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns\n633: if (toClass.equals(cls)) {\n635: return typeVarAssigns;\n639: return getTypeArguments(getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n640: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getClosestParentType(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;",
                                    "method_body": "797: private static Type getClosestParentType(Class<?> cls, Class<?> superClass) {\n799: if (superClass.isInterface()) {\n801: Type[] interfaceTypes = cls.getGenericInterfaces();\n803: Type genericInterface = null;\n806: for (Type midType : interfaceTypes) {\n807: Class<?> midClass = null;\n809: if (midType instanceof ParameterizedType) {\n810: midClass = getRawType((ParameterizedType) midType);\n820: if (isAssignable(midClass, superClass)\n822: genericInterface = midType;\n827: if (genericInterface != null) {\n828: return genericInterface;\n834: return cls.getGenericSuperclass();\n835: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z",
                                    "method_body": "64: public static boolean isAssignable(Type type, Type toType) {\n65: return isAssignable(type, toType, null);\n66: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ClassUtils:isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z",
                                    "method_body": "588: public static boolean isAssignable(Class<?> cls, Class<?> toClass) {\n589: return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));\n590: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getRawType(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/Class;",
                                    "method_body": "985: private static Class<?> getRawType(ParameterizedType parameterizedType) {\n986: Type rawType = parameterizedType.getRawType();\n993: if (!(rawType instanceof Class<?>)) {\n997: return (Class<?>) rawType;\n998: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.JavaVersion:atLeast(Lorg/apache/commons/lang3/JavaVersion;)Z",
                                    "method_body": "104: public boolean atLeast(JavaVersion requiredVersion) {\n105: return this.value >= requiredVersion.value;\n106: }",
                                    "suspicious_rank": 0.272
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/Class;)Z",
                                    "method_body": "112: private static boolean isAssignable(Type type, Class<?> toClass) {\n113: if (type == null) {\n115: return toClass == null || !toClass.isPrimitive();\n120: if (toClass == null) {\n121: return false;\n125: if (toClass.equals(type)) {\n126: return true;\n129: if (type instanceof Class<?>) {\n131: return ClassUtils.isAssignable((Class<?>) type, toClass);\n134: if (type instanceof ParameterizedType) {\n136: return isAssignable(getRawType((ParameterizedType) type), toClass);\n168: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:isJavaVersionAtLeast(Lorg/apache/commons/lang3/JavaVersion;)Z",
                                    "method_body": "1370: public static boolean isJavaVersionAtLeast(JavaVersion requiredVersion) {\n1371: return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);\n1372: }",
                                    "suspicious_rank": 0.277
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ClassUtils:isAssignable(Ljava/lang/Class;Ljava/lang/Class;Z)Z",
                                    "method_body": "619: public static boolean isAssignable(Class<?> cls, Class<?> toClass, boolean autoboxing) {\n620: if (toClass == null) {\n624: if (cls == null) {\n628: if (autoboxing) {\n629: if (cls.isPrimitive() && !toClass.isPrimitive()) {\n630: cls = primitiveToWrapper(cls);\n631: if (cls == null) {\n635: if (toClass.isPrimitive() && !cls.isPrimitive()) {\n642: if (cls.equals(toClass)) {\n645: if (cls.isPrimitive()) {\n689: return toClass.isAssignableFrom(cls);\n690: }",
                                    "suspicious_rank": 0.283
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<2> but was:<0>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.junit.Assert.assertEquals(Assert.java:555)\nat org.junit.Assert.assertEquals(Assert.java:542)\nat org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments(TypeUtilsTest.java:505)"
                        }
                    ]
                },
                {
                    "bug_id": 16,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber",
                            "test_body": "182: public void testCreateNumber() {\n183: // a lot of things can go wrong\n184: assertEquals(\"createNumber(String) 1 failed\", Float.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5\"));\n185: assertEquals(\"createNumber(String) 2 failed\", Integer.valueOf(\"12345\"), NumberUtils.createNumber(\"12345\"));\n186: assertEquals(\"createNumber(String) 3 failed\", Double.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5D\"));\n187: assertEquals(\"createNumber(String) 3 failed\", Double.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5d\"));\n188: assertEquals(\"createNumber(String) 4 failed\", Float.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5F\"));\n189: assertEquals(\"createNumber(String) 4 failed\", Float.valueOf(\"1234.5\"), NumberUtils.createNumber(\"1234.5f\"));\n190: assertEquals(\"createNumber(String) 5 failed\", Long.valueOf(Integer.MAX_VALUE + 1L), NumberUtils.createNumber(\"\"\n191: + (Integer.MAX_VALUE + 1L)));\n192: assertEquals(\"createNumber(String) 6 failed\", Long.valueOf(12345), NumberUtils.createNumber(\"12345L\"));\n193: assertEquals(\"createNumber(String) 6 failed\", Long.valueOf(12345), NumberUtils.createNumber(\"12345l\"));\n194: assertEquals(\"createNumber(String) 7 failed\", Float.valueOf(\"-1234.5\"), NumberUtils.createNumber(\"-1234.5\"));\n195: assertEquals(\"createNumber(String) 8 failed\", Integer.valueOf(\"-12345\"), NumberUtils.createNumber(\"-12345\"));\n196: assertTrue(\"createNumber(String) 9a failed\", 0xFADE == NumberUtils.createNumber(\"0xFADE\").intValue());\n197: assertTrue(\"createNumber(String) 9b failed\", 0xFADE == NumberUtils.createNumber(\"0Xfade\").intValue());\n198: assertTrue(\"createNumber(String) 10a failed\", -0xFADE == NumberUtils.createNumber(\"-0xFADE\").intValue());\n199: assertTrue(\"createNumber(String) 10b failed\", -0xFADE == NumberUtils.createNumber(\"-0Xfade\").intValue());\n200: assertEquals(\"createNumber(String) 11 failed\", Double.valueOf(\"1.1E200\"), NumberUtils.createNumber(\"1.1E200\"));\n201: assertEquals(\"createNumber(String) 12 failed\", Float.valueOf(\"1.1E20\"), NumberUtils.createNumber(\"1.1E20\"));\n202: assertEquals(\"createNumber(String) 13 failed\", Double.valueOf(\"-1.1E200\"), NumberUtils.createNumber(\"-1.1E200\"));\n203: assertEquals(\"createNumber(String) 14 failed\", Double.valueOf(\"1.1E-200\"), NumberUtils.createNumber(\"1.1E-200\"));\n204: assertEquals(\"createNumber(null) failed\", null, NumberUtils.createNumber(null));\n205: assertEquals(\"createNumber(String) failed\", new BigInteger(\"12345678901234567890\"), NumberUtils\n206: .createNumber(\"12345678901234567890L\"));\n207: 208: // jdk 1.2 doesn't support this. unsure about jdk 1.2.2\n209: if (SystemUtils.isJavaVersionAtLeast(JAVA_1_3)) {\n210: assertEquals(\"createNumber(String) 15 failed\", new BigDecimal(\"1.1E-700\"), NumberUtils\n211: .createNumber(\"1.1E-700F\"));\n212: }\n213: assertEquals(\"createNumber(String) 16 failed\", Long.valueOf(\"10\" + Integer.MAX_VALUE), NumberUtils\n214: .createNumber(\"10\" + Integer.MAX_VALUE + \"L\"));\n215: assertEquals(\"createNumber(String) 17 failed\", Long.valueOf(\"10\" + Integer.MAX_VALUE), NumberUtils\n216: .createNumber(\"10\" + Integer.MAX_VALUE));\n217: assertEquals(\"createNumber(String) 18 failed\", new BigInteger(\"10\" + Long.MAX_VALUE), NumberUtils\n218: .createNumber(\"10\" + Long.MAX_VALUE));\n219: 220: // LANG-521\n221: assertEquals(\"createNumber(String) LANG-521 failed\", Float.valueOf(\"2.\"), NumberUtils.createNumber(\"2.\"));\n222: 223: // LANG-638\n224: assertFalse(\"createNumber(String) succeeded\", checkCreateNumber(\"1eE\"));\n225: 226: // LANG-693\n227: assertEquals(\"createNumber(String) LANG-693 failed\", Double.valueOf(Double.MAX_VALUE), NumberUtils\n228: .createNumber(\"\" + Double.MAX_VALUE));\n229: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;",
                                    "method_body": "642: public static Double createDouble(String str) {\n643: if (str == null) {\n646: return Double.valueOf(str);\n647: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "444: public static Number createNumber(String str) throws NumberFormatException {\n445: if (str == null) {\n448: if (StringUtils.isBlank(str)) {\n451: if (str.startsWith(\"--\")) {\n458: if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n459: return createInteger(str);\n461: char lastChar = str.charAt(str.length() - 1);\n465: int decPos = str.indexOf('.');\n466: int expPos = str.indexOf('e') + str.indexOf('E') + 1;\n468: if (decPos > -1) {\n470: if (expPos > -1) {\n476: dec = str.substring(decPos + 1);\n478: mant = str.substring(0, decPos);\n480: if (expPos > -1) {\n481: if (expPos > str.length()) {\n484: mant = str.substring(0, expPos);\n486: mant = str;\n488: dec = null;\n490: if (!Character.isDigit(lastChar) && lastChar != '.') {\n491: if (expPos > -1 && expPos < str.length() - 1) {\n494: exp = null;\n497: String numeric = str.substring(0, str.length() - 1);\n498: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n499: switch (lastChar) {\n502: if (dec == null\n506: return createLong(numeric);\n517: Float f = NumberUtils.createFloat(numeric);\n518: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n521: return f;\n531: Double d = NumberUtils.createDouble(numeric);\n532: if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n533: return d;\n545: throw new NumberFormatException(str + \" is not a valid number.\");\n551: if (expPos > -1 && expPos < str.length() - 1) {\n554: exp = null;\n556: if (dec == null && exp == null) {\n559: return createInteger(str);\n560: } catch (NumberFormatException nfe) { // NOPMD\n564: return createLong(str);\n572: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n574: Float f = createFloat(str);\n575: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n576: return f;\n594: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "182: public static boolean isEmpty(CharSequence cs) {\n183: return cs == null || cs.length() == 0;\n184: }",
                                    "suspicious_rank": 0.078
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "221: public static boolean isBlank(CharSequence cs) {\n223: if (cs == null || (strLen = cs.length()) == 0) {\n226: for (int i = 0; i < strLen; i++) {\n227: if ((Character.isWhitespace(cs.charAt(i)) == false)) {\n228: return false;\n232: }",
                                    "suspicious_rank": 0.204
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;",
                                    "method_body": "626: public static Float createFloat(String str) {\n627: if (str == null) {\n630: return Float.valueOf(str);\n631: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;",
                                    "method_body": "659: public static Integer createInteger(String str) {\n660: if (str == null) {\n664: return Integer.decode(str);\n665: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;",
                                    "method_body": "676: public static Long createLong(String str) {\n677: if (str == null) {\n680: return Long.valueOf(str);\n681: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isDigits(Ljava/lang/String;)Z",
                                    "method_body": "1286: public static boolean isDigits(String str) {\n1287: if (StringUtils.isEmpty(str)) {\n1290: for (int i = 0; i < str.length(); i++) {\n1291: if (!Character.isDigit(str.charAt(i))) {\n1295: return true;\n1296: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "604: private static boolean isAllZeros(String str) {\n605: if (str == null) {\n608: for (int i = str.length() - 1; i >= 0; i--) {\n609: if (str.charAt(i) != '0') {\n610: return false;\n614: }",
                                    "suspicious_rank": 0.577
                                }
                            ],
                            "stack_trace": "java.lang.NumberFormatException: 0Xfade is not a valid number.\nat org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:545)\nat org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:197)"
                        }
                    ]
                },
                {
                    "bug_id": 17,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.StringEscapeUtilsTest.testLang720",
                            "test_body": "428: public void testLang720() {\n429: String input = new StringBuilder(\"\\ud842\\udfb7\").append(\"A\").toString();\n430: String escaped = StringEscapeUtils.escapeXml(input);\n431: assertEquals(input, escaped);\n432: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.LookupTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "64: public int translate(CharSequence input, int index, Writer out) throws IOException {\n65: int max = longest;\n66: if (index + longest > input.length()) {\n70: for (int i = max; i >= shortest; i--) {\n71: CharSequence subSeq = input.subSequence(index, index + i);\n72: CharSequence result = lookupMap.get(subSeq);\n73: if (result != null) {\n78: return 0;\n79: }",
                                    "suspicious_rank": 0.243
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.AggregateTranslator:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "50: public int translate(CharSequence input, int index, Writer out) throws IOException {\n51: for (CharSequenceTranslator translator : translators) {\n52: int consumed = translator.translate(input, index, out);\n53: if(consumed != 0) {\n57: return 0;\n58: }",
                                    "suspicious_rank": 0.25
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
                                    "method_body": "46: public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\n54: if (input == null) {\n58: StringWriter writer = new StringWriter(input.length() * 2);\n59: translate(input, writer);\n60: return writer.toString();\n65: }",
                                    "suspicious_rank": 0.177
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
                                    "method_body": "75: public final void translate(CharSequence input, Writer out) throws IOException {\n76: if (out == null) {\n79: if (input == null) {\n82: int pos = 0;\n83: int len = Character.codePointCount(input, 0, input.length());\n84: while (pos < len) {\n85: int consumed = translate(input, pos, out);\n86: if (consumed == 0) {\n87: char[] c = Character.toChars(Character.codePointAt(input, pos));\n88: out.write(c);\n89: }\n102: pos++;\n103: }\n104: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringEscapeUtils:escapeXml(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "505: public static final String escapeXml(String input) {\n506: return ESCAPE_XML.translate(input);\n507: }",
                                    "suspicious_rank": 0.707
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<\ud842\udfb7[A]> but was:<\ud842\udfb7[?]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang3.StringEscapeUtilsTest.testLang720(StringEscapeUtilsTest.java:431)"
                        }
                    ]
                },
                {
                    "bug_id": 18,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateFormatTest.testFormat",
                            "test_body": "173: public void testFormat() {\n174: Locale realDefaultLocale = Locale.getDefault();\n175: TimeZone realDefaultZone = TimeZone.getDefault();\n176: try {\n177: Locale.setDefault(Locale.US);\n178: TimeZone.setDefault(TimeZone.getTimeZone(\"America/New_York\"));\n179: 180: GregorianCalendar cal1 = new GregorianCalendar(2003, 0, 10, 15, 33, 20);\n181: GregorianCalendar cal2 = new GregorianCalendar(2003, 6, 10, 9, 00, 00);\n182: Date date1 = cal1.getTime();\n183: Date date2 = cal2.getTime();\n184: long millis1 = date1.getTime();\n185: long millis2 = date2.getTime();\n186: 187: FastDateFormat fdf = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ss\");\n188: SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");\n189: assertEquals(sdf.format(date1), fdf.format(date1));\n190: assertEquals(\"2003-01-10T15:33:20\", fdf.format(date1));\n191: assertEquals(\"2003-01-10T15:33:20\", fdf.format(cal1));\n192: assertEquals(\"2003-01-10T15:33:20\", fdf.format(millis1));\n193: assertEquals(\"2003-07-10T09:00:00\", fdf.format(date2));\n194: assertEquals(\"2003-07-10T09:00:00\", fdf.format(cal2));\n195: assertEquals(\"2003-07-10T09:00:00\", fdf.format(millis2));\n196: 197: fdf = FastDateFormat.getInstance(\"Z\");\n198: assertEquals(\"-0500\", fdf.format(date1));\n199: assertEquals(\"-0500\", fdf.format(cal1));\n200: assertEquals(\"-0500\", fdf.format(millis1));\n201: 202: assertEquals(\"-0400\", fdf.format(date2));\n203: assertEquals(\"-0400\", fdf.format(cal2));\n204: assertEquals(\"-0400\", fdf.format(millis2));\n205: 206: fdf = FastDateFormat.getInstance(\"ZZ\");\n207: assertEquals(\"-05:00\", fdf.format(date1));\n208: assertEquals(\"-05:00\", fdf.format(cal1));\n209: assertEquals(\"-05:00\", fdf.format(millis1));\n210: 211: assertEquals(\"-04:00\", fdf.format(date2));\n212: assertEquals(\"-04:00\", fdf.format(cal2));\n213: assertEquals(\"-04:00\", fdf.format(millis2));\n214: 215: String pattern = \"GGGG GGG GG G yyyy yyy yy y MMMM MMM MM M\" +\n216: \" dddd ddd dd d DDDD DDD DD D EEEE EEE EE E aaaa aaa aa a zzzz zzz zz z\";\n217: fdf = FastDateFormat.getInstance(pattern);\n218: sdf = new SimpleDateFormat(pattern);\n219: // SDF bug fix starting with Java 7\n220: assertEquals(sdf.format(date1).replaceAll(\"2003 03 03 03\", \"2003 2003 03 2003\"), fdf.format(date1));\n221: assertEquals(sdf.format(date2).replaceAll(\"2003 03 03 03\", \"2003 2003 03 2003\"), fdf.format(date2));\n222: } finally {\n223: Locale.setDefault(realDefaultLocale);\n224: TimeZone.setDefault(realDefaultZone);\n225: }\n226: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getTimeZoneDisplay(Ljava/util/TimeZone;ZILjava/util/Locale;)Ljava/lang/String;",
                                    "method_body": "408: static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale) {\n409: TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);\n410: String value = cTimeZoneDisplayCache.get(key);\n411: if (value == null) {\n413: value = tz.getDisplayName(daylight, style, locale);\n414: String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);\n415: if (prior != null) {\n419: return value;\n420: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$UnpaddedNumberField:<init>(I)V",
                                    "method_body": "1038: UnpaddedNumberField(int field) {\n1039: mField = field;\n1040: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:selectNumberRule(II)Lorg/apache/commons/lang3/time/FastDateFormat$NumberRule;",
                                    "method_body": "652: protected NumberRule selectNumberRule(int field, int padding) {\n653: switch (padding) {\n655: return new UnpaddedNumberField(field);\n657: return new TwoDigitNumberField(field);\n659: return new PaddedNumberField(field, padding);\n661: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:<init>(II)V",
                                    "method_body": "1125: PaddedNumberField(int field, int size) {\n1126: if (size < 3) {\n1130: mField = field;\n1131: mSize = size;\n1132: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "158: public static FastDateFormat getInstance(String pattern) {\n159: return cache.getInstance(pattern, null, null);\n160: }",
                                    "suspicious_rank": 0.156
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneNumberRule:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1442: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1443: int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);\n1445: if (offset < 0) {\n1446: buffer.append('-');\n1447: offset = -offset;\n1452: int hours = offset / (60 * 60 * 1000);\n1453: buffer.append((char)(hours / 10 + '0'));\n1454: buffer.append((char)(hours % 10 + '0'));\n1456: if (mColon) {\n1457: buffer.append(':');\n1460: int minutes = offset / (60 * 1000) - 60 * hours;\n1461: buffer.append((char)(minutes / 10 + '0'));\n1462: buffer.append((char)(minutes % 10 + '0'));\n1463: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TextField:estimateLength()I",
                                    "method_body": "1008: public int estimateLength() {\n1009: int max = 0;\n1010: for (int i=mValues.length; --i >= 0; ) {\n1011: int len = mValues[i].length();\n1012: if (len > max) {\n1013: max = len;\n1015: }\n1016: return max;\n1017: }",
                                    "suspicious_rank": 0.162
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$1:createInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "109: protected FastDateFormat createInstance(String pattern,    TimeZone timeZone, Locale locale) {\n110: return new FastDateFormat(pattern, timeZone, locale);\n111: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:<init>([Ljava/lang/Object;)V",
                                    "method_body": "166: public MultipartKey(Object... keys) {\n167: this.keys = keys;\n168: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "756: public StringBuffer format(Calendar calendar, StringBuffer buf) {\n757: return applyRules(calendar, buf);\n758: }",
                                    "suspicious_rank": 0.169
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "921: void appendTo(StringBuffer buffer, int value);\n936: CharacterLiteral(char value) {\n937: mValue = value;\n938: }\n944: return 1;\n951: buffer.append(mValue);\n952: }\n953: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1246: public final void appendTo(StringBuffer buffer, int value) {\n1247: buffer.append((char)(value / 10 + '0'));\n1248: buffer.append((char)(value % 10 + '0'));\n1249: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/text/Format;",
                                    "method_body": "69: public F getInstance(String pattern, TimeZone timeZone, Locale locale) {\n70: if (pattern == null) {\n73: if (timeZone == null) {\n74: timeZone = TimeZone.getDefault();\n76: if (locale == null) {\n77: locale = Locale.getDefault();\n79: MultipartKey key = new MultipartKey(pattern, timeZone, locale);\n80: F format = cInstanceCache.get(key);\n81: if (format == null) {\n82: format = createInstance(pattern, timeZone, locale);\n83: F previousValue= cInstanceCache.putIfAbsent(key, format);\n84: if (previousValue != null) {\n90: return format;\n91: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.Validate:isTrue(ZLjava/lang/String;J)V",
                                    "method_body": "105: public static void isTrue(boolean expression, String message, long value) {\n106: if (expression == false) {\n109: }",
                                    "suspicious_rank": 0.164
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1275: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1276: appendTo(buffer, calendar.get(Calendar.MONTH) + 1);\n1277: }",
                                    "suspicious_rank": 0.174
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:estimateLength()I",
                                    "method_body": "1137: public int estimateLength() {\n1138: return 4;\n1139: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1282: public final void appendTo(StringBuffer buffer, int value) {\n1283: buffer.append((char)(value / 10 + '0'));\n1284: buffer.append((char)(value % 10 + '0'));\n1285: }",
                                    "suspicious_rank": 0.174
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$UnpaddedMonthField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1095: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1096: appendTo(buffer, calendar.get(Calendar.MONTH) + 1);\n1097: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey:equals(Ljava/lang/Object;)Z",
                                    "method_body": "1505: public boolean equals(Object obj) {\n1506: if (this == obj) {\n1509: if (obj instanceof TimeZoneDisplayKey) {\n1510: TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;\n1511: return\n1517: }",
                                    "suspicious_rank": 1.0
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneNameRule:<init>(Ljava/util/TimeZone;Ljava/util/Locale;I)V",
                                    "method_body": "1387: TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {\n1388: mTimeZone = timeZone;\n1390: mStandard = getTimeZoneDisplay(timeZone, false, style, locale);\n1391: mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);\n1392: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral:estimateLength()I",
                                    "method_body": "921: void appendTo(StringBuffer buffer, int value);\n936: CharacterLiteral(char value) {\n937: mValue = value;\n938: }\n944: return 1;\n951: buffer.append(mValue);\n952: }\n953: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$UnpaddedNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1059: public final void appendTo(StringBuffer buffer, int value) {\n1060: if (value < 10) {\n1062: } else if (value < 100) {\n1063: buffer.append((char)(value / 10 + '0'));\n1064: buffer.append((char)(value % 10 + '0'));\n1068: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TextField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1022: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1023: buffer.append(mValues[calendar.get(mField)]);\n1024: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneNameRule:estimateLength()I",
                                    "method_body": "1397: public int estimateLength() {\n1398: return Math.max(mStandard.length(), mDaylight.length());\n1399: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneNameRule:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1404: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1405: if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {\n1408: buffer.append(mStandard);\n1410: }",
                                    "suspicious_rank": 1.0
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField:estimateLength()I",
                                    "method_body": "1268: public int estimateLength() {\n1269: return 2;\n1270: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Calendar;)Ljava/lang/String;",
                                    "method_body": "717: public String format(Calendar calendar) {\n718: return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();\n719: }",
                                    "suspicious_rank": 0.169
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$UnpaddedNumberField:estimateLength()I",
                                    "method_body": "1045: public int estimateLength() {\n1046: return 4;\n1047: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral:<init>(C)V",
                                    "method_body": "921: void appendTo(StringBuffer buffer, int value);\n936: CharacterLiteral(char value) {\n937: mValue = value;\n938: }\n944: return 1;\n951: buffer.append(mValue);\n952: }\n953: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1239: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1240: appendTo(buffer, calendar.get(Calendar.YEAR) % 100);\n1241: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:estimateLength()I",
                                    "method_body": "1192: public int estimateLength() {\n1193: return 2;\n1194: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$UnpaddedMonthField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1102: public final void appendTo(StringBuffer buffer, int value) {\n1103: if (value < 10) {\n1104: buffer.append((char)(value + '0'));\n1109: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField:estimateLength()I",
                                    "method_body": "1232: public int estimateLength() {\n1233: return 2;\n1234: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey:hashCode()I",
                                    "method_body": "1497: public int hashCode() {\n1498: return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();\n1499: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "432: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n433: mPattern = pattern;\n434: mTimeZone = timeZone;\n435: mLocale = locale;\n437: init();\n438: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1206: public final void appendTo(StringBuffer buffer, int value) {\n1207: if (value < 100) {\n1208: buffer.append((char)(value / 10 + '0'));\n1209: buffer.append((char)(value % 10 + '0'));\n1213: }",
                                    "suspicious_rank": 0.164
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1151: public final void appendTo(StringBuffer buffer, int value) {\n1152: if (value < 100) {\n1153: for (int i = mSize; --i >= 2; ) {\n1154: buffer.append('0');\n1156: buffer.append((char)(value / 10 + '0'));\n1157: buffer.append((char)(value % 10 + '0'));\n1160: if (value < 1000) {\n1163: Validate.isTrue(value > -1, \"Negative values should not be possible\", value);\n1164: digits = Integer.toString(value).length();\n1166: for (int i = mSize; --i >= digits; ) {\n1169: buffer.append(Integer.toString(value));\n1171: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey:<init>(Ljava/util/TimeZone;ZILjava/util/Locale;)V",
                                    "method_body": "1483: TimeZoneDisplayKey(TimeZone timeZone,\n1484: boolean daylight, int style, Locale locale) {\n1485: mTimeZone = timeZone;\n1486: if (daylight) {\n1487: style |= 0x80000000;\n1489: mStyle = style;\n1490: mLocale = locale;\n1491: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(J)Ljava/lang/String;",
                                    "method_body": "695: public String format(long millis) {\n696: return format(new Date(millis));\n697: }",
                                    "suspicious_rank": 1.0
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$UnpaddedNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1052: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1053: appendTo(buffer, calendar.get(mField));\n1054: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:<init>(I)V",
                                    "method_body": "1185: TwoDigitNumberField(int field) {\n1186: mField = field;\n1187: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:applyRules(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "768: protected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {\n769: for (Rule rule : mRules) {\n770: rule.appendTo(buf, calendar);\n772: return buf;\n773: }",
                                    "suspicious_rank": 0.16
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TimeZoneNumberRule:estimateLength()I",
                                    "method_body": "1435: public int estimateLength() {\n1436: return 5;\n1437: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1199: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1200: appendTo(buffer, calendar.get(mField));\n1201: }",
                                    "suspicious_rank": 0.164
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField:<init>()V",
                                    "method_body": "1225: TwoDigitYearField() {\n1226: super();\n1227: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$UnpaddedMonthField:estimateLength()I",
                                    "method_body": "1088: public int estimateLength() {\n1089: return 2;\n1090: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TextField:<init>(I[Ljava/lang/String;)V",
                                    "method_body": "1000: TextField(int field, String[] values) {\n1001: mField = field;\n1002: mValues = values;\n1003: }",
                                    "suspicious_rank": 0.162
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:init()V",
                                    "method_body": "443: private void init() {\n444: List<Rule> rulesList = parsePattern();\n445: mRules = rulesList.toArray(new Rule[rulesList.size()]);\n447: int len = 0;\n448: for (int i=mRules.length; --i >= 0; ) {\n449: len += mRules[i].estimateLength();\n452: mMaxLengthEstimate = len;\n453: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parseToken(Ljava/lang/String;[I)Ljava/lang/String;",
                                    "method_body": "593: protected String parseToken(String pattern, int[] indexRef) {\n594: StringBuilder buf = new StringBuilder();\n596: int i = indexRef[0];\n597: int length = pattern.length();\n599: char c = pattern.charAt(i);\n600: if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {\n603: buf.append(c);\n605: while (i + 1 < length) {\n606: char peek = pattern.charAt(i + 1);\n607: if (peek == c) {\n608: buf.append(c);\n609: i++;\n613: }\n616: buf.append('\\'');\n618: boolean inLiteral = false;\n620: for (; i < length; i++) {\n621: c = pattern.charAt(i);\n623: if (c == '\\'') {\n624: if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {\n629: inLiteral = !inLiteral;\n631: } else if (!inLiteral &&\n633: i--;\n634: break;\n636: buf.append(c);\n641: indexRef[0] = i;\n642: return buf.toString();\n643: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField:<clinit>()V",
                                    "method_body": "1220: static final TwoDigitYearField INSTANCE = new TwoDigitYearField();\n1223: * Constructs an instance of {@code TwoDigitYearField}.",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1144: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1145: appendTo(buffer, calendar.get(mField));\n1146: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Date;)Ljava/lang/String;",
                                    "method_body": "705: public String format(Date date) {\n706: Calendar c = new GregorianCalendar(mTimeZone, mLocale);  // hard code GregorianCalendar\n707: c.setTime(date);\n708: return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n709: }",
                                    "suspicious_rank": 0.174
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:hashCode()I",
                                    "method_body": "188: public int hashCode() {\n189: if(hashCode==0) {\n190: int rc= 0;\n191: for(Object key : keys) {\n192: if(key!=null) {\n193: rc= rc*7 + key.hashCode();\n196: hashCode= rc;\n198: return hashCode;\n199: }",
                                    "suspicious_rank": 0.144
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parsePattern()Ljava/util/List;",
                                    "method_body": "463: protected List<Rule> parsePattern() {\n464: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n465: List<Rule> rules = new ArrayList<Rule>();\n467: String[] ERAs = symbols.getEras();\n468: String[] months = symbols.getMonths();\n469: String[] shortMonths = symbols.getShortMonths();\n470: String[] weekdays = symbols.getWeekdays();\n471: String[] shortWeekdays = symbols.getShortWeekdays();\n472: String[] AmPmStrings = symbols.getAmPmStrings();\n474: int length = mPattern.length();\n475: int[] indexRef = new int[1];\n477: for (int i = 0; i < length; i++) {\n478: indexRef[0] = i;\n479: String token = parseToken(mPattern, indexRef);\n480: i = indexRef[0];\n482: int tokenLen = token.length();\n483: if (tokenLen == 0) {\n488: char c = token.charAt(0);\n490: switch (c) {\n492: rule = new TextField(Calendar.ERA, ERAs);\n493: break;\n495: if (tokenLen >= 4) {\n496: rule = selectNumberRule(Calendar.YEAR, tokenLen);\n498: rule = TwoDigitYearField.INSTANCE;\n500: break;\n502: if (tokenLen >= 4) {\n503: rule = new TextField(Calendar.MONTH, months);\n504: } else if (tokenLen == 3) {\n505: rule = new TextField(Calendar.MONTH, shortMonths);\n506: } else if (tokenLen == 2) {\n507: rule = TwoDigitMonthField.INSTANCE;\n509: rule = UnpaddedMonthField.INSTANCE;\n511: break;\n513: rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n514: break;\n519: rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);\n520: break;\n522: rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n523: break;\n525: rule = selectNumberRule(Calendar.SECOND, tokenLen);\n526: break;\n531: rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n532: break;\n534: rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);\n535: break;\n546: rule = new TextField(Calendar.AM_PM, AmPmStrings);\n547: break;\n555: if (tokenLen >= 4) {\n556: rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);\n558: rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);\n560: break;\n562: if (tokenLen == 1) {\n563: rule = TimeZoneNumberRule.INSTANCE_NO_COLON;\n565: rule = TimeZoneNumberRule.INSTANCE_COLON;\n567: break;\n569: String sub = token.substring(1);\n570: if (sub.length() == 1) {\n571: rule = new CharacterLiteral(sub.charAt(0));\n580: rules.add(rule);\n583: return rules;\n584: }",
                                    "suspicious_rank": 0.144
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<AD AD AD AD 2003 [2003 03 20]03 January Jan 01 1 ...> but was:<AD AD AD AD 2003 [03 03 ]03 January Jan 01 1 ...>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang3.time.FastDateFormatTest.testFormat(FastDateFormatTest.java:220)"
                        }
                    ]
                },
                {
                    "bug_id": 19,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds",
                            "test_body": "37: public void testOutOfBounds() {\n38: NumericEntityUnescaper neu = new NumericEntityUnescaper();\n39: 40: assertEquals(\"Failed to ignore when last character is &\", \"Test &\", neu.translate(\"Test &\"));\n41: assertEquals(\"Failed to ignore when last character is &\", \"Test &#\", neu.translate(\"Test &#\"));\n42: assertEquals(\"Failed to ignore when last character is &\", \"Test &#x\", neu.translate(\"Test &#x\"));\n43: assertEquals(\"Failed to ignore when last character is &\", \"Test &#X\", neu.translate(\"Test &#X\"));\n44: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "37: public int translate(CharSequence input, int index, Writer out) throws IOException {\n38: int seqEnd = input.length();\n40: if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {\n41: int start = index + 2;\n42: boolean isHex = false;\n44: char firstChar = input.charAt(start);\n45: if(firstChar == 'x' || firstChar == 'X') {\n46: start++;\n47: isHex = true;\n52: int end = start;\n54: while(input.charAt(end) != ';')\n56: end++;\n82: return 0;\n83: }",
                                    "suspicious_rank": 0.426
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
                                    "method_body": "46: public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\n54: if (input == null) {\n58: StringWriter writer = new StringWriter(input.length() * 2);\n59: translate(input, writer);\n60: return writer.toString();\n65: }",
                                    "suspicious_rank": 0.258
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
                                    "method_body": "75: public final void translate(CharSequence input, Writer out) throws IOException {\n76: if (out == null) {\n79: if (input == null) {\n82: int sz = Character.codePointCount(input, 0, input.length());\n83: for (int i = 0; i < sz; i++) {\n86: int consumed = translate(input, i, out);\n88: if (consumed == 0) {\n89: out.write(Character.toChars(Character.codePointAt(input, i)));\n105: }",
                                    "suspicious_rank": 0.25
                                }
                            ],
                            "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 7\nat java.lang.String.charAt(String.java:658)\nat org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(NumericEntityUnescaper.java:44)\nat org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:86)\nat org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:59)\nat org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds(NumericEntityUnescaperTest.java:41)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity",
                            "test_body": "46: public void testUnfinishedEntity() {\n47: NumericEntityUnescaper neu = new NumericEntityUnescaper();\n48: String input = \"Test &#x30 not test\";\n49: String expected = \"Test \\u0030 not test\";\n50: 51: String result = neu.translate(input);\n52: assertEquals(\"Failed to support unfinished entities (i.e. missing semi-colon\", expected, result);\n53: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "37: public int translate(CharSequence input, int index, Writer out) throws IOException {\n38: int seqEnd = input.length();\n40: if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {\n41: int start = index + 2;\n42: boolean isHex = false;\n44: char firstChar = input.charAt(start);\n45: if(firstChar == 'x' || firstChar == 'X') {\n46: start++;\n47: isHex = true;\n52: int end = start;\n54: while(input.charAt(end) != ';')\n56: end++;\n82: return 0;\n83: }",
                                    "suspicious_rank": 0.426
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
                                    "method_body": "46: public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\n54: if (input == null) {\n58: StringWriter writer = new StringWriter(input.length() * 2);\n59: translate(input, writer);\n60: return writer.toString();\n65: }",
                                    "suspicious_rank": 0.258
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
                                    "method_body": "75: public final void translate(CharSequence input, Writer out) throws IOException {\n76: if (out == null) {\n79: if (input == null) {\n82: int sz = Character.codePointCount(input, 0, input.length());\n83: for (int i = 0; i < sz; i++) {\n86: int consumed = translate(input, i, out);\n88: if (consumed == 0) {\n89: out.write(Character.toChars(Character.codePointAt(input, i)));\n105: }",
                                    "suspicious_rank": 0.25
                                }
                            ],
                            "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 19\nat java.lang.String.charAt(String.java:658)\nat org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(NumericEntityUnescaper.java:54)\nat org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:86)\nat org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:59)\nat org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity(NumericEntityUnescaperTest.java:51)"
                        }
                    ]
                },
                {
                    "bug_id": 20,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray",
                            "test_body": "184: public void testJoin_Objectarray() {\n185: //        assertEquals(null, StringUtils.join(null)); // generates warning\n186: assertEquals(null, StringUtils.join((Object[]) null)); // equivalent explicit cast\n187: // test additional varargs calls\n188: assertEquals(\"\", StringUtils.join()); // empty array\n189: assertEquals(\"\", StringUtils.join((Object) null)); // => new Object[]{null}\n190: 191: assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST));\n192: assertEquals(\"\", StringUtils.join(NULL_ARRAY_LIST));\n193: assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST));\n194: assertEquals(\"abc\", StringUtils.join(new String[] {\"a\", \"b\", \"c\"}));\n195: assertEquals(\"a\", StringUtils.join(new String[] {null, \"a\", \"\"}));\n196: assertEquals(\"foo\", StringUtils.join(MIXED_ARRAY_LIST));\n197: assertEquals(\"foo2\", StringUtils.join(MIXED_TYPE_LIST));\n198: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "3229: public static <T> String join(T... elements) {\n3230: return join(elements, null);\n3231: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "3334: public static String join(Object[] array, String separator) {\n3335: if (array == null) {\n3336: return null;\n3338: return join(array, separator, 0, array.length);\n3339: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;",
                                    "method_body": "3368: public static String join(Object[] array, String separator, int startIndex, int endIndex) {\n3369: if (array == null) {\n3372: if (separator == null) {\n3373: separator = EMPTY;\n3378: int noOfItems = (endIndex - startIndex);\n3379: if (noOfItems <= 0) {\n3380: return EMPTY;\n3383: StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());\n3385: for (int i = startIndex; i < endIndex; i++) {\n3386: if (i > startIndex) {\n3389: if (array[i] != null) {\n3393: return buf.toString();\n3394: }",
                                    "suspicious_rank": 0.354
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3383)\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3338)\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3230)\nat org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray(StringUtilsTest.java:193)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayChar",
                            "test_body": "200: public void testJoin_ArrayChar() {\n201: assertEquals(null, StringUtils.join((Object[]) null, ','));\n202: assertEquals(TEXT_LIST_CHAR, StringUtils.join(ARRAY_LIST, SEPARATOR_CHAR));\n203: assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST, SEPARATOR_CHAR));\n204: assertEquals(\";;foo\", StringUtils.join(MIXED_ARRAY_LIST, SEPARATOR_CHAR));\n205: assertEquals(\"foo;2\", StringUtils.join(MIXED_TYPE_LIST, SEPARATOR_CHAR));\n206: 207: assertEquals(\"/\", StringUtils.join(MIXED_ARRAY_LIST, '/', 0, MIXED_ARRAY_LIST.length-1));\n208: assertEquals(\"foo\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 1));\n209: assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST,'/', 0, 1));\n210: assertEquals(\"foo/2\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 2));\n211: assertEquals(\"2\", StringUtils.join(MIXED_TYPE_LIST, '/', 1, 2));\n212: assertEquals(\"\", StringUtils.join(MIXED_TYPE_LIST, '/', 2, 1));\n213: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;C)Ljava/lang/String;",
                                    "method_body": "3255: public static String join(Object[] array, char separator) {\n3256: if (array == null) {\n3257: return null;\n3260: return join(array, separator, 0, array.length);\n3261: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;CII)Ljava/lang/String;",
                                    "method_body": "3289: public static String join(Object[] array, char separator, int startIndex, int endIndex) {\n3290: if (array == null) {\n3293: int noOfItems = (endIndex - startIndex);\n3294: if (noOfItems <= 0) {\n3295: return EMPTY;\n3298: StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);\n3300: for (int i = startIndex; i < endIndex; i++) {\n3301: if (i > startIndex) {\n3302: buf.append(separator);\n3304: if (array[i] != null) {\n3305: buf.append(array[i]);\n3308: return buf.toString();\n3309: }",
                                    "suspicious_rank": 0.5
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3298)\nat org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayChar(StringUtilsTest.java:209)"
                        }
                    ]
                },
                {
                    "bug_id": 21,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal",
                            "test_body": "222: public void testIsSameLocalTime_Cal() {\n223: GregorianCalendar cal1 = new GregorianCalendar(TimeZone.getTimeZone(\"GMT+1\"));\n224: GregorianCalendar cal2 = new GregorianCalendar(TimeZone.getTimeZone(\"GMT-1\"));\n225: cal1.set(2004, 6, 9, 13, 45, 0);\n226: cal1.set(Calendar.MILLISECOND, 0);\n227: cal2.set(2004, 6, 9, 13, 45, 0);\n228: cal2.set(Calendar.MILLISECOND, 0);\n229: assertEquals(true, DateUtils.isSameLocalTime(cal1, cal2));\n230: 231: Calendar cal3 = Calendar.getInstance();\n232: Calendar cal4 = Calendar.getInstance();\n233: cal3.set(2004, 6, 9, 4,  0, 0);\n234: cal4.set(2004, 6, 9, 16, 0, 0);\n235: cal3.set(Calendar.MILLISECOND, 0);\n236: cal4.set(Calendar.MILLISECOND, 0);\n237: assertFalse(\"LANG-677\", DateUtils.isSameLocalTime(cal3, cal4));\n238: 239: cal2.set(2004, 6, 9, 11, 45, 0);\n240: assertEquals(false, DateUtils.isSameLocalTime(cal1, cal2));\n241: try {\n242: DateUtils.isSameLocalTime((Calendar) null, (Calendar) null);\n243: fail();\n244: } catch (IllegalArgumentException ex) {}\n245: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.DateUtils:isSameLocalTime(Ljava/util/Calendar;Ljava/util/Calendar;)Z",
                                    "method_body": "258: public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n259: if (cal1 == null || cal2 == null) {\n262: return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&\n270: }",
                                    "suspicious_rank": 1.0
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: LANG-677\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertFalse(Assert.java:39)\nat junit.framework.TestCase.assertFalse(TestCase.java:210)\nat org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal(DateUtilsTest.java:237)"
                        }
                    ]
                },
                {
                    "bug_id": 22,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.FractionTest.testReduce",
                            "test_body": "610: public void testReduce() {\n611: Fraction f = null;\n612: 613: f = Fraction.getFraction(50, 75);\n614: Fraction result = f.reduce();\n615: assertEquals(2, result.getNumerator());\n616: assertEquals(3, result.getDenominator());\n617: 618: f = Fraction.getFraction(-2, -3);\n619: result = f.reduce();\n620: assertEquals(2, result.getNumerator());\n621: assertEquals(3, result.getDenominator());\n622: 623: f = Fraction.getFraction(2, -3);\n624: result = f.reduce();\n625: assertEquals(-2, result.getNumerator());\n626: assertEquals(3, result.getDenominator());\n627: 628: f = Fraction.getFraction(-2, 3);\n629: result = f.reduce();\n630: assertEquals(-2, result.getNumerator());\n631: assertEquals(3, result.getDenominator());\n632: assertSame(f, result);\n633: 634: f = Fraction.getFraction(2, 3);\n635: result = f.reduce();\n636: assertEquals(2, result.getNumerator());\n637: assertEquals(3, result.getDenominator());\n638: assertSame(f, result);\n639: 640: f = Fraction.getFraction(0, 1);\n641: result = f.reduce();\n642: assertEquals(0, result.getNumerator());\n643: assertEquals(1, result.getDenominator());\n644: assertSame(f, result);\n645: 646: f = Fraction.getFraction(0, 100);\n647: result = f.reduce();\n648: assertEquals(0, result.getNumerator());\n649: assertEquals(1, result.getDenominator());\n650: assertSame(result, Fraction.ZERO);\n651: 652: f = Fraction.getFraction(Integer.MIN_VALUE, 2);\n653: result = f.reduce();\n654: assertEquals(Integer.MIN_VALUE / 2, result.getNumerator());\n655: assertEquals(1, result.getDenominator());\n656: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:<init>(II)V",
                                    "method_body": "47: private static final long serialVersionUID = 65382027393090L;\n111: private transient int hashCode = 0;\n115: private transient String toString = null;\n119: private transient String toProperString = null;\n129: super();\n130: this.numerator = numerator;\n131: this.denominator = denominator;\n132: }",
                                    "suspicious_rank": 0.283
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:getDenominator()I",
                                    "method_body": "381: public int getDenominator() {\n382: return denominator;\n383: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:getNumerator()I",
                                    "method_body": "372: public int getNumerator() {\n373: return numerator;\n374: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:getFraction(II)Lorg/apache/commons/lang3/math/Fraction;",
                                    "method_body": "146: public static Fraction getFraction(int numerator, int denominator) {\n147: if (denominator == 0) {\n150: if (denominator < 0) {\n151: if (numerator==Integer.MIN_VALUE ||\n155: numerator = -numerator;\n156: denominator = -denominator;\n158: return new Fraction(numerator, denominator);\n159: }",
                                    "suspicious_rank": 0.177
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:greatestCommonDivisor(II)I",
                                    "method_body": "581: private static int greatestCommonDivisor(int u, int v) {\n584: if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {\n585: return 1;\n591: if (u>0) { u=-u; } // make u negative\n592: if (v>0) { v=-v; } // make v negative\n594: int k=0;\n595: while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...\n596: u/=2; v/=2; k++; // cast out twos.\n598: if (k==31) {\n603: int t = ((u&1)==1) ? v : -(u/2)/*B3*/;\n609: while ((t&1)==0) { // while t is even..\n610: t/=2; // cast out twos\n613: if (t>0) {\n614: u = -t;\n616: v = t;\n619: t = (v - u)/2;\n622: } while (t!=0);\n623: return -u*(1<<k); // gcd is u*2^k\n624: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:reduce()Lorg/apache/commons/lang3/math/Fraction;",
                                    "method_body": "474: public Fraction reduce() {\n475: if (numerator == 0) {\n476: return equals(ZERO) ? this : ZERO;\n478: int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n479: if (gcd == 1) {\n480: return this;\n482: return Fraction.getFraction(numerator / gcd, denominator / gcd);\n483: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:equals(Ljava/lang/Object;)Z",
                                    "method_body": "843: public boolean equals(Object obj) {\n844: if (obj == this) {\n847: if (obj instanceof Fraction == false) {\n850: Fraction other = (Fraction) obj;\n851: return (getNumerator() == other.getNumerator() &&\n853: }",
                                    "suspicious_rank": 0.408
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<-1073741824> but was:<-2147483648>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang3.math.FractionTest.testReduce(FractionTest.java:654)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int",
                            "test_body": "250: public void testReducedFactory_int_int() {\n251: Fraction f = null;\n252: 253: // zero\n254: f = Fraction.getReducedFraction(0, 1);\n255: assertEquals(0, f.getNumerator());\n256: assertEquals(1, f.getDenominator());\n257: 258: // normal\n259: f = Fraction.getReducedFraction(1, 1);\n260: assertEquals(1, f.getNumerator());\n261: assertEquals(1, f.getDenominator());\n262: 263: f = Fraction.getReducedFraction(2, 1);\n264: assertEquals(2, f.getNumerator());\n265: assertEquals(1, f.getDenominator());\n266: 267: // improper\n268: f = Fraction.getReducedFraction(22, 7);\n269: assertEquals(22, f.getNumerator());\n270: assertEquals(7, f.getDenominator());\n271: 272: // negatives\n273: f = Fraction.getReducedFraction(-6, 10);\n274: assertEquals(-3, f.getNumerator());\n275: assertEquals(5, f.getDenominator());\n276: 277: f = Fraction.getReducedFraction(6, -10);\n278: assertEquals(-3, f.getNumerator());\n279: assertEquals(5, f.getDenominator());\n280: 281: f = Fraction.getReducedFraction(-6, -10);\n282: assertEquals(3, f.getNumerator());\n283: assertEquals(5, f.getDenominator());\n284: 285: // zero denominator\n286: try {\n287: f = Fraction.getReducedFraction(1, 0);\n288: fail(\"expecting ArithmeticException\");\n289: } catch (ArithmeticException ex) {}\n290: 291: try {\n292: f = Fraction.getReducedFraction(2, 0);\n293: fail(\"expecting ArithmeticException\");\n294: } catch (ArithmeticException ex) {}\n295: 296: try {\n297: f = Fraction.getReducedFraction(-3, 0);\n298: fail(\"expecting ArithmeticException\");\n299: } catch (ArithmeticException ex) {}\n300: 301: // reduced        \n302: f = Fraction.getReducedFraction(0, 2);\n303: assertEquals(0, f.getNumerator());\n304: assertEquals(1, f.getDenominator());\n305: 306: f = Fraction.getReducedFraction(2, 2);\n307: assertEquals(1, f.getNumerator());\n308: assertEquals(1, f.getDenominator());\n309: 310: f = Fraction.getReducedFraction(2, 4);\n311: assertEquals(1, f.getNumerator());\n312: assertEquals(2, f.getDenominator());\n313: 314: f = Fraction.getReducedFraction(15, 10);\n315: assertEquals(3, f.getNumerator());\n316: assertEquals(2, f.getDenominator());\n317: 318: f = Fraction.getReducedFraction(121, 22);\n319: assertEquals(11, f.getNumerator());\n320: assertEquals(2, f.getDenominator());\n321: 322: // Extreme values \n323: // OK, can reduce before negating\n324: f = Fraction.getReducedFraction(-2, Integer.MIN_VALUE);\n325: assertEquals(1, f.getNumerator());\n326: assertEquals(-(Integer.MIN_VALUE / 2), f.getDenominator());\n327: 328: // Can't reduce, negation will throw\n329: try { \n330: f = Fraction.getReducedFraction(-7, Integer.MIN_VALUE);  \n331: fail(\"Expecting ArithmeticException\");\n332: } catch (ArithmeticException ex) {}      \n333: 334: // LANG-662\n335: f = Fraction.getReducedFraction(Integer.MIN_VALUE, 2);\n336: assertEquals(Integer.MIN_VALUE / 2, f.getNumerator());\n337: assertEquals(1, f.getDenominator());\n338: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:<init>(II)V",
                                    "method_body": "47: private static final long serialVersionUID = 65382027393090L;\n111: private transient int hashCode = 0;\n115: private transient String toString = null;\n119: private transient String toProperString = null;\n129: super();\n130: this.numerator = numerator;\n131: this.denominator = denominator;\n132: }",
                                    "suspicious_rank": 0.283
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:getReducedFraction(II)Lorg/apache/commons/lang3/math/Fraction;",
                                    "method_body": "214: public static Fraction getReducedFraction(int numerator, int denominator) {\n215: if (denominator == 0) {\n216: throw new ArithmeticException(\"The denominator must not be zero\");\n218: if (numerator==0) {\n219: return ZERO; // normalize zero.\n222: if (denominator==Integer.MIN_VALUE && (numerator&1)==0) {\n223: numerator/=2; denominator/=2;\n225: if (denominator < 0) {\n226: if (numerator==Integer.MIN_VALUE ||\n228: throw new ArithmeticException(\"overflow: can't negate\");\n230: numerator = -numerator;\n231: denominator = -denominator;\n234: int gcd = greatestCommonDivisor(numerator, denominator);\n235: numerator /= gcd;\n236: denominator /= gcd;\n237: return new Fraction(numerator, denominator);\n238: }",
                                    "suspicious_rank": 0.267
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:getDenominator()I",
                                    "method_body": "381: public int getDenominator() {\n382: return denominator;\n383: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:getNumerator()I",
                                    "method_body": "372: public int getNumerator() {\n373: return numerator;\n374: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.Fraction:greatestCommonDivisor(II)I",
                                    "method_body": "581: private static int greatestCommonDivisor(int u, int v) {\n584: if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {\n585: return 1;\n591: if (u>0) { u=-u; } // make u negative\n592: if (v>0) { v=-v; } // make v negative\n594: int k=0;\n595: while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...\n596: u/=2; v/=2; k++; // cast out twos.\n598: if (k==31) {\n603: int t = ((u&1)==1) ? v : -(u/2)/*B3*/;\n609: while ((t&1)==0) { // while t is even..\n610: t/=2; // cast out twos\n613: if (t>0) {\n614: u = -t;\n616: v = t;\n619: t = (v - u)/2;\n622: } while (t!=0);\n623: return -u*(1<<k); // gcd is u*2^k\n624: }",
                                    "suspicious_rank": 0.447
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<-1073741824> but was:<-2147483648>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int(FractionTest.java:336)"
                        }
                    ]
                },
                {
                    "bug_id": 24,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber",
                            "test_body": "1005: public void testIsNumber() {\n1006: String val = \"12345\";\n1007: assertTrue(\"isNumber(String) 1 failed\", NumberUtils.isNumber(val));\n1008: assertTrue(\"isNumber(String)/createNumber(String) 1 failed\", checkCreateNumber(val));\n1009: val = \"1234.5\";\n1010: assertTrue(\"isNumber(String) 2 failed\", NumberUtils.isNumber(val));\n1011: assertTrue(\"isNumber(String)/createNumber(String) 2 failed\", checkCreateNumber(val));\n1012: val = \".12345\";\n1013: assertTrue(\"isNumber(String) 3 failed\", NumberUtils.isNumber(val));\n1014: assertTrue(\"isNumber(String)/createNumber(String) 3 failed\", checkCreateNumber(val));\n1015: val = \"1234E5\";\n1016: assertTrue(\"isNumber(String) 4 failed\", NumberUtils.isNumber(val));\n1017: assertTrue(\"isNumber(String)/createNumber(String) 4 failed\", checkCreateNumber(val));\n1018: val = \"1234E+5\";\n1019: assertTrue(\"isNumber(String) 5 failed\", NumberUtils.isNumber(val));\n1020: assertTrue(\"isNumber(String)/createNumber(String) 5 failed\", checkCreateNumber(val));\n1021: val = \"1234E-5\";\n1022: assertTrue(\"isNumber(String) 6 failed\", NumberUtils.isNumber(val));\n1023: assertTrue(\"isNumber(String)/createNumber(String) 6 failed\", checkCreateNumber(val));\n1024: val = \"123.4E5\";\n1025: assertTrue(\"isNumber(String) 7 failed\", NumberUtils.isNumber(val));\n1026: assertTrue(\"isNumber(String)/createNumber(String) 7 failed\", checkCreateNumber(val));\n1027: val = \"-1234\";\n1028: assertTrue(\"isNumber(String) 8 failed\", NumberUtils.isNumber(val));\n1029: assertTrue(\"isNumber(String)/createNumber(String) 8 failed\", checkCreateNumber(val));\n1030: val = \"-1234.5\";\n1031: assertTrue(\"isNumber(String) 9 failed\", NumberUtils.isNumber(val));\n1032: assertTrue(\"isNumber(String)/createNumber(String) 9 failed\", checkCreateNumber(val));\n1033: val = \"-.12345\";\n1034: assertTrue(\"isNumber(String) 10 failed\", NumberUtils.isNumber(val));\n1035: assertTrue(\"isNumber(String)/createNumber(String) 10 failed\", checkCreateNumber(val));\n1036: val = \"-1234E5\";\n1037: assertTrue(\"isNumber(String) 11 failed\", NumberUtils.isNumber(val));\n1038: assertTrue(\"isNumber(String)/createNumber(String) 11 failed\", checkCreateNumber(val));\n1039: val = \"0\";\n1040: assertTrue(\"isNumber(String) 12 failed\", NumberUtils.isNumber(val));\n1041: assertTrue(\"isNumber(String)/createNumber(String) 12 failed\", checkCreateNumber(val));\n1042: val = \"-0\";\n1043: assertTrue(\"isNumber(String) 13 failed\", NumberUtils.isNumber(val));\n1044: assertTrue(\"isNumber(String)/createNumber(String) 13 failed\", checkCreateNumber(val));\n1045: val = \"01234\";\n1046: assertTrue(\"isNumber(String) 14 failed\", NumberUtils.isNumber(val));\n1047: assertTrue(\"isNumber(String)/createNumber(String) 14 failed\", checkCreateNumber(val));\n1048: val = \"-01234\";\n1049: assertTrue(\"isNumber(String) 15 failed\", NumberUtils.isNumber(val));\n1050: assertTrue(\"isNumber(String)/createNumber(String) 15 failed\", checkCreateNumber(val));\n1051: val = \"0xABC123\";\n1052: assertTrue(\"isNumber(String) 16 failed\", NumberUtils.isNumber(val));\n1053: assertTrue(\"isNumber(String)/createNumber(String) 16 failed\", checkCreateNumber(val));\n1054: val = \"0x0\";\n1055: assertTrue(\"isNumber(String) 17 failed\", NumberUtils.isNumber(val));\n1056: assertTrue(\"isNumber(String)/createNumber(String) 17 failed\", checkCreateNumber(val));\n1057: val = \"123.4E21D\";\n1058: assertTrue(\"isNumber(String) 19 failed\", NumberUtils.isNumber(val));\n1059: assertTrue(\"isNumber(String)/createNumber(String) 19 failed\", checkCreateNumber(val));\n1060: val = \"-221.23F\";\n1061: assertTrue(\"isNumber(String) 20 failed\", NumberUtils.isNumber(val));\n1062: assertTrue(\"isNumber(String)/createNumber(String) 20 failed\", checkCreateNumber(val));\n1063: val = \"22338L\";\n1064: assertTrue(\"isNumber(String) 21 failed\", NumberUtils.isNumber(val));\n1065: assertTrue(\"isNumber(String)/createNumber(String) 21 failed\", checkCreateNumber(val));\n1066: val = null;\n1067: assertTrue(\"isNumber(String) 1 Neg failed\", !NumberUtils.isNumber(val));\n1068: assertTrue(\"isNumber(String)/createNumber(String) 1 Neg failed\", !checkCreateNumber(val));\n1069: val = \"\";\n1070: assertTrue(\"isNumber(String) 2 Neg failed\", !NumberUtils.isNumber(val));\n1071: assertTrue(\"isNumber(String)/createNumber(String) 2 Neg failed\", !checkCreateNumber(val));\n1072: val = \"--2.3\";\n1073: assertTrue(\"isNumber(String) 3 Neg failed\", !NumberUtils.isNumber(val));\n1074: assertTrue(\"isNumber(String)/createNumber(String) 3 Neg failed\", !checkCreateNumber(val));\n1075: val = \".12.3\";\n1076: assertTrue(\"isNumber(String) 4 Neg failed\", !NumberUtils.isNumber(val));\n1077: assertTrue(\"isNumber(String)/createNumber(String) 4 Neg failed\", !checkCreateNumber(val));\n1078: val = \"-123E\";\n1079: assertTrue(\"isNumber(String) 5 Neg failed\", !NumberUtils.isNumber(val));\n1080: assertTrue(\"isNumber(String)/createNumber(String) 5 Neg failed\", !checkCreateNumber(val));\n1081: val = \"-123E+-212\";\n1082: assertTrue(\"isNumber(String) 6 Neg failed\", !NumberUtils.isNumber(val));\n1083: assertTrue(\"isNumber(String)/createNumber(String) 6 Neg failed\", !checkCreateNumber(val));\n1084: val = \"-123E2.12\";\n1085: assertTrue(\"isNumber(String) 7 Neg failed\", !NumberUtils.isNumber(val));\n1086: assertTrue(\"isNumber(String)/createNumber(String) 7 Neg failed\", !checkCreateNumber(val));\n1087: val = \"0xGF\";\n1088: assertTrue(\"isNumber(String) 8 Neg failed\", !NumberUtils.isNumber(val));\n1089: assertTrue(\"isNumber(String)/createNumber(String) 8 Neg failed\", !checkCreateNumber(val));\n1090: val = \"0xFAE-1\";\n1091: assertTrue(\"isNumber(String) 9 Neg failed\", !NumberUtils.isNumber(val));\n1092: assertTrue(\"isNumber(String)/createNumber(String) 9 Neg failed\", !checkCreateNumber(val));\n1093: val = \".\";\n1094: assertTrue(\"isNumber(String) 10 Neg failed\", !NumberUtils.isNumber(val));\n1095: assertTrue(\"isNumber(String)/createNumber(String) 10 Neg failed\", !checkCreateNumber(val));\n1096: val = \"-0ABC123\";\n1097: assertTrue(\"isNumber(String) 11 Neg failed\", !NumberUtils.isNumber(val));\n1098: assertTrue(\"isNumber(String)/createNumber(String) 11 Neg failed\", !checkCreateNumber(val));\n1099: val = \"123.4E-D\";\n1100: assertTrue(\"isNumber(String) 12 Neg failed\", !NumberUtils.isNumber(val));\n1101: assertTrue(\"isNumber(String)/createNumber(String) 12 Neg failed\", !checkCreateNumber(val));\n1102: val = \"123.4ED\";\n1103: assertTrue(\"isNumber(String) 13 Neg failed\", !NumberUtils.isNumber(val));\n1104: assertTrue(\"isNumber(String)/createNumber(String) 13 Neg failed\", !checkCreateNumber(val));\n1105: val = \"1234E5l\";\n1106: assertTrue(\"isNumber(String) 14 Neg failed\", !NumberUtils.isNumber(val));\n1107: assertTrue(\"isNumber(String)/createNumber(String) 14 Neg failed\", !checkCreateNumber(val));\n1108: val = \"11a\";\n1109: assertTrue(\"isNumber(String) 15 Neg failed\", !NumberUtils.isNumber(val));\n1110: assertTrue(\"isNumber(String)/createNumber(String) 15 Neg failed\", !checkCreateNumber(val)); \n1111: val = \"1a\";\n1112: assertTrue(\"isNumber(String) 16 Neg failed\", !NumberUtils.isNumber(val));\n1113: assertTrue(\"isNumber(String)/createNumber(String) 16 Neg failed\", !checkCreateNumber(val)); \n1114: val = \"a\";\n1115: assertTrue(\"isNumber(String) 17 Neg failed\", !NumberUtils.isNumber(val));\n1116: assertTrue(\"isNumber(String)/createNumber(String) 17 Neg failed\", !checkCreateNumber(val)); \n1117: val = \"11g\";\n1118: assertTrue(\"isNumber(String) 18 Neg failed\", !NumberUtils.isNumber(val));\n1119: assertTrue(\"isNumber(String)/createNumber(String) 18 Neg failed\", !checkCreateNumber(val)); \n1120: val = \"11z\";\n1121: assertTrue(\"isNumber(String) 19 Neg failed\", !NumberUtils.isNumber(val));\n1122: assertTrue(\"isNumber(String)/createNumber(String) 19 Neg failed\", !checkCreateNumber(val)); \n1123: val = \"11def\";\n1124: assertTrue(\"isNumber(String) 20 Neg failed\", !NumberUtils.isNumber(val));\n1125: assertTrue(\"isNumber(String)/createNumber(String) 20 Neg failed\", !checkCreateNumber(val)); \n1126: val = \"11d11\";\n1127: assertTrue(\"isNumber(String) 21 Neg failed\", !NumberUtils.isNumber(val));\n1128: assertTrue(\"isNumber(String)/createNumber(String) 21 Neg failed\", !checkCreateNumber(val)); \n1129: val = \"11 11\";\n1130: assertTrue(\"isNumber(String) 22 Neg failed\", !NumberUtils.isNumber(val));\n1131: assertTrue(\"isNumber(String)/createNumber(String) 22 Neg failed\", !checkCreateNumber(val));\n1132: val = \" 1111\";\n1133: assertTrue(\"isNumber(String) 23 Neg failed\", !NumberUtils.isNumber(val));\n1134: assertTrue(\"isNumber(String)/createNumber(String) 23 Neg failed\", !checkCreateNumber(val));\n1135: val = \"1111 \";\n1136: assertTrue(\"isNumber(String) 24 Neg failed\", !NumberUtils.isNumber(val));\n1137: assertTrue(\"isNumber(String)/createNumber(String) 24 Neg failed\", !checkCreateNumber(val));\n1138: 1139: // LANG-521\n1140: val = \"2.\";\n1141: assertTrue(\"isNumber(String) LANG-521 failed\", NumberUtils.isNumber(val));\n1142: 1143: // LANG-664\n1144: val = \"1.1L\";\n1145: assertFalse(\"isNumber(String) LANG-664 failed\", NumberUtils.isNumber(val));\n1146: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;",
                                    "method_body": "634: public static Float createFloat(String str) {\n635: if (str == null) {\n638: return Float.valueOf(str);\n639: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;",
                                    "method_body": "684: public static Long createLong(String str) {\n685: if (str == null) {\n688: return Long.valueOf(str);\n689: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;",
                                    "method_body": "667: public static Integer createInteger(String str) {\n668: if (str == null) {\n672: return Integer.decode(str);\n673: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "612: private static boolean isAllZeros(String str) {\n613: if (str == null) {\n616: for (int i = str.length() - 1; i >= 0; i--) {\n617: if (str.charAt(i) != '0') {\n618: return false;\n621: return str.length() > 0;\n622: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;",
                                    "method_body": "650: public static Double createDouble(String str) {\n651: if (str == null) {\n654: return Double.valueOf(str);\n655: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isDigits(Ljava/lang/String;)Z",
                                    "method_body": "1294: public static boolean isDigits(String str) {\n1295: if (StringUtils.isEmpty(str)) {\n1298: for (int i = 0; i < str.length(); i++) {\n1299: if (!Character.isDigit(str.charAt(i))) {\n1303: return true;\n1304: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isNumber(Ljava/lang/String;)Z",
                                    "method_body": "1319: public static boolean isNumber(String str) {\n1320: if (StringUtils.isEmpty(str)) {\n1321: return false;\n1323: char[] chars = str.toCharArray();\n1324: int sz = chars.length;\n1325: boolean hasExp = false;\n1326: boolean hasDecPoint = false;\n1327: boolean allowSigns = false;\n1328: boolean foundDigit = false;\n1330: int start = (chars[0] == '-') ? 1 : 0;\n1331: if (sz > start + 1) {\n1332: if (chars[start] == '0' && chars[start + 1] == 'x') {\n1333: int i = start + 2;\n1334: if (i == sz) {\n1338: for (; i < chars.length; i++) {\n1339: if ((chars[i] < '0' || chars[i] > '9')\n1342: return false;\n1345: return true;\n1348: sz--; // don't want to loop to the last char, check it afterwords\n1350: int i = start;\n1353: while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {\n1354: if (chars[i] >= '0' && chars[i] <= '9') {\n1355: foundDigit = true;\n1356: allowSigns = false;\n1358: } else if (chars[i] == '.') {\n1359: if (hasDecPoint || hasExp) {\n1361: return false;\n1363: hasDecPoint = true;\n1364: } else if (chars[i] == 'e' || chars[i] == 'E') {\n1366: if (hasExp) {\n1370: if (!foundDigit) {\n1373: hasExp = true;\n1374: allowSigns = true;\n1375: } else if (chars[i] == '+' || chars[i] == '-') {\n1376: if (!allowSigns) {\n1377: return false;\n1379: allowSigns = false;\n1380: foundDigit = false; // we need a digit after the E\n1382: return false;\n1384: i++;\n1386: if (i < chars.length) {\n1387: if (chars[i] >= '0' && chars[i] <= '9') {\n1389: return true;\n1391: if (chars[i] == 'e' || chars[i] == 'E') {\n1393: return false;\n1395: if (chars[i] == '.') {\n1396: if (hasDecPoint || hasExp) {\n1401: return foundDigit;\n1403: if (!allowSigns\n1408: return foundDigit;\n1410: if (chars[i] == 'l'\n1413: return foundDigit && !hasExp;\n1416: return false;\n1421: }",
                                    "suspicious_rank": 1.0
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "237: public static boolean isBlank(CharSequence cs) {\n239: if (cs == null || (strLen = cs.length()) == 0) {\n240: return true;\n242: for (int i = 0; i < strLen; i++) {\n243: if ((Character.isWhitespace(cs.charAt(i)) == false)) {\n244: return false;\n248: }",
                                    "suspicious_rank": 0.204
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;",
                                    "method_body": "716: public static BigDecimal createBigDecimal(String str) {\n717: if (str == null) {\n721: if (StringUtils.isBlank(str)) {\n724: return new BigDecimal(str);\n725: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "452: public static Number createNumber(String str) throws NumberFormatException {\n453: if (str == null) {\n454: return null;\n456: if (StringUtils.isBlank(str)) {\n457: throw new NumberFormatException(\"A blank string is not a valid number\");\n459: if (str.startsWith(\"--\")) {\n464: return null;\n466: if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n467: return createInteger(str);\n469: char lastChar = str.charAt(str.length() - 1);\n473: int decPos = str.indexOf('.');\n474: int expPos = str.indexOf('e') + str.indexOf('E') + 1;\n476: if (decPos > -1) {\n478: if (expPos > -1) {\n479: if (expPos < decPos || expPos > str.length()) {\n480: throw new NumberFormatException(str + \" is not a valid number.\");\n482: dec = str.substring(decPos + 1, expPos);\n484: dec = str.substring(decPos + 1);\n486: mant = str.substring(0, decPos);\n488: if (expPos > -1) {\n489: if (expPos > str.length()) {\n492: mant = str.substring(0, expPos);\n494: mant = str;\n496: dec = null;\n498: if (!Character.isDigit(lastChar) && lastChar != '.') {\n499: if (expPos > -1 && expPos < str.length() - 1) {\n500: exp = str.substring(expPos + 1, str.length() - 1);\n502: exp = null;\n505: String numeric = str.substring(0, str.length() - 1);\n506: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n507: switch (lastChar) {\n510: if (dec == null\n514: return createLong(numeric);\n521: throw new NumberFormatException(str + \" is not a valid number.\");\n525: Float f = NumberUtils.createFloat(numeric);\n526: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n529: return f;\n532: } catch (NumberFormatException nfe) {\n539: Double d = NumberUtils.createDouble(numeric);\n540: if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n541: return d;\n543: } catch (NumberFormatException nfe) {\n547: return createBigDecimal(numeric);\n548: } catch (NumberFormatException e) {\n553: throw new NumberFormatException(str + \" is not a valid number.\");\n559: if (expPos > -1 && expPos < str.length() - 1) {\n560: exp = str.substring(expPos + 1, str.length());\n562: exp = null;\n564: if (dec == null && exp == null) {\n567: return createInteger(str);\n568: } catch (NumberFormatException nfe) {\n572: return createLong(str);\n573: } catch (NumberFormatException nfe) {\n576: return createBigInteger(str);\n580: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n582: Float f = createFloat(str);\n583: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n584: return f;\n586: } catch (NumberFormatException nfe) {\n590: Double d = createDouble(str);\n591: if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n594: } catch (NumberFormatException nfe) {\n598: return createBigDecimal(str);\n602: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "198: public static boolean isEmpty(CharSequence cs) {\n199: return cs == null || cs.length() == 0;\n200: }",
                                    "suspicious_rank": 0.1
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;",
                                    "method_body": "700: public static BigInteger createBigInteger(String str) {\n701: if (str == null) {\n704: return new BigInteger(str);\n705: }",
                                    "suspicious_rank": 0.577
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: isNumber(String) LANG-664 failed\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertFalse(Assert.java:39)\nat junit.framework.TestCase.assertFalse(TestCase.java:210)\nat org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(NumberUtilsTest.java:1145)"
                        }
                    ]
                },
                {
                    "bug_id": 26,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateFormatTest.testLang645",
                            "test_body": "328: public void testLang645() {\n329: Locale locale = new Locale(\"sv\", \"SE\");\n330: 331: Calendar cal = Calendar.getInstance();\n332: cal.set(2010, 0, 1, 12, 0, 0);\n333: Date d = cal.getTime();\n334: 335: FastDateFormat fdf = FastDateFormat.getInstance(\"EEEE', week 'ww\", locale);\n336: 337: assertEquals(\"fredag, week 53\", fdf.format(d));\n338: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "212: public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) {\n213: FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);\n214: FastDateFormat format = cInstanceCache.get(emptyFormat);\n215: if (format == null) {\n216: format = emptyFormat;\n217: format.init();  // convert shell format into usable one\n218: cInstanceCache.put(format, format);  // this is OK!\n220: return format;\n221: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:hashCode()I",
                                    "method_body": "1002: public int hashCode() {\n1003: int total = 0;\n1004: total += mPattern.hashCode();\n1005: total += mTimeZone.hashCode();\n1006: total += (mTimeZoneForced ? 1 : 0);\n1007: total += mLocale.hashCode();\n1008: total += (mLocaleForced ? 1 : 0);\n1009: return total;\n1010: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "195: public static FastDateFormat getInstance(String pattern, Locale locale) {\n196: return getInstance(pattern, null, locale);\n197: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1347: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1348: appendTo(buffer, calendar.get(mField));\n1349: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:selectNumberRule(II)Lorg/apache/commons/lang3/time/FastDateFormat$NumberRule;",
                                    "method_body": "766: protected NumberRule selectNumberRule(int field, int padding) {\n767: switch (padding) {\n771: return new TwoDigitNumberField(field);\n775: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:estimateLength()I",
                                    "method_body": "1340: public int estimateLength() {\n1341: return 2;\n1342: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TextField:estimateLength()I",
                                    "method_body": "1156: public int estimateLength() {\n1157: int max = 0;\n1158: for (int i=mValues.length; --i >= 0; ) {\n1159: int len = mValues[i].length();\n1160: if (len > max) {\n1161: max = len;\n1163: }\n1164: return max;\n1165: }",
                                    "suspicious_rank": 0.164
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$StringLiteral:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1129: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1130: buffer.append(mValue);\n1131: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:init()V",
                                    "method_body": "557: protected void init() {\n558: List<Rule> rulesList = parsePattern();\n559: mRules = rulesList.toArray(new Rule[rulesList.size()]);\n561: int len = 0;\n562: for (int i=mRules.length; --i >= 0; ) {\n563: len += mRules[i].estimateLength();\n566: mMaxLengthEstimate = len;\n567: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$StringLiteral:<init>(Ljava/lang/String;)V",
                                    "method_body": "1115: StringLiteral(String value) {\n1116: mValue = value;\n1117: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:<init>(I)V",
                                    "method_body": "1333: TwoDigitNumberField(int field) {\n1334: mField = field;\n1335: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parseToken(Ljava/lang/String;[I)Ljava/lang/String;",
                                    "method_body": "707: protected String parseToken(String pattern, int[] indexRef) {\n708: StringBuilder buf = new StringBuilder();\n710: int i = indexRef[0];\n711: int length = pattern.length();\n713: char c = pattern.charAt(i);\n714: if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {\n717: buf.append(c);\n719: while (i + 1 < length) {\n720: char peek = pattern.charAt(i + 1);\n721: if (peek == c) {\n722: buf.append(c);\n723: i++;\n727: }\n730: buf.append('\\'');\n732: boolean inLiteral = false;\n734: for (; i < length; i++) {\n735: c = pattern.charAt(i);\n737: if (c == '\\'') {\n738: if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {\n743: inLiteral = !inLiteral;\n745: } else if (!inLiteral &&\n747: i--;\n748: break;\n750: buf.append(c);\n755: indexRef[0] = i;\n756: return buf.toString();\n757: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:applyRules(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "887: protected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {\n888: Rule[] rules = mRules;\n889: int len = mRules.length;\n890: for (int i = 0; i < len; i++) {\n891: rules[i].appendTo(buf, calendar);\n893: return buf;\n894: }",
                                    "suspicious_rank": 0.162
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TextField:<init>(I[Ljava/lang/String;)V",
                                    "method_body": "1148: TextField(int field, String[] values) {\n1149: mField = field;\n1150: mValues = values;\n1151: }",
                                    "suspicious_rank": 0.164
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TextField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1170: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1171: buffer.append(mValues[calendar.get(mField)]);\n1172: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "534: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n535: super();\n536: if (pattern == null) {\n539: mPattern = pattern;\n541: mTimeZoneForced = (timeZone != null);\n542: if (timeZone == null) {\n543: timeZone = TimeZone.getDefault();\n545: mTimeZone = timeZone;\n547: mLocaleForced = (locale != null);\n548: if (locale == null) {\n551: mLocale = locale;\n552: }",
                                    "suspicious_rank": 0.146
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1354: public final void appendTo(StringBuffer buffer, int value) {\n1355: if (value < 100) {\n1356: buffer.append((char)(value / 10 + '0'));\n1357: buffer.append((char)(value % 10 + '0'));\n1361: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Date;)Ljava/lang/String;",
                                    "method_body": "819: public String format(Date date) {\n820: Calendar c = new GregorianCalendar(mTimeZone);\n821: c.setTime(date);\n822: return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n823: }",
                                    "suspicious_rank": 0.18
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$StringLiteral:estimateLength()I",
                                    "method_body": "1122: public int estimateLength() {\n1123: return mValue.length();\n1124: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parsePattern()Ljava/util/List;",
                                    "method_body": "577: protected List<Rule> parsePattern() {\n578: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n579: List<Rule> rules = new ArrayList<Rule>();\n581: String[] ERAs = symbols.getEras();\n582: String[] months = symbols.getMonths();\n583: String[] shortMonths = symbols.getShortMonths();\n584: String[] weekdays = symbols.getWeekdays();\n585: String[] shortWeekdays = symbols.getShortWeekdays();\n586: String[] AmPmStrings = symbols.getAmPmStrings();\n588: int length = mPattern.length();\n589: int[] indexRef = new int[1];\n591: for (int i = 0; i < length; i++) {\n592: indexRef[0] = i;\n593: String token = parseToken(mPattern, indexRef);\n594: i = indexRef[0];\n596: int tokenLen = token.length();\n597: if (tokenLen == 0) {\n602: char c = token.charAt(0);\n604: switch (c) {\n645: rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n646: break;\n654: rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);\n655: break;\n683: String sub = token.substring(1);\n684: if (sub.length() == 1) {\n687: rule = new StringLiteral(sub);\n689: break;\n694: rules.add(rule);\n697: return rules;\n698: }",
                                    "suspicious_rank": 0.146
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<fredag, week [53]> but was:<fredag, week [01]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang3.time.FastDateFormatTest.testLang645(FastDateFormatTest.java:337)"
                        }
                    ]
                },
                {
                    "bug_id": 27,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber",
                            "test_body": "176: public void testCreateNumber() {\n177: // a lot of things can go wrong\n178: assertEquals(\"createNumber(String) 1 failed\", new Float(\"1234.5\"), NumberUtils.createNumber(\"1234.5\"));\n179: assertEquals(\"createNumber(String) 2 failed\", new Integer(\"12345\"), NumberUtils.createNumber(\"12345\"));\n180: assertEquals(\"createNumber(String) 3 failed\", new Double(\"1234.5\"), NumberUtils.createNumber(\"1234.5D\"));\n181: assertEquals(\"createNumber(String) 3 failed\", new Double(\"1234.5\"), NumberUtils.createNumber(\"1234.5d\"));\n182: assertEquals(\"createNumber(String) 4 failed\", new Float(\"1234.5\"), NumberUtils.createNumber(\"1234.5F\"));\n183: assertEquals(\"createNumber(String) 4 failed\", new Float(\"1234.5\"), NumberUtils.createNumber(\"1234.5f\"));\n184: assertEquals(\"createNumber(String) 5 failed\", new Long(Integer.MAX_VALUE + 1L), NumberUtils.createNumber(\"\"\n185: + (Integer.MAX_VALUE + 1L)));\n186: assertEquals(\"createNumber(String) 6 failed\", new Long(12345), NumberUtils.createNumber(\"12345L\"));\n187: assertEquals(\"createNumber(String) 6 failed\", new Long(12345), NumberUtils.createNumber(\"12345l\"));\n188: assertEquals(\"createNumber(String) 7 failed\", new Float(\"-1234.5\"), NumberUtils.createNumber(\"-1234.5\"));\n189: assertEquals(\"createNumber(String) 8 failed\", new Integer(\"-12345\"), NumberUtils.createNumber(\"-12345\"));\n190: assertTrue(\"createNumber(String) 9 failed\", 0xFADE == NumberUtils.createNumber(\"0xFADE\").intValue());\n191: assertTrue(\"createNumber(String) 10 failed\", -0xFADE == NumberUtils.createNumber(\"-0xFADE\").intValue());\n192: assertEquals(\"createNumber(String) 11 failed\", new Double(\"1.1E200\"), NumberUtils.createNumber(\"1.1E200\"));\n193: assertEquals(\"createNumber(String) 12 failed\", new Float(\"1.1E20\"), NumberUtils.createNumber(\"1.1E20\"));\n194: assertEquals(\"createNumber(String) 13 failed\", new Double(\"-1.1E200\"), NumberUtils.createNumber(\"-1.1E200\"));\n195: assertEquals(\"createNumber(String) 14 failed\", new Double(\"1.1E-200\"), NumberUtils.createNumber(\"1.1E-200\"));\n196: assertEquals(\"createNumber(null) failed\", null, NumberUtils.createNumber(null));\n197: assertEquals(\"createNumber(String) failed\", new BigInteger(\"12345678901234567890\"), NumberUtils\n198: .createNumber(\"12345678901234567890L\"));\n199: 200: // jdk 1.2 doesn't support this. unsure about jdk 1.2.2\n201: if (SystemUtils.isJavaVersionAtLeast(1.3f)) {\n202: assertEquals(\"createNumber(String) 15 failed\", new BigDecimal(\"1.1E-700\"), NumberUtils\n203: .createNumber(\"1.1E-700F\"));\n204: }\n205: assertEquals(\"createNumber(String) 16 failed\", new Long(\"10\" + Integer.MAX_VALUE), NumberUtils\n206: .createNumber(\"10\" + Integer.MAX_VALUE + \"L\"));\n207: assertEquals(\"createNumber(String) 17 failed\", new Long(\"10\" + Integer.MAX_VALUE), NumberUtils\n208: .createNumber(\"10\" + Integer.MAX_VALUE));\n209: assertEquals(\"createNumber(String) 18 failed\", new BigInteger(\"10\" + Long.MAX_VALUE), NumberUtils\n210: .createNumber(\"10\" + Long.MAX_VALUE));\n211: 212: // LANG-521\n213: assertEquals(\"createNumber(String) LANG-521 failed\", new Float(\"2.\"), NumberUtils.createNumber(\"2.\"));\n214: 215: // LANG-638\n216: assertFalse(\"createNumber(String) succeeded\", checkCreateNumber(\"1eE\"));\n217: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:isJavaVersionAtLeast(F)Z",
                                    "method_body": "1533: public static boolean isJavaVersionAtLeast(float requiredVersion) {\n1534: return JAVA_VERSION_FLOAT >= requiredVersion;\n1535: }",
                                    "suspicious_rank": 0.196
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;",
                                    "method_body": "631: public static Float createFloat(String str) {\n632: if (str == null) {\n635: return Float.valueOf(str);\n636: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;",
                                    "method_body": "681: public static Long createLong(String str) {\n682: if (str == null) {\n685: return Long.valueOf(str);\n686: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;",
                                    "method_body": "664: public static Integer createInteger(String str) {\n665: if (str == null) {\n669: return Integer.decode(str);\n670: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "609: private static boolean isAllZeros(String str) {\n610: if (str == null) {\n613: for (int i = str.length() - 1; i >= 0; i--) {\n614: if (str.charAt(i) != '0') {\n615: return false;\n619: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;",
                                    "method_body": "647: public static Double createDouble(String str) {\n648: if (str == null) {\n651: return Double.valueOf(str);\n652: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isDigits(Ljava/lang/String;)Z",
                                    "method_body": "1291: public static boolean isDigits(String str) {\n1292: if (StringUtils.isEmpty(str)) {\n1295: for (int i = 0; i < str.length(); i++) {\n1296: if (!Character.isDigit(str.charAt(i))) {\n1300: return true;\n1301: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "231: public static boolean isBlank(CharSequence cs) {\n233: if (cs == null || (strLen = cs.length()) == 0) {\n236: for (int i = 0; i < strLen; i++) {\n237: if ((Character.isWhitespace(cs.charAt(i)) == false)) {\n238: return false;\n242: }",
                                    "suspicious_rank": 0.224
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;",
                                    "method_body": "713: public static BigDecimal createBigDecimal(String str) {\n714: if (str == null) {\n718: if (StringUtils.isBlank(str)) {\n721: return new BigDecimal(str);\n722: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "452: public static Number createNumber(String str) throws NumberFormatException {\n453: if (str == null) {\n454: return null;\n456: if (StringUtils.isBlank(str)) {\n459: if (str.startsWith(\"--\")) {\n466: if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n467: return createInteger(str);\n469: char lastChar = str.charAt(str.length() - 1);\n473: int decPos = str.indexOf('.');\n474: int expPos = str.indexOf('e') + str.indexOf('E') + 1;\n476: if (decPos > -1) {\n478: if (expPos > -1) {\n479: if (expPos < decPos) {\n482: dec = str.substring(decPos + 1, expPos);\n484: dec = str.substring(decPos + 1);\n486: mant = str.substring(0, decPos);\n488: if (expPos > -1) {\n489: mant = str.substring(0, expPos);\n491: mant = str;\n493: dec = null;\n495: if (!Character.isDigit(lastChar) && lastChar != '.') {\n496: if (expPos > -1 && expPos < str.length() - 1) {\n497: exp = str.substring(expPos + 1, str.length() - 1);\n499: exp = null;\n502: String numeric = str.substring(0, str.length() - 1);\n503: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n504: switch (lastChar) {\n507: if (dec == null\n511: return createLong(numeric);\n512: } catch (NumberFormatException nfe) {\n515: return createBigInteger(numeric);\n522: Float f = NumberUtils.createFloat(numeric);\n523: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n526: return f;\n531: }\n536: Double d = NumberUtils.createDouble(numeric);\n537: if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n538: return d;\n542: }\n544: return createBigDecimal(numeric);\n556: if (expPos > -1 && expPos < str.length() - 1) {\n557: exp = str.substring(expPos + 1, str.length());\n559: exp = null;\n561: if (dec == null && exp == null) {\n564: return createInteger(str);\n565: } catch (NumberFormatException nfe) {\n569: return createLong(str);\n570: } catch (NumberFormatException nfe) {\n573: return createBigInteger(str);\n577: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n579: Float f = createFloat(str);\n580: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n581: return f;\n585: }\n587: Double d = createDouble(str);\n588: if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n589: return d;\n599: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "192: public static boolean isEmpty(CharSequence cs) {\n193: return cs == null || cs.length() == 0;\n194: }",
                                    "suspicious_rank": 0.1
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;",
                                    "method_body": "697: public static BigInteger createBigInteger(String str) {\n698: if (str == null) {\n701: return new BigInteger(str);\n702: }",
                                    "suspicious_rank": 0.577
                                }
                            ],
                            "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 4\nat java.lang.String.substring(String.java:1907)\nat org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:489)\nat org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(NumberUtilsTest.java:1146)\nat org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:216)"
                        }
                    ]
                },
                {
                    "bug_id": 28,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping",
                            "test_body": "27: public void testSupplementaryUnescaping() {\n28: NumericEntityUnescaper neu = new NumericEntityUnescaper();\n29: String input = \"&#68642;\";\n30: String expected = \"\\uD803\\uDC22\";\n31: 32: String result = neu.translate(input);\n33: assertEquals(\"Failed to unescape numeric entities supplementary characters\", expected, result);\n34: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
                                    "method_body": "35: public int translate(CharSequence input, int index, Writer out) throws IOException {\n37: if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n38: int start = index + 2;\n39: boolean isHex = false;\n41: char firstChar = input.charAt(start);\n42: if(firstChar == 'x' || firstChar == 'X') {\n47: int end = start;\n48: while(input.charAt(end) != ';') {\n49: end++;\n54: if(isHex) {\n57: entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n61: }\n63: out.write(entityValue);\n64: return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n67: }",
                                    "suspicious_rank": 0.333
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
                                    "method_body": "46: public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\n54: if (input == null) {\n58: StringWriter writer = new StringWriter(input.length() * 2);  // TODO: Make the 2 part of the API???\n59: translate(input, writer);\n60: return writer.toString();\n65: }",
                                    "suspicious_rank": 0.196
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
                                    "method_body": "76: public final void translate(CharSequence input, Writer out) throws IOException {\n77: if (out == null) {\n80: if (input == null) {\n83: int sz = Character.codePointCount(input, 0, input.length());\n84: for (int i = 0; i < sz; i++) {\n87: int consumed = translate(input, i, out);\n89: if(consumed == 0) {\n93: for(int j=0; j<consumed; j++) {\n94: if(i < sz - 2) {\n95: i += Character.charCount( Character.codePointAt(input, i) );\n98: i++;\n102: i--;\n105: }",
                                    "suspicious_rank": 0.189
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: Failed to unescape numeric entities supplementary characters expected:<[\ud803\udc22]> but was:<[\u0c22]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping(NumericEntityUnescaperTest.java:33)"
                        }
                    ]
                },
                {
                    "bug_id": 29,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.SystemUtilsTest.testJavaVersionAsInt",
                            "test_body": "209: public void testJavaVersionAsInt() {\n210: assertEquals(0, SystemUtils.toJavaVersionInt(null));\n211: assertEquals(0, SystemUtils.toJavaVersionInt(\"\"));\n212: assertEquals(0, SystemUtils.toJavaVersionInt(\"0\"));\n213: assertEquals(110, SystemUtils.toJavaVersionInt(\"1.1\"));\n214: assertEquals(120, SystemUtils.toJavaVersionInt(\"1.2\"));\n215: assertEquals(130, SystemUtils.toJavaVersionInt(\"1.3.0\"));\n216: assertEquals(131, SystemUtils.toJavaVersionInt(\"1.3.1\"));\n217: assertEquals(140, SystemUtils.toJavaVersionInt(\"1.4.0\"));\n218: assertEquals(141, SystemUtils.toJavaVersionInt(\"1.4.1\"));\n219: assertEquals(142, SystemUtils.toJavaVersionInt(\"1.4.2\"));\n220: assertEquals(150, SystemUtils.toJavaVersionInt(\"1.5.0\"));\n221: assertEquals(160, SystemUtils.toJavaVersionInt(\"1.6.0\"));\n222: assertEquals(131, SystemUtils.toJavaVersionInt(\"JavaVM-1.3.1\"));\n223: assertEquals(131, SystemUtils.toJavaVersionInt(\"1.3.1 subset\"));\n224: // This used to return 0f in [lang] version 2.5:\n225: assertEquals(130, SystemUtils.toJavaVersionInt(\"XXX-1.3.x\"));\n226: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:toJavaVersionIntArray(Ljava/lang/String;I)[I",
                                    "method_body": "1715: private static int[] toJavaVersionIntArray(String version, int limit) {\n1716: if (version == null) {\n1717: return ArrayUtils.EMPTY_INT_ARRAY;\n1729: }",
                                    "suspicious_rank": 0.064
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:toVersionInt([I)I",
                                    "method_body": "1791: private static int toVersionInt(int[] javaVersions) {\n1792: if (javaVersions == null) {\n1795: int intVersion = 0;\n1796: int len = javaVersions.length;\n1797: if (len >= 1) {\n1800: if (len >= 2) {\n1803: if (len >= 3) {\n1806: return intVersion;\n1807: }",
                                    "suspicious_rank": 0.064
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:toJavaVersionInt(Ljava/lang/String;)F",
                                    "method_body": "1672: static float toJavaVersionInt(String version) {\n1673: return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));\n1674: }",
                                    "suspicious_rank": 1.0
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<0> but was:<0.0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:86)\nat junit.framework.TestCase.assertEquals(TestCase.java:253)\nat org.apache.commons.lang3.SystemUtilsTest.testJavaVersionAsInt(SystemUtilsTest.java:210)"
                        }
                    ]
                },
                {
                    "bug_id": 30,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars",
                            "test_body": "526: public void testIndexOfAny_StringCharArrayWithSupplementaryChars() {\n527: assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000.toCharArray()));\n528: assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001.toCharArray()));\n529: assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000.toCharArray()));\n530: assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001.toCharArray()));    \n531: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:indexOfAny(Ljava/lang/CharSequence;[C)I",
                                    "method_body": "1371: public static int indexOfAny(CharSequence cs, char[] searchChars) {\n1372: if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n1375: int csLen = cs.length();\n1376: int searchLen = searchChars.length;\n1377: for (int i = 0; i < csLen; i++) {\n1378: char ch = cs.charAt(i);\n1379: for (int j = 0; j < searchLen; j++) {\n1380: if (searchChars[j] == ch) {\n1382: return i;\n1387: }",
                                    "suspicious_rank": 0.316
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                                    "method_body": "3278: public static boolean isEmpty(char[] array) {\n3279: if (array == null || array.length == 0) {\n3282: return false;\n3283: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.191
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<2> but was:<0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:528)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars",
                            "test_body": "569: public void testIndexOfAny_StringStringWithSupplementaryChars() {\n570: assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000));\n571: assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001));\n572: assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000));\n573: assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001));    \n574: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:indexOfAny(Ljava/lang/CharSequence;[C)I",
                                    "method_body": "1371: public static int indexOfAny(CharSequence cs, char[] searchChars) {\n1372: if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n1375: int csLen = cs.length();\n1376: int searchLen = searchChars.length;\n1377: for (int i = 0; i < csLen; i++) {\n1378: char ch = cs.charAt(i);\n1379: for (int j = 0; j < searchLen; j++) {\n1380: if (searchChars[j] == ch) {\n1382: return i;\n1387: }",
                                    "suspicious_rank": 0.316
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                                    "method_body": "3278: public static boolean isEmpty(char[] array) {\n3279: if (array == null || array.length == 0) {\n3282: return false;\n3283: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:indexOfAny(Ljava/lang/CharSequence;Ljava/lang/String;)I",
                                    "method_body": "1411: public static int indexOfAny(CharSequence cs, String searchChars) {\n1412: if (isEmpty(cs) || isEmpty(searchChars)) {\n1415: return indexOfAny(cs, searchChars.toCharArray());\n1416: }",
                                    "suspicious_rank": 0.224
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.191
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<2> but was:<0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:571)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars",
                            "test_body": "182: public void testContainsAny_StringWithBadSupplementaryChars() {\n183: // Test edge case: 1/2 of a (broken) supplementary char\n184: assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001));\n185: assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));\n186: assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001));\n187: assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh));\n188: assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));\n189: assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow));\n190: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;Ljava/lang/String;)Z",
                                    "method_body": "1497: public static boolean containsAny(CharSequence cs, String searchChars) {\n1498: if (searchChars == null) {\n1501: return containsAny(cs, searchChars.toCharArray());\n1502: }",
                                    "suspicious_rank": 0.183
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                                    "method_body": "3278: public static boolean isEmpty(char[] array) {\n3279: if (array == null || array.length == 0) {\n3282: return false;\n3283: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.191
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;[C)Z",
                                    "method_body": "1443: public static boolean containsAny(CharSequence cs, char[] searchChars) {\n1444: if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n1447: int csLength = cs.length();\n1448: int searchLength = searchChars.length;\n1449: int csLast = csLength - 1;\n1450: int searchLast = searchLength - 1;\n1451: for (int i = 0; i < csLength; i++) {\n1452: char ch = cs.charAt(i);\n1453: for (int j = 0; j < searchLength; j++) {\n1454: if (searchChars[j] == ch) {\n1455: if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n1462: return true;\n1467: return false;\n1468: }",
                                    "suspicious_rank": 0.224
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<false> but was:<true>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:186)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars",
                            "test_body": "358: public void testContainsNone_StringWithBadSupplementaryChars() {\n359: // Test edge case: 1/2 of a (broken) supplementary char\n360: assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));\n361: assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));\n362: assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));\n363: assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));\n364: assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));\n365: assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));\n366: assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));        \n367: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;Ljava/lang/String;)Z",
                                    "method_body": "1714: public static boolean containsNone(CharSequence cs, String invalidChars) {\n1715: if (cs == null || invalidChars == null) {\n1718: return containsNone(cs, invalidChars.toCharArray());\n1719: }",
                                    "suspicious_rank": 0.365
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;[C)Z",
                                    "method_body": "1673: public static boolean containsNone(CharSequence cs, char[] searchChars) {\n1674: if (cs == null || searchChars == null) {\n1677: int csLen = cs.length();\n1678: int searchLen = searchChars.length;\n1679: for (int i = 0; i < csLen; i++) {\n1680: char ch = cs.charAt(i);\n1681: for (int j = 0; j < searchLen; j++) {\n1682: if (searchChars[j] == ch) {\n1685: return false;\n1689: return true;\n1690: }",
                                    "suspicious_rank": 0.447
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<true> but was:<false>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:362)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars",
                            "test_body": "372: public void testContainsNone_StringWithSupplementaryChars() {\n373: assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));\n374: assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));\n375: assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));\n376: // Sanity check:\n377: assertEquals(-1, CharU20000.indexOf(CharU20001));\n378: assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\n379: assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n380: // Test:\n381: assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));\n382: assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));\n383: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;Ljava/lang/String;)Z",
                                    "method_body": "1714: public static boolean containsNone(CharSequence cs, String invalidChars) {\n1715: if (cs == null || invalidChars == null) {\n1718: return containsNone(cs, invalidChars.toCharArray());\n1719: }",
                                    "suspicious_rank": 0.365
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<true> but was:<false>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:381)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars",
                            "test_body": "133: public void testContainsAny_StringCharArrayWithBadSupplementaryChars() {\n134: // Test edge case: 1/2 of a (broken) supplementary char\n135: assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));\n136: assertEquals(false, StringUtils.containsAny(\"abc\" + CharUSuppCharHigh + \"xyz\", CharU20001.toCharArray()));\n137: assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));\n138: assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));\n139: assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));\n140: assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));\n141: assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));\n142: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                                    "method_body": "3278: public static boolean isEmpty(char[] array) {\n3279: if (array == null || array.length == 0) {\n3282: return false;\n3283: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.191
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;[C)Z",
                                    "method_body": "1443: public static boolean containsAny(CharSequence cs, char[] searchChars) {\n1444: if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n1447: int csLength = cs.length();\n1448: int searchLength = searchChars.length;\n1449: int csLast = csLength - 1;\n1450: int searchLast = searchLength - 1;\n1451: for (int i = 0; i < csLength; i++) {\n1452: char ch = cs.charAt(i);\n1453: for (int j = 0; j < searchLength; j++) {\n1454: if (searchChars[j] == ch) {\n1455: if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n1462: return true;\n1467: return false;\n1468: }",
                                    "suspicious_rank": 0.224
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<false> but was:<true>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:138)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArrayWithSupplementaryChars",
                            "test_body": "592: public void testIndexOfAnyBut_StringCharArrayWithSupplementaryChars() {\n593: assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000.toCharArray()));\n594: assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001.toCharArray()));\n595: assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000.toCharArray()));\n596: assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001.toCharArray()));        \n597: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                                    "method_body": "3278: public static boolean isEmpty(char[] array) {\n3279: if (array == null || array.length == 0) {\n3282: return false;\n3283: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.191
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:indexOfAnyBut(Ljava/lang/CharSequence;[C)I",
                                    "method_body": "1528: public static int indexOfAnyBut(CharSequence cs, char[] searchChars) {\n1529: if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n1532: int csLen = cs.length();\n1533: int searchLen = searchChars.length;\n1535: for (int i = 0; i < csLen; i++) {\n1536: char ch = cs.charAt(i);\n1537: for (int j = 0; j < searchLen; j++) {\n1538: if (searchChars[j] == ch) {\n1539: continue outer;\n1542: return i;\n1545: }",
                                    "suspicious_rank": 0.12
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<2> but was:<3>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:593)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars",
                            "test_body": "615: public void testIndexOfAnyBut_StringStringWithSupplementaryChars() {\n616: assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000));\n617: assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001));\n618: assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000));\n619: assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001));        \n620: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:indexOfAnyBut(Ljava/lang/String;Ljava/lang/String;)I",
                                    "method_body": "1569: public static int indexOfAnyBut(String str, String searchChars) {\n1570: if (isEmpty(str) || isEmpty(searchChars)) {\n1573: int strLen = str.length();\n1574: for (int i = 0; i < strLen; i++) {\n1575: char ch = str.charAt(i);\n1576: if (searchChars.indexOf(ch) < 0) {\n1577: return i;\n1581: }",
                                    "suspicious_rank": 0.224
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.191
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<2> but was:<3>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:616)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars",
                            "test_body": "304: public void testContainsNone_CharArrayWithBadSupplementaryChars() {\n305: // Test edge case: 1/2 of a (broken) supplementary char\n306: assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));\n307: assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));\n308: assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));\n309: assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));\n310: assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));\n311: assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));\n312: assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));\n313: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;[C)Z",
                                    "method_body": "1673: public static boolean containsNone(CharSequence cs, char[] searchChars) {\n1674: if (cs == null || searchChars == null) {\n1677: int csLen = cs.length();\n1678: int searchLen = searchChars.length;\n1679: for (int i = 0; i < csLen; i++) {\n1680: char ch = cs.charAt(i);\n1681: for (int j = 0; j < searchLen; j++) {\n1682: if (searchChars[j] == ch) {\n1685: return false;\n1689: return true;\n1690: }",
                                    "suspicious_rank": 0.447
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<true> but was:<false>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:308)"
                        }
                    ]
                },
                {
                    "bug_id": 31,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyStringWithSupplementaryChars",
                            "test_body": "671: public void testContainsAnyStringWithSupplementaryChars() {\n672: assertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000));\n673: assertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001));\n674: assertEquals(true, StringUtils.containsAny(CharU20000, CharU20000));\n675: // Sanity check:\n676: assertEquals(-1, CharU20000.indexOf(CharU20001));\n677: assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\n678: assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n679: // Test:\n680: assertEquals(false, StringUtils.containsAny(CharU20000, CharU20001));\n681: assertEquals(false, StringUtils.containsAny(CharU20001, CharU20000));\n682: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;Ljava/lang/String;)Z",
                                    "method_body": "1486: public static boolean containsAny(CharSequence cs, String searchChars) {\n1487: if (searchChars == null) {\n1490: return containsAny(cs, searchChars.toCharArray());\n1491: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                                    "method_body": "3278: public static boolean isEmpty(char[] array) {\n3279: if (array == null || array.length == 0) {\n3282: return false;\n3283: }",
                                    "suspicious_rank": 0.365
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;[C)Z",
                                    "method_body": "1440: public static boolean containsAny(CharSequence cs, char[] searchChars) {\n1441: if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n1444: int csLength = cs.length();\n1445: int searchLength = searchChars.length;\n1446: for (int i = 0; i < csLength; i++) {\n1447: char ch = cs.charAt(i);\n1448: for (int j = 0; j < searchLength; j++) {\n1449: if (searchChars[j] == ch) {\n1452: return true;\n1457: }",
                                    "suspicious_rank": 0.577
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<false> but was:<true>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyStringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:680)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyCharArrayWithSupplementaryChars",
                            "test_body": "687: public void testContainsAnyCharArrayWithSupplementaryChars() {\n688: assertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000.toCharArray()));\n689: assertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001.toCharArray()));\n690: assertEquals(true, StringUtils.containsAny(CharU20000, CharU20000.toCharArray()));\n691: // Sanity check:\n692: assertEquals(-1, CharU20000.indexOf(CharU20001));\n693: assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\n694: assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n695: // Test:\n696: assertEquals(false, StringUtils.containsAny(CharU20000, CharU20001.toCharArray()));\n697: assertEquals(false, StringUtils.containsAny(CharU20001, CharU20000.toCharArray()));\n698: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "193: public static boolean isEmpty(CharSequence cs) {\n194: return cs == null || cs.length() == 0;\n195: }",
                                    "suspicious_rank": 0.147
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                                    "method_body": "3278: public static boolean isEmpty(char[] array) {\n3279: if (array == null || array.length == 0) {\n3282: return false;\n3283: }",
                                    "suspicious_rank": 0.365
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;[C)Z",
                                    "method_body": "1440: public static boolean containsAny(CharSequence cs, char[] searchChars) {\n1441: if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n1444: int csLength = cs.length();\n1445: int searchLength = searchChars.length;\n1446: for (int i = 0; i < csLength; i++) {\n1447: char ch = cs.charAt(i);\n1448: for (int j = 0; j < searchLength; j++) {\n1449: if (searchChars[j] == ch) {\n1452: return true;\n1457: }",
                                    "suspicious_rank": 0.577
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<false> but was:<true>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyCharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:696)"
                        }
                    ]
                },
                {
                    "bug_id": 32,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle",
                            "test_body": "500: public void testReflectionObjectCycle() {\n501: ReflectionTestCycleA a = new ReflectionTestCycleA();\n502: ReflectionTestCycleB b = new ReflectionTestCycleB();\n503: a.b = b;\n504: b.a = a;\n505: 506: // Used to caused:\n507: // java.lang.StackOverflowError\n508: // at java.lang.ClassLoader.getCallerClassLoader(Native Method)\n509: // at java.lang.Class.getDeclaredFields(Class.java:992)\n510: // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionAppend(HashCodeBuilder.java:373)\n511: // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:349)\n512: // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:155)\n513: // at\n514: // org.apache.commons.lang.builder.HashCodeBuilderTest$ReflectionTestCycleB.hashCode(HashCodeBuilderTest.java:53)\n515: // at org.apache.commons.lang.builder.HashCodeBuilder.append(HashCodeBuilder.java:422)\n516: // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionAppend(HashCodeBuilder.java:383)\n517: // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:349)\n518: // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:155)\n519: // at\n520: // org.apache.commons.lang.builder.HashCodeBuilderTest$ReflectionTestCycleA.hashCode(HashCodeBuilderTest.java:42)\n521: // at org.apache.commons.lang.builder.HashCodeBuilder.append(HashCodeBuilder.java:422)\n522: 523: a.hashCode();\n524: assertNull(HashCodeBuilder.getRegistry());\n525: b.hashCode();\n526: assertNull(HashCodeBuilder.getRegistry());\n527: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:reflectionHashCode(IILjava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)I",
                                    "method_body": "353: public static <T> int reflectionHashCode(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber, T object,\n356: if (object == null) {\n359: HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);\n360: Class<?> clazz = object.getClass();\n361: reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n362: while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {\n363: clazz = clazz.getSuperclass();\n364: reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n366: return builder.toHashCode();\n367: }",
                                    "suspicious_rank": 0.277
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:getRegistry()Ljava/util/Set;",
                                    "method_body": "136: static Set<IDKey> getRegistry() {\n137: return REGISTRY.get();\n138: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:<init>(II)V",
                                    "method_body": "578: public HashCodeBuilder(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber) {\n579: if (initialNonZeroOddNumber == 0) {\n582: if (initialNonZeroOddNumber % 2 == 0) {\n585: if (multiplierNonZeroOddNumber == 0) {\n588: if (multiplierNonZeroOddNumber % 2 == 0) {\n591: iConstant = multiplierNonZeroOddNumber;\n592: iTotal = initialNonZeroOddNumber;\n593: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.IDKey:hashCode()I",
                                    "method_body": "54: public int hashCode() {\n55: return id;\n56: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:contains([Ljava/lang/Object;Ljava/lang/Object;)Z",
                                    "method_body": "1729: public static boolean contains(Object[] array, Object objectToFind) {\n1730: return indexOf(array, objectToFind) != INDEX_NOT_FOUND;\n1731: }",
                                    "suspicious_rank": 0.213
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.IDKey:<init>(Ljava/lang/Object;)V",
                                    "method_body": "40: public IDKey(Object _value) {\n42: id = System.identityHashCode(_value);\n46: value = _value;\n47: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:unregister(Ljava/lang/Object;)V",
                                    "method_body": "537: static void unregister(Object value) {\n538: getRegistry().remove(new IDKey(value));\n539: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:indexOf([Ljava/lang/Object;Ljava/lang/Object;I)I",
                                    "method_body": "1644: public static int indexOf(Object[] array, Object objectToFind, int startIndex) {\n1645: if (array == null) {\n1646: return INDEX_NOT_FOUND;\n1665: }",
                                    "suspicious_rank": 0.2
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:reflectionHashCode(Ljava/lang/Object;)I",
                                    "method_body": "399: public static int reflectionHashCode(Object object) {\n400: return reflectionHashCode(17, 37, object, false, null, null);\n401: }",
                                    "suspicious_rank": 0.5
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:indexOf([Ljava/lang/Object;Ljava/lang/Object;)I",
                                    "method_body": "1626: public static int indexOf(Object[] array, Object objectToFind) {\n1627: return indexOf(array, objectToFind, 0);\n1628: }",
                                    "suspicious_rank": 0.204
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:reflectionAppend(Ljava/lang/Object;Ljava/lang/Class;Lorg/apache/commons/lang3/builder/HashCodeBuilder;Z[Ljava/lang/String;)V",
                                    "method_body": "171: private static void reflectionAppend(Object object, Class<?> clazz, HashCodeBuilder builder, boolean useTransients,\n173: if (isRegistered(object)) {\n174: return;\n177: register(object);\n178: Field[] fields = clazz.getDeclaredFields();\n179: AccessibleObject.setAccessible(fields, true);\n180: for (Field field : fields) {\n181: if (!ArrayUtils.contains(excludeFields, field.getName())\n186: Object fieldValue = field.get(object);\n187: builder.append(fieldValue);\n192: }\n196: unregister(object);\n197: }\n198: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "151: static boolean isRegistered(Object value) {\n152: return getRegistry().contains(new IDKey(value));\n153: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.IDKey:equals(Ljava/lang/Object;)Z",
                                    "method_body": "64: public boolean equals(Object other) {\n65: if (!(other instanceof IDKey)) {\n68: IDKey idKey = (IDKey) other;\n69: if (id != idKey.id) {\n73: return value == idKey.value;\n74: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:register(Ljava/lang/Object;)V",
                                    "method_body": "521: static void register(Object value) {\n522: getRegistry().add(new IDKey(value));\n523: }",
                                    "suspicious_rank": 0.354
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:toHashCode()I",
                                    "method_body": "965: public int toHashCode() {\n966: return iTotal;\n967: }",
                                    "suspicious_rank": 0.162
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:append(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
                                    "method_body": "854: public HashCodeBuilder append(Object object) {\n855: if (object == null) {\n859: if(object.getClass().isArray()) {\n883: iTotal = iTotal * iConstant + object.hashCode();\n886: return this;\n887: }",
                                    "suspicious_rank": 0.213
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: []\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle(HashCodeBuilderTest.java:524)"
                        }
                    ]
                },
                {
                    "bug_id": 33,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.ClassUtilsTest.testToClass_object",
                            "test_body": "902: public void testToClass_object() {\n903: assertNull(ClassUtils.toClass(null));\n904: 905: assertSame(ArrayUtils.EMPTY_CLASS_ARRAY, ClassUtils.toClass(ArrayUtils.EMPTY_OBJECT_ARRAY));\n906: 907: assertTrue(Arrays.equals(new Class[] { String.class, Integer.class, Double.class },\n908: ClassUtils.toClass(new Object[] { \"Test\", 1, 99d })));\n909: 910: assertTrue(Arrays.equals(new Class[] { String.class, null, Double.class },\n911: ClassUtils.toClass(new Object[] { \"Test\", null, 99d })));\n912: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.ClassUtils:toClass([Ljava/lang/Object;)[Ljava/lang/Class;",
                                    "method_body": "902: public static Class<?>[] toClass(Object[] array) {\n903: if (array == null) {\n904: return null;\n905: } else if (array.length == 0) {\n906: return ArrayUtils.EMPTY_CLASS_ARRAY;\n908: Class<?>[] classes = new Class[array.length];\n909: for (int i = 0; i < array.length; i++) {\n910: classes[i] = array[i].getClass();\n912: return classes;\n913: }",
                                    "suspicious_rank": 1.0
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang3.ClassUtils.toClass(ClassUtils.java:910)\nat org.apache.commons.lang3.ClassUtilsTest.testToClass_object(ClassUtilsTest.java:910)"
                        }
                    ]
                },
                {
                    "bug_id": 34,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray",
                            "test_body": "171: public void testReflectionShortArray() {\n172: short[] array = new short[] { 1, 2, -3, 4 };\n173: String baseStr = this.toBaseString(array);\n174: assertEquals(baseStr + \"[{1,2,-3,4}]\", ToStringBuilder.reflectionToString(array));\n175: array = null;\n176: assertReflectionArray(\"<null>\", array);\n177: this.validateNullToStringStyleRegistry();\n178: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray(ToStringBuilderTest.java:177)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray",
                            "test_body": "153: public void testReflectionLongArray() {\n154: long[] array = new long[] { 1, 2, -3, 4 };\n155: String baseStr = this.toBaseString(array);\n156: assertEquals(baseStr + \"[{1,2,-3,4}]\", ToStringBuilder.reflectionToString(array));\n157: array = null;\n158: assertReflectionArray(\"<null>\", array);\n159: this.validateNullToStringStyleRegistry();\n160: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray(ToStringBuilderTest.java:159)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray",
                            "test_body": "189: public void testReflectionCharArray() {\n190: char[] array = new char[] { 'A', '2', '_', 'D' };\n191: String baseStr = this.toBaseString(array);\n192: assertEquals(baseStr + \"[{A,2,_,D}]\", ToStringBuilder.reflectionToString(array));\n193: array = null;\n194: assertReflectionArray(\"<null>\", array);\n195: this.validateNullToStringStyleRegistry();\n196: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray(ToStringBuilderTest.java:195)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle",
                            "test_body": "530: public void testSelfInstanceTwoVarsReflectionObjectCycle() throws Exception {\n531: SelfInstanceTwoVarsReflectionTestFixture test = new SelfInstanceTwoVarsReflectionTestFixture();\n532: assertEquals(this.toBaseString(test) + \"[typeIsSelf=\" + this.toBaseString(test) + \",otherType=\" + test.getOtherType().toString() + \"]\", test.toString());\n533: this.validateNullToStringStyleRegistry();\n534: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
                                    "method_body": "436: public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\n437: appendFieldStart(buffer, fieldName);\n439: if (value == null) {\n443: appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n446: appendFieldEnd(buffer, fieldName);\n447: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
                                    "method_body": "585: protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\n586: return field.get(this.getObject());\n587: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1509: protected void appendFieldSeparator(StringBuffer buffer) {\n1510: buffer.append(fieldSeparator);\n1511: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldStart(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1519: protected void appendFieldStart(StringBuffer buffer, String fieldName) {\n1520: if (useFieldNames && fieldName != null) {\n1521: buffer.append(fieldName);\n1522: buffer.append(fieldNameValueSeparator);\n1524: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1532: protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n1533: appendFieldSeparator(buffer);\n1534: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
                                    "method_body": "849: public ToStringBuilder append(String fieldName, Object obj) {\n850: style.append(buffer, fieldName, obj, null);\n851: return this;\n852: }",
                                    "suspicious_rank": 0.17
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
                                    "method_body": "1571: protected boolean isFullDetail(Boolean fullDetailRequest) {\n1572: if (fullDetailRequest == null) {\n1573: return defaultFullDetail;\n1576: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
                                    "method_body": "491: protected boolean accept(Field field) {\n492: if (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\n496: if (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\n498: return false;\n500: if (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\n504: if (this.excludeFieldNames != null\n509: return true;\n510: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle(ToStringBuilderTest.java:533)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray",
                            "test_body": "162: public void testReflectionIntArray() {\n163: int[] array = new int[] { 1, 2, -3, 4 };\n164: String baseStr = this.toBaseString(array);\n165: assertEquals(baseStr + \"[{1,2,-3,4}]\", ToStringBuilder.reflectionToString(array));\n166: array = null;\n167: assertReflectionArray(\"<null>\", array);\n168: this.validateNullToStringStyleRegistry();\n169: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray(ToStringBuilderTest.java:168)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy",
                            "test_body": "313: public void testReflectionHierarchy() {\n314: ReflectionTestFixtureA baseA = new ReflectionTestFixtureA();\n315: String baseStr = this.toBaseString(baseA);\n316: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA));\n317: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null));\n318: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false));\n319: assertEquals(baseStr + \"[a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseA, null, true));\n320: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, null));\n321: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, Object.class));\n322: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, ReflectionTestFixtureA.class));\n323: 324: ReflectionTestFixtureB baseB = new ReflectionTestFixtureB();\n325: baseStr = this.toBaseString(baseB);\n326: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n327: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n328: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null));\n329: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false));\n330: assertEquals(baseStr + \"[b=b,transientB=t,a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseB, null, true));\n331: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, null));\n332: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, Object.class));\n333: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureA.class));\n334: assertEquals(baseStr + \"[b=b]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureB.class));\n335: this.validateNullToStringStyleRegistry();\n336: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
                                    "method_body": "436: public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\n437: appendFieldStart(buffer, fieldName);\n439: if (value == null) {\n443: appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n446: appendFieldEnd(buffer, fieldName);\n447: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "197: public static <T> String reflectionToString(\n202: return ReflectionToStringBuilder.toString(object, style, outputTransients, false, reflectUpToClass);\n203: }",
                                    "suspicious_rank": 0.192
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
                                    "method_body": "585: protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\n586: return field.get(this.getObject());\n587: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;",
                                    "method_body": "154: public static String toString(Object object, ToStringStyle style) {\n155: return toString(object, style, false, false, null);\n156: }",
                                    "suspicious_rank": 0.192
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:isAppendTransients()Z",
                                    "method_body": "608: public boolean isAppendTransients() {\n609: return this.appendTransients;\n610: }",
                                    "suspicious_rank": 0.136
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;",
                                    "method_body": "181: public static String reflectionToString(Object object, ToStringStyle style, boolean outputTransients) {\n182: return ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n183: }",
                                    "suspicious_rank": 0.192
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;",
                                    "method_body": "167: public static String reflectionToString(Object object, ToStringStyle style) {\n168: return ReflectionToStringBuilder.toString(object, style);\n169: }",
                                    "suspicious_rank": 0.192
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1509: protected void appendFieldSeparator(StringBuffer buffer) {\n1510: buffer.append(fieldSeparator);\n1511: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldStart(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1519: protected void appendFieldStart(StringBuffer buffer, String fieldName) {\n1520: if (useFieldNames && fieldName != null) {\n1521: buffer.append(fieldName);\n1522: buffer.append(fieldNameValueSeparator);\n1524: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1532: protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n1533: appendFieldSeparator(buffer);\n1534: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
                                    "method_body": "849: public ToStringBuilder append(String fieldName, Object obj) {\n850: style.append(buffer, fieldName, obj, null);\n851: return this;\n852: }",
                                    "suspicious_rank": 0.17
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
                                    "method_body": "1571: protected boolean isFullDetail(Boolean fullDetailRequest) {\n1572: if (fullDetailRequest == null) {\n1573: return defaultFullDetail;\n1576: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
                                    "method_body": "491: protected boolean accept(Field field) {\n492: if (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\n496: if (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\n498: return false;\n500: if (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\n504: if (this.excludeFieldNames != null\n509: return true;\n510: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy(ToStringBuilderTest.java:335)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray",
                            "test_body": "144: public void testReflectionObjectArray() {\n145: Object[] array = new Object[] { null, base, new int[] { 3, 6 } };\n146: String baseStr = this.toBaseString(array);\n147: assertEquals(baseStr + \"[{<null>,5,{3,6}}]\", ToStringBuilder.reflectionToString(array));\n148: array = null;\n149: assertReflectionArray(\"<null>\", array);\n150: this.validateNullToStringStyleRegistry();\n151: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[I)V",
                                    "method_body": "1051: protected void appendDetail(StringBuffer buffer, String fieldName, int[] array) {\n1052: buffer.append(arrayStart);\n1053: for (int i = 0; i < array.length; i++) {\n1054: if (i > 0) {\n1055: buffer.append(arraySeparator);\n1057: appendDetail(buffer, fieldName, array[i]);\n1059: buffer.append(arrayEnd);\n1060: }",
                                    "suspicious_rank": 0.116
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;I)V",
                                    "method_body": "687: protected void appendDetail(StringBuffer buffer, String fieldName, int value) {\n688: buffer.append(value);\n689: }",
                                    "suspicious_rank": 0.091
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray(ToStringBuilderTest.java:150)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray",
                            "test_body": "207: public void testReflectionFloatArray() {\n208: float[] array = new float[] { 1.0f, 2.9876f, -3.00001f, 4.3f };\n209: String baseStr = this.toBaseString(array);\n210: assertEquals(baseStr + \"[{1.0,2.9876,-3.00001,4.3}]\", ToStringBuilder.reflectionToString(array));\n211: array = null;\n212: assertReflectionArray(\"<null>\", array);\n213: this.validateNullToStringStyleRegistry();\n214: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray(ToStringBuilderTest.java:213)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle",
                            "test_body": "542: public void testReflectionObjectCycle() throws Exception {\n543: ReflectionTestCycleA a = new ReflectionTestCycleA();\n544: ReflectionTestCycleB b = new ReflectionTestCycleB();\n545: a.b = b;\n546: b.a = a;\n547: assertEquals(\n548: this.toBaseString(a) + \"[b=\" + this.toBaseString(b) + \"[a=\" + this.toBaseString(a) + \"]]\",\n549: a.toString());\n550: this.validateNullToStringStyleRegistry();\n551: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
                                    "method_body": "436: public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\n437: appendFieldStart(buffer, fieldName);\n439: if (value == null) {\n443: appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n446: appendFieldEnd(buffer, fieldName);\n447: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
                                    "method_body": "585: protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\n586: return field.get(this.getObject());\n587: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1509: protected void appendFieldSeparator(StringBuffer buffer) {\n1510: buffer.append(fieldSeparator);\n1511: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldStart(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1519: protected void appendFieldStart(StringBuffer buffer, String fieldName) {\n1520: if (useFieldNames && fieldName != null) {\n1521: buffer.append(fieldName);\n1522: buffer.append(fieldNameValueSeparator);\n1524: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1532: protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n1533: appendFieldSeparator(buffer);\n1534: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
                                    "method_body": "849: public ToStringBuilder append(String fieldName, Object obj) {\n850: style.append(buffer, fieldName, obj, null);\n851: return this;\n852: }",
                                    "suspicious_rank": 0.17
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
                                    "method_body": "1571: protected boolean isFullDetail(Boolean fullDetailRequest) {\n1572: if (fullDetailRequest == null) {\n1573: return defaultFullDetail;\n1576: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
                                    "method_body": "491: protected boolean accept(Field field) {\n492: if (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\n496: if (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\n498: return false;\n500: if (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\n504: if (this.excludeFieldNames != null\n509: return true;\n510: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle(ToStringBuilderTest.java:550)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray",
                            "test_body": "180: public void testReflectionyteArray() {\n181: byte[] array = new byte[] { 1, 2, -3, 4 };\n182: String baseStr = this.toBaseString(array);\n183: assertEquals(baseStr + \"[{1,2,-3,4}]\", ToStringBuilder.reflectionToString(array));\n184: array = null;\n185: assertReflectionArray(\"<null>\", array);\n186: this.validateNullToStringStyleRegistry();\n187: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray(ToStringBuilderTest.java:186)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray",
                            "test_body": "216: public void testReflectionBooleanArray() {\n217: boolean[] array = new boolean[] { true, false, false };\n218: String baseStr = this.toBaseString(array);\n219: assertEquals(baseStr + \"[{true,false,false}]\", ToStringBuilder.reflectionToString(array));\n220: array = null;\n221: assertReflectionArray(\"<null>\", array);\n222: this.validateNullToStringStyleRegistry();\n223: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray(ToStringBuilderTest.java:222)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle",
                            "test_body": "559: public void testReflectionArrayAndObjectCycle() throws Exception {\n560: Object[] objects = new Object[1];\n561: SimpleReflectionTestFixture simple = new SimpleReflectionTestFixture(objects);\n562: objects[0] = simple;\n563: assertEquals(\n564: this.toBaseString(objects)\n565: + \"[{\"\n566: + this.toBaseString(simple)\n567: + \"[o=\"\n568: + this.toBaseString(objects)\n569: + \"]\"\n570: + \"}]\",\n571: ToStringBuilder.reflectionToString(objects));\n572: assertEquals(\n573: this.toBaseString(simple)\n574: + \"[o={\"\n575: + this.toBaseString(simple)\n576: + \"}]\",\n577: ToStringBuilder.reflectionToString(simple));\n578: this.validateNullToStringStyleRegistry();\n579: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
                                    "method_body": "436: public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\n437: appendFieldStart(buffer, fieldName);\n439: if (value == null) {\n443: appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n446: appendFieldEnd(buffer, fieldName);\n447: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
                                    "method_body": "585: protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\n586: return field.get(this.getObject());\n587: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1509: protected void appendFieldSeparator(StringBuffer buffer) {\n1510: buffer.append(fieldSeparator);\n1511: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldStart(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1519: protected void appendFieldStart(StringBuffer buffer, String fieldName) {\n1520: if (useFieldNames && fieldName != null) {\n1521: buffer.append(fieldName);\n1522: buffer.append(fieldNameValueSeparator);\n1524: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1532: protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n1533: appendFieldSeparator(buffer);\n1534: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
                                    "method_body": "849: public ToStringBuilder append(String fieldName, Object obj) {\n850: style.append(buffer, fieldName, obj, null);\n851: return this;\n852: }",
                                    "suspicious_rank": 0.17
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
                                    "method_body": "1571: protected boolean isFullDetail(Boolean fullDetailRequest) {\n1572: if (fullDetailRequest == null) {\n1573: return defaultFullDetail;\n1576: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
                                    "method_body": "491: protected boolean accept(Field field) {\n492: if (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\n496: if (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\n498: return false;\n500: if (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\n504: if (this.excludeFieldNames != null\n509: return true;\n510: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[Ljava/lang/Object;)V",
                                    "method_body": "896: protected void appendDetail(StringBuffer buffer, String fieldName, Object[] array) {\n897: buffer.append(arrayStart);\n898: for (int i = 0; i < array.length; i++) {\n899: Object item = array[i];\n900: if (i > 0) {\n901: buffer.append(arraySeparator);\n903: if (item == null) {\n907: appendInternal(buffer, fieldName, item, arrayContentDetail);\n910: buffer.append(arrayEnd);\n911: }",
                                    "suspicious_rank": 0.091
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle(ToStringBuilderTest.java:578)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray",
                            "test_body": "198: public void testReflectionDoubleArray() {\n199: double[] array = new double[] { 1.0, 2.9876, -3.00001, 4.3 };\n200: String baseStr = this.toBaseString(array);\n201: assertEquals(baseStr + \"[{1.0,2.9876,-3.00001,4.3}]\", ToStringBuilder.reflectionToString(array));\n202: array = null;\n203: assertReflectionArray(\"<null>\", array);\n204: this.validateNullToStringStyleRegistry();\n205: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray(ToStringBuilderTest.java:204)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle",
                            "test_body": "829: public void testObjectCycle() {\n830: ObjectCycle a = new ObjectCycle();\n831: ObjectCycle b = new ObjectCycle();\n832: a.obj = b;\n833: b.obj = a;\n834: 835: String expected = toBaseString(a) + \"[\" + toBaseString(b) + \"[\" + toBaseString(a) + \"]]\";\n836: assertEquals(expected, a.toString());\n837: validateNullToStringStyleRegistry();\n838: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "592: protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\n593: buffer.append(value);\n594: }",
                                    "suspicious_rank": 0.322
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
                                    "method_body": "473: public ToStringBuilder append(Object obj) {\n474: style.append(buffer, null, obj, null);\n475: return this;\n476: }",
                                    "suspicious_rank": 0.027
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
                                    "method_body": "436: public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\n437: appendFieldStart(buffer, fieldName);\n439: if (value == null) {\n443: appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n446: appendFieldEnd(buffer, fieldName);\n447: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;)V",
                                    "method_body": "227: public ToStringBuilder(Object object) {\n228: this(object, null, null);\n229: }",
                                    "suspicious_rank": 0.02
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1509: protected void appendFieldSeparator(StringBuffer buffer) {\n1510: buffer.append(fieldSeparator);\n1511: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1532: protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n1533: appendFieldSeparator(buffer);\n1534: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
                                    "method_body": "1571: protected boolean isFullDetail(Boolean fullDetailRequest) {\n1572: if (fullDetailRequest == null) {\n1573: return defaultFullDetail;\n1576: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle(ToStringBuilderTest.java:837)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray",
                            "test_body": "273: public void testReflectionCharArrayArray() {\n274: char[][] array = new char[][] { { 'A', 'B' }, null, { 'p' } };\n275: String baseStr = this.toBaseString(array);\n276: assertEquals(baseStr + \"[{{A,B},<null>,{p}}]\", ToStringBuilder.reflectionToString(array));\n277: array = null;\n278: assertReflectionArray(\"<null>\", array);\n279: this.validateNullToStringStyleRegistry();\n280: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;C)V",
                                    "method_body": "771: protected void appendDetail(StringBuffer buffer, String fieldName, char value) {\n772: buffer.append(value);\n773: }",
                                    "suspicious_rank": 0.096
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[C)V",
                                    "method_body": "1234: protected void appendDetail(StringBuffer buffer, String fieldName, char[] array) {\n1235: buffer.append(arrayStart);\n1236: for (int i = 0; i < array.length; i++) {\n1237: if (i > 0) {\n1238: buffer.append(arraySeparator);\n1240: appendDetail(buffer, fieldName, array[i]);\n1242: buffer.append(arrayEnd);\n1243: }",
                                    "suspicious_rank": 0.111
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray(ToStringBuilderTest.java:279)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray",
                            "test_body": "255: public void testReflectionhortArrayArray() {\n256: short[][] array = new short[][] { { 1, 2 }, null, { 5 } };\n257: String baseStr = this.toBaseString(array);\n258: assertEquals(baseStr + \"[{{1,2},<null>,{5}}]\", ToStringBuilder.reflectionToString(array));\n259: array = null;\n260: assertReflectionArray(\"<null>\", array);\n261: this.validateNullToStringStyleRegistry();\n262: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;S)V",
                                    "method_body": "715: protected void appendDetail(StringBuffer buffer, String fieldName, short value) {\n716: buffer.append(value);\n717: }",
                                    "suspicious_rank": 0.096
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[S)V",
                                    "method_body": "1112: protected void appendDetail(StringBuffer buffer, String fieldName, short[] array) {\n1113: buffer.append(arrayStart);\n1114: for (int i = 0; i < array.length; i++) {\n1115: if (i > 0) {\n1116: buffer.append(arraySeparator);\n1118: appendDetail(buffer, fieldName, array[i]);\n1120: buffer.append(arrayEnd);\n1121: }",
                                    "suspicious_rank": 0.111
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray(ToStringBuilderTest.java:261)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray",
                            "test_body": "237: public void testReflectionLongArrayArray() {\n238: long[][] array = new long[][] { { 1, 2 }, null, { 5 } };\n239: String baseStr = this.toBaseString(array);\n240: assertEquals(baseStr + \"[{{1,2},<null>,{5}}]\", ToStringBuilder.reflectionToString(array));\n241: array = null;\n242: assertReflectionArray(\"<null>\", array);\n243: this.validateNullToStringStyleRegistry();\n244: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[J)V",
                                    "method_body": "990: protected void appendDetail(StringBuffer buffer, String fieldName, long[] array) {\n991: buffer.append(arrayStart);\n992: for (int i = 0; i < array.length; i++) {\n993: if (i > 0) {\n994: buffer.append(arraySeparator);\n996: appendDetail(buffer, fieldName, array[i]);\n998: buffer.append(arrayEnd);\n999: }",
                                    "suspicious_rank": 0.05
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;J)V",
                                    "method_body": "659: protected void appendDetail(StringBuffer buffer, String fieldName, long value) {\n660: buffer.append(value);\n661: }",
                                    "suspicious_rank": 0.041
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray(ToStringBuilderTest.java:243)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray",
                            "test_body": "227: public void testReflectionFloatArrayArray() {\n228: float[][] array = new float[][] { { 1.0f, 2.29686f }, null, { Float.NaN } };\n229: String baseStr = this.toBaseString(array);\n230: assertEquals(baseStr + \"[{{1.0,2.29686},<null>,{NaN}}]\", ToStringBuilder.reflectionToString(array));\n231: array = null;\n232: assertReflectionArray(\"<null>\", array);\n233: this.validateNullToStringStyleRegistry();\n234: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[F)V",
                                    "method_body": "1356: protected void appendDetail(StringBuffer buffer, String fieldName, float[] array) {\n1357: buffer.append(arrayStart);\n1358: for (int i = 0; i < array.length; i++) {\n1359: if (i > 0) {\n1360: buffer.append(arraySeparator);\n1362: appendDetail(buffer, fieldName, array[i]);\n1364: buffer.append(arrayEnd);\n1365: }",
                                    "suspicious_rank": 0.111
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;F)V",
                                    "method_body": "827: protected void appendDetail(StringBuffer buffer, String fieldName, float value) {\n828: buffer.append(value);\n829: }",
                                    "suspicious_rank": 0.096
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray(ToStringBuilderTest.java:233)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle",
                            "test_body": "376: public void testReflectionArrayCycle() throws Exception {\n377: Object[] objects = new Object[1];\n378: objects[0] = objects;\n379: assertEquals(\n380: this.toBaseString(objects) + \"[{\" + this.toBaseString(objects) + \"}]\",\n381: ToStringBuilder.reflectionToString(objects));\n382: this.validateNullToStringStyleRegistry();\n383: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle(ToStringBuilderTest.java:382)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray",
                            "test_body": "291: public void testReflectionBooleanArrayArray() {\n292: boolean[][] array = new boolean[][] { { true, false }, null, { false } };\n293: String baseStr = this.toBaseString(array);\n294: assertEquals(baseStr + \"[{{true,false},<null>,{false}}]\", ToStringBuilder.reflectionToString(array));\n295: assertEquals(baseStr + \"[{{true,false},<null>,{false}}]\", ToStringBuilder.reflectionToString(array));\n296: array = null;\n297: assertReflectionArray(\"<null>\", array);\n298: this.validateNullToStringStyleRegistry();\n299: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[Z)V",
                                    "method_body": "1417: protected void appendDetail(StringBuffer buffer, String fieldName, boolean[] array) {\n1418: buffer.append(arrayStart);\n1419: for (int i = 0; i < array.length; i++) {\n1420: if (i > 0) {\n1421: buffer.append(arraySeparator);\n1423: appendDetail(buffer, fieldName, array[i]);\n1425: buffer.append(arrayEnd);\n1426: }",
                                    "suspicious_rank": 0.111
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendInternal(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Z)V",
                                    "method_body": "468: protected void appendInternal(StringBuffer buffer, String fieldName, Object value, boolean detail) {\n469: if (isRegistered(value)\n471: appendCyclicObject(buffer, fieldName, value);\n472: return;\n475: register(value);\n478: if (value instanceof Collection<?>) {\n485: } else if (value instanceof Map<?, ?>) {\n492: } else if (value instanceof long[]) {\n493: if (detail) {\n494: appendDetail(buffer, fieldName, (long[]) value);\n499: } else if (value instanceof int[]) {\n500: if (detail) {\n501: appendDetail(buffer, fieldName, (int[]) value);\n506: } else if (value instanceof short[]) {\n507: if (detail) {\n508: appendDetail(buffer, fieldName, (short[]) value);\n513: } else if (value instanceof byte[]) {\n514: if (detail) {\n515: appendDetail(buffer, fieldName, (byte[]) value);\n520: } else if (value instanceof char[]) {\n521: if (detail) {\n522: appendDetail(buffer, fieldName, (char[]) value);\n527: } else if (value instanceof double[]) {\n528: if (detail) {\n529: appendDetail(buffer, fieldName, (double[]) value);\n534: } else if (value instanceof float[]) {\n535: if (detail) {\n536: appendDetail(buffer, fieldName, (float[]) value);\n541: } else if (value instanceof boolean[]) {\n542: if (detail) {\n543: appendDetail(buffer, fieldName, (boolean[]) value);\n548: } else if (value.getClass().isArray()) {\n549: if (detail) {\n550: appendDetail(buffer, fieldName, (Object[]) value);\n556: if (detail) {\n557: appendDetail(buffer, fieldName, value);\n563: unregister(value);\n564: }\n565: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Z)V",
                                    "method_body": "855: protected void appendDetail(StringBuffer buffer, String fieldName, boolean value) {\n856: buffer.append(value);\n857: }",
                                    "suspicious_rank": 0.061
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray(ToStringBuilderTest.java:298)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle",
                            "test_body": "402: public void testReflectionArrayArrayCycle() throws Exception {\n403: Object[][] objects = new Object[2][2];\n404: objects[0][0] = objects;\n405: objects[0][1] = objects;\n406: objects[1][0] = objects;\n407: objects[1][1] = objects;\n408: String basicToString = this.toBaseString(objects);\n409: assertEquals(\n410: basicToString\n411: + \"[{{\"\n412: + basicToString\n413: + \",\"\n414: + basicToString\n415: + \"},{\"\n416: + basicToString\n417: + \",\"\n418: + basicToString\n419: + \"}}]\",\n420: ToStringBuilder.reflectionToString(objects));\n421: this.validateNullToStringStyleRegistry();\n422: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[Ljava/lang/Object;)V",
                                    "method_body": "896: protected void appendDetail(StringBuffer buffer, String fieldName, Object[] array) {\n897: buffer.append(arrayStart);\n898: for (int i = 0; i < array.length; i++) {\n899: Object item = array[i];\n900: if (i > 0) {\n901: buffer.append(arraySeparator);\n903: if (item == null) {\n907: appendInternal(buffer, fieldName, item, arrayContentDetail);\n910: buffer.append(arrayEnd);\n911: }",
                                    "suspicious_rank": 0.091
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle(ToStringBuilderTest.java:421)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray",
                            "test_body": "264: public void testReflectionByteArrayArray() {\n265: byte[][] array = new byte[][] { { 1, 2 }, null, { 5 } };\n266: String baseStr = this.toBaseString(array);\n267: assertEquals(baseStr + \"[{{1,2},<null>,{5}}]\", ToStringBuilder.reflectionToString(array));\n268: array = null;\n269: assertReflectionArray(\"<null>\", array);\n270: this.validateNullToStringStyleRegistry();\n271: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[B)V",
                                    "method_body": "1173: protected void appendDetail(StringBuffer buffer, String fieldName, byte[] array) {\n1174: buffer.append(arrayStart);\n1175: for (int i = 0; i < array.length; i++) {\n1176: if (i > 0) {\n1177: buffer.append(arraySeparator);\n1179: appendDetail(buffer, fieldName, array[i]);\n1181: buffer.append(arrayEnd);\n1182: }",
                                    "suspicious_rank": 0.111
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;B)V",
                                    "method_body": "743: protected void appendDetail(StringBuffer buffer, String fieldName, byte value) {\n744: buffer.append(value);\n745: }",
                                    "suspicious_rank": 0.096
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray(ToStringBuilderTest.java:270)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle",
                            "test_body": "506: public void testSimpleReflectionObjectCycle() throws Exception {\n507: SimpleReflectionTestFixture simple = new SimpleReflectionTestFixture();\n508: simple.o = simple;\n509: assertEquals(this.toBaseString(simple) + \"[o=\" + this.toBaseString(simple) + \"]\", simple.toString());\n510: this.validateNullToStringStyleRegistry();\n511: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
                                    "method_body": "436: public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\n437: appendFieldStart(buffer, fieldName);\n439: if (value == null) {\n443: appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n446: appendFieldEnd(buffer, fieldName);\n447: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
                                    "method_body": "585: protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\n586: return field.get(this.getObject());\n587: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1509: protected void appendFieldSeparator(StringBuffer buffer) {\n1510: buffer.append(fieldSeparator);\n1511: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldStart(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1519: protected void appendFieldStart(StringBuffer buffer, String fieldName) {\n1520: if (useFieldNames && fieldName != null) {\n1521: buffer.append(fieldName);\n1522: buffer.append(fieldNameValueSeparator);\n1524: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1532: protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n1533: appendFieldSeparator(buffer);\n1534: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
                                    "method_body": "849: public ToStringBuilder append(String fieldName, Object obj) {\n850: style.append(buffer, fieldName, obj, null);\n851: return this;\n852: }",
                                    "suspicious_rank": 0.17
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
                                    "method_body": "1571: protected boolean isFullDetail(Boolean fullDetailRequest) {\n1572: if (fullDetailRequest == null) {\n1573: return defaultFullDetail;\n1576: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
                                    "method_body": "491: protected boolean accept(Field field) {\n492: if (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\n496: if (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\n498: return false;\n500: if (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\n504: if (this.excludeFieldNames != null\n509: return true;\n510: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle(ToStringBuilderTest.java:510)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray",
                            "test_body": "282: public void testReflectionDoubleArrayArray() {\n283: double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } };\n284: String baseStr = this.toBaseString(array);\n285: assertEquals(baseStr + \"[{{1.0,2.29686},<null>,{NaN}}]\", ToStringBuilder.reflectionToString(array));\n286: array = null;\n287: assertReflectionArray(\"<null>\", array);\n288: this.validateNullToStringStyleRegistry();\n289: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[D)V",
                                    "method_body": "1295: protected void appendDetail(StringBuffer buffer, String fieldName, double[] array) {\n1296: buffer.append(arrayStart);\n1297: for (int i = 0; i < array.length; i++) {\n1298: if (i > 0) {\n1299: buffer.append(arraySeparator);\n1301: appendDetail(buffer, fieldName, array[i]);\n1303: buffer.append(arrayEnd);\n1304: }",
                                    "suspicious_rank": 0.111
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;D)V",
                                    "method_body": "799: protected void appendDetail(StringBuffer buffer, String fieldName, double value) {\n800: buffer.append(value);\n801: }",
                                    "suspicious_rank": 0.096
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray(ToStringBuilderTest.java:288)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2",
                            "test_body": "388: public void testReflectionArrayCycleLevel2() throws Exception {\n389: Object[] objects = new Object[1];\n390: Object[] objectsLevel2 = new Object[1];\n391: objects[0] = objectsLevel2;\n392: objectsLevel2[0] = objects;\n393: assertEquals(\n394: this.toBaseString(objects) + \"[{{\" + this.toBaseString(objects) + \"}}]\",\n395: ToStringBuilder.reflectionToString(objects));\n396: assertEquals(\n397: this.toBaseString(objectsLevel2) + \"[{{\" + this.toBaseString(objectsLevel2) + \"}}]\",\n398: ToStringBuilder.reflectionToString(objectsLevel2));\n399: this.validateNullToStringStyleRegistry();\n400: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[Ljava/lang/Object;)V",
                                    "method_body": "896: protected void appendDetail(StringBuffer buffer, String fieldName, Object[] array) {\n897: buffer.append(arrayStart);\n898: for (int i = 0; i < array.length; i++) {\n899: Object item = array[i];\n900: if (i > 0) {\n901: buffer.append(arraySeparator);\n903: if (item == null) {\n907: appendInternal(buffer, fieldName, item, arrayContentDetail);\n910: buffer.append(arrayEnd);\n911: }",
                                    "suspicious_rank": 0.091
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2(ToStringBuilderTest.java:399)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray",
                            "test_body": "246: public void testReflectionIntArrayArray() {\n247: int[][] array = new int[][] { { 1, 2 }, null, { 5 } };\n248: String baseStr = this.toBaseString(array);\n249: assertEquals(baseStr + \"[{{1,2},<null>,{5}}]\", ToStringBuilder.reflectionToString(array));\n250: array = null;\n251: assertReflectionArray(\"<null>\", array);\n252: this.validateNullToStringStyleRegistry();\n253: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
                                    "method_body": "621: public ReflectionToStringBuilder reflectionAppendArray(Object array) {\n622: this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\n623: return this;\n624: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:reflectionAppendArrayDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "922: protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {\n923: buffer.append(arrayStart);\n924: int length = Array.getLength(array);\n925: for (int i = 0; i < length; i++) {\n926: Object item = Array.get(array, i);\n927: if (i > 0) {\n928: buffer.append(arraySeparator);\n930: if (item == null) {\n931: appendNullText(buffer, fieldName);\n934: appendInternal(buffer, fieldName, item, arrayContentDetail);\n937: buffer.append(arrayEnd);\n938: }",
                                    "suspicious_rank": 0.882
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[I)V",
                                    "method_body": "1051: protected void appendDetail(StringBuffer buffer, String fieldName, int[] array) {\n1052: buffer.append(arrayStart);\n1053: for (int i = 0; i < array.length; i++) {\n1054: if (i > 0) {\n1055: buffer.append(arraySeparator);\n1057: appendDetail(buffer, fieldName, array[i]);\n1059: buffer.append(arrayEnd);\n1060: }",
                                    "suspicious_rank": 0.116
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "1044: public ToStringStyle getStyle() {\n1045: return style;\n1046: }",
                                    "suspicious_rank": 0.808
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendNullText(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1500: protected void appendNullText(StringBuffer buffer, String fieldName) {\n1501: buffer.append(nullText);\n1502: }",
                                    "suspicious_rank": 0.238
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;I)V",
                                    "method_body": "687: protected void appendDetail(StringBuffer buffer, String fieldName, int value) {\n688: buffer.append(value);\n689: }",
                                    "suspicious_rank": 0.091
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray(ToStringBuilderTest.java:252)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle",
                            "test_body": "518: public void testSelfInstanceVarReflectionObjectCycle() throws Exception {\n519: SelfInstanceVarReflectionTestFixture test = new SelfInstanceVarReflectionTestFixture();\n520: assertEquals(this.toBaseString(test) + \"[typeIsSelf=\" + this.toBaseString(test) + \"]\", test.toString());\n521: this.validateNullToStringStyleRegistry();\n522: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
                                    "method_body": "565: public Class<?> getUpToClass() {\n566: return this.upToClass;\n567: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:removeLastFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "406: protected void removeLastFieldSeparator(StringBuffer buffer) {\n407: int len = buffer.length();\n408: int sepLen = fieldSeparator.length();\n409: if (len > 0 && sepLen > 0 && len >= sepLen) {\n410: boolean match = true;\n411: for (int i = 0; i < sepLen; i++) {\n412: if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {\n413: match = false;\n414: break;\n417: if (match) {\n418: buffer.setLength(len - sepLen);\n421: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                                    "method_body": "162: static boolean isRegistered(Object value) {\n163: Map<Object, Object> m = getRegistry();\n164: return m.containsKey(value);\n165: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:appendFieldsIn(Ljava/lang/Class;)V",
                                    "method_body": "525: protected void appendFieldsIn(Class<?> clazz) {\n526: if (clazz.isArray()) {\n527: this.reflectionAppendArray(this.getObject());\n528: return;\n530: Field[] fields = clazz.getDeclaredFields();\n531: AccessibleObject.setAccessible(fields, true);\n532: for (Field field : fields) {\n533: String fieldName = field.getName();\n534: if (this.accept(field)) {\n538: Object fieldValue = this.getValue(field);\n539: this.append(fieldName, fieldValue);\n546: }\n549: }",
                                    "suspicious_rank": 0.754
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "374: public void appendStart(StringBuffer buffer, Object object) {\n375: if (object != null) {\n376: appendClassName(buffer, object);\n377: appendIdentityHashCode(buffer, object);\n378: appendContentStart(buffer);\n379: if (fieldSeparatorAtStart) {\n383: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
                                    "method_body": "436: public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\n437: appendFieldStart(buffer, fieldName);\n439: if (value == null) {\n443: appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n446: appendFieldEnd(buffer, fieldName);\n447: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V",
                                    "method_body": "372: private boolean appendStatics = false;\n377: private boolean appendTransients = false;\n387: private Class<?> upToClass = null;\n405: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "287: public static <T> String toString(\n290: return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n292: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
                                    "method_body": "1032: public StringBuffer getStringBuffer() {\n1033: return buffer;\n1034: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1449: protected void appendClassName(StringBuffer buffer, Object object) {\n1450: if (useClassName && object != null) {\n1451: register(object);\n1452: if (useShortClassName) {\n1455: buffer.append(object.getClass().getName());\n1458: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "392: public void appendEnd(StringBuffer buffer, Object object) {\n393: if (this.fieldSeparatorAtEnd == false) {\n394: removeLastFieldSeparator(buffer);\n396: appendContentEnd(buffer);\n397: unregister(object);\n398: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1479: protected void appendContentStart(StringBuffer buffer) {\n1480: buffer.append(contentStart);\n1481: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
                                    "method_body": "585: protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\n586: return field.get(this.getObject());\n587: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:register(Ljava/lang/Object;)V",
                                    "method_body": "176: static void register(Object value) {\n177: if (value != null) {\n179: synchronized (ToStringStyle.class) {\n180: m = REGISTRY.get();\n181: if (m == null) {\n182: m = new WeakHashMap<Object, Object>();\n183: REGISTRY.set(m);\n185: }\n186: m.put(value, null);\n188: }",
                                    "suspicious_rank": 0.449
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "1059: public String toString() {\n1060: if (this.getObject() == null) {\n1063: style.appendEnd(this.getStringBuffer(), this.getObject());\n1065: return this.getStringBuffer().toString();\n1066: }",
                                    "suspicious_rank": 0.447
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
                                    "method_body": "254: public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\n255: if (style == null) {\n256: style = getDefaultStyle();\n258: if (buffer == null) {\n259: buffer = new StringBuffer(512);\n261: this.buffer = buffer;\n262: this.style = style;\n263: this.object = object;\n265: style.appendStart(buffer, object);\n266: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "154: public static String reflectionToString(Object object) {\n155: return ReflectionToStringBuilder.toString(object);\n156: }",
                                    "suspicious_rank": 0.914
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
                                    "method_body": "1023: public Object getObject() {\n1024: return object;\n1025: }",
                                    "suspicious_rank": 0.442
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "214: public static void identityToString(StringBuffer buffer, Object object) {\n215: if (object == null) {\n218: buffer.append(object.getClass().getName())\n221: }",
                                    "suspicious_rank": 0.548
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1488: protected void appendContentEnd(StringBuffer buffer) {\n1489: buffer.append(contentEnd);\n1490: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
                                    "method_body": "647: public void setAppendTransients(boolean appendTransients) {\n648: this.appendTransients = appendTransients;\n649: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
                                    "method_body": "635: public void setAppendStatics(boolean appendStatics) {\n636: this.appendStatics = appendStatics;\n637: }",
                                    "suspicious_rank": 0.858
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
                                    "method_body": "694: public String toString() {\n695: if (this.getObject() == null) {\n698: Class<?> clazz = this.getObject().getClass();\n699: this.appendFieldsIn(clazz);\n700: while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n701: clazz = clazz.getSuperclass();\n702: this.appendFieldsIn(clazz);\n704: return super.toString();\n705: }",
                                    "suspicious_rank": 0.746
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendCyclicObject(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
                                    "method_body": "579: protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {\n580: ObjectUtils.identityToString(buffer, value);\n581: }",
                                    "suspicious_rank": 0.577
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
                                    "method_body": "676: public void setUpToClass(Class<?> clazz) {\n677: if (clazz != null) {\n678: Object object = getObject();\n679: if (object != null && clazz.isInstance(object) == false) {\n683: this.upToClass = clazz;\n684: }",
                                    "suspicious_rank": 0.834
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
                                    "method_body": "1643: protected boolean isUseIdentityHashCode() {\n1644: return useIdentityHashCode;\n1645: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
                                    "method_body": "1509: protected void appendFieldSeparator(StringBuffer buffer) {\n1510: buffer.append(fieldSeparator);\n1511: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldStart(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1519: protected void appendFieldStart(StringBuffer buffer, String fieldName) {\n1520: if (useFieldNames && fieldName != null) {\n1521: buffer.append(fieldName);\n1522: buffer.append(fieldNameValueSeparator);\n1524: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                                    "method_body": "147: static Map<Object, Object> getRegistry() {\n148: return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n149: }",
                                    "suspicious_rank": 0.493
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
                                    "method_body": "1466: protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\n1467: if (this.isUseIdentityHashCode() && object!=null) {\n1468: register(object);\n1469: buffer.append('@');\n1470: buffer.append(Integer.toHexString(System.identityHashCode(object)));\n1472: }",
                                    "suspicious_rank": 0.446
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
                                    "method_body": "1532: protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n1533: appendFieldSeparator(buffer);\n1534: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
                                    "method_body": "849: public ToStringBuilder append(String fieldName, Object obj) {\n850: style.append(buffer, fieldName, obj, null);\n851: return this;\n852: }",
                                    "suspicious_rank": 0.17
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
                                    "method_body": "1571: protected boolean isFullDetail(Boolean fullDetailRequest) {\n1572: if (fullDetailRequest == null) {\n1573: return defaultFullDetail;\n1576: }",
                                    "suspicious_rank": 0.141
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
                                    "method_body": "202: static void unregister(Object value) {\n203: if (value != null) {\n205: synchronized (ToStringStyle.class) {\n206: m = REGISTRY.get();\n207: if (m != null) {\n208: m.remove(value);\n209: if (m.isEmpty()) {\n210: REGISTRY.remove();\n213: }\n215: }",
                                    "suspicious_rank": 0.451
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
                                    "method_body": "122: public static String toString(Object object) {\n123: return toString(object, null, false, false, null);\n124: }",
                                    "suspicious_rank": 0.899
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
                                    "method_body": "491: protected boolean accept(Field field) {\n492: if (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\n496: if (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\n498: return false;\n500: if (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\n504: if (this.excludeFieldNames != null\n509: return true;\n510: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
                                    "method_body": "119: public static ToStringStyle getDefaultStyle() {\n120: return defaultStyle;\n121: }",
                                    "suspicious_rank": 0.456
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle(ToStringBuilderTest.java:521)"
                        }
                    ]
                },
                {
                    "bug_id": 35,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.ArrayUtilsAddTest.testLANG571",
                            "test_body": "227: public void testLANG571(){\n228: String[] stringArray=null;\n229: String aString=null;\n230: try {\n231: @SuppressWarnings(\"unused\")\n232: String[] sa = ArrayUtils.add(stringArray, aString);\n233: fail(\"Should have caused IllegalArgumentException\");\n234: } catch (IllegalArgumentException iae){\n235: //expected\n236: }\n237: try {\n238: @SuppressWarnings(\"unused\")\n239: String[] sa = ArrayUtils.add(stringArray, 0, aString);\n240: fail(\"Should have caused IllegalArgumentException\");\n241: } catch (IllegalArgumentException iae){\n242: //expected\n243: }\n244: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:copyArrayGrow1(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;",
                                    "method_body": "3528: private static Object copyArrayGrow1(Object array, Class<?> newArrayComponentType) {\n3529: if (array != null) {\n3535: return Array.newInstance(newArrayComponentType, 1);\n3536: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:add([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;",
                                    "method_body": "3288: public static <T> T[] add(T[] array, T element) {\n3290: if (array != null){\n3292: } else if (element != null) {\n3295: type = Object.class;\n3298: T[] newArray = (T[]) copyArrayGrow1(array, type);\n3299: newArray[newArray.length - 1] = element;\n3300: return newArray;\n3301: }",
                                    "suspicious_rank": 0.577
                                }
                            ],
                            "stack_trace": "java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljava.lang.String;\nat org.apache.commons.lang3.ArrayUtilsAddTest.testLANG571(ArrayUtilsAddTest.java:232)"
                        }
                    ]
                },
                {
                    "bug_id": 36,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber",
                            "test_body": "176: public void testCreateNumber() {\n177: // a lot of things can go wrong\n178: assertEquals(\"createNumber(String) 1 failed\", new Float(\"1234.5\"), NumberUtils.createNumber(\"1234.5\"));\n179: assertEquals(\"createNumber(String) 2 failed\", new Integer(\"12345\"), NumberUtils.createNumber(\"12345\"));\n180: assertEquals(\"createNumber(String) 3 failed\", new Double(\"1234.5\"), NumberUtils.createNumber(\"1234.5D\"));\n181: assertEquals(\"createNumber(String) 3 failed\", new Double(\"1234.5\"), NumberUtils.createNumber(\"1234.5d\"));\n182: assertEquals(\"createNumber(String) 4 failed\", new Float(\"1234.5\"), NumberUtils.createNumber(\"1234.5F\"));\n183: assertEquals(\"createNumber(String) 4 failed\", new Float(\"1234.5\"), NumberUtils.createNumber(\"1234.5f\"));\n184: assertEquals(\"createNumber(String) 5 failed\", new Long(Integer.MAX_VALUE + 1L), NumberUtils.createNumber(\"\"\n185: + (Integer.MAX_VALUE + 1L)));\n186: assertEquals(\"createNumber(String) 6 failed\", new Long(12345), NumberUtils.createNumber(\"12345L\"));\n187: assertEquals(\"createNumber(String) 6 failed\", new Long(12345), NumberUtils.createNumber(\"12345l\"));\n188: assertEquals(\"createNumber(String) 7 failed\", new Float(\"-1234.5\"), NumberUtils.createNumber(\"-1234.5\"));\n189: assertEquals(\"createNumber(String) 8 failed\", new Integer(\"-12345\"), NumberUtils.createNumber(\"-12345\"));\n190: assertTrue(\"createNumber(String) 9 failed\", 0xFADE == NumberUtils.createNumber(\"0xFADE\").intValue());\n191: assertTrue(\"createNumber(String) 10 failed\", -0xFADE == NumberUtils.createNumber(\"-0xFADE\").intValue());\n192: assertEquals(\"createNumber(String) 11 failed\", new Double(\"1.1E200\"), NumberUtils.createNumber(\"1.1E200\"));\n193: assertEquals(\"createNumber(String) 12 failed\", new Float(\"1.1E20\"), NumberUtils.createNumber(\"1.1E20\"));\n194: assertEquals(\"createNumber(String) 13 failed\", new Double(\"-1.1E200\"), NumberUtils.createNumber(\"-1.1E200\"));\n195: assertEquals(\"createNumber(String) 14 failed\", new Double(\"1.1E-200\"), NumberUtils.createNumber(\"1.1E-200\"));\n196: assertEquals(\"createNumber(null) failed\", null, NumberUtils.createNumber(null));\n197: assertEquals(\"createNumber(String) failed\", new BigInteger(\"12345678901234567890\"), NumberUtils\n198: .createNumber(\"12345678901234567890L\"));\n199: 200: // jdk 1.2 doesn't support this. unsure about jdk 1.2.2\n201: if (SystemUtils.isJavaVersionAtLeast(1.3f)) {\n202: assertEquals(\"createNumber(String) 15 failed\", new BigDecimal(\"1.1E-700\"), NumberUtils\n203: .createNumber(\"1.1E-700F\"));\n204: }\n205: assertEquals(\"createNumber(String) 16 failed\", new Long(\"10\" + Integer.MAX_VALUE), NumberUtils\n206: .createNumber(\"10\" + Integer.MAX_VALUE + \"L\"));\n207: assertEquals(\"createNumber(String) 17 failed\", new Long(\"10\" + Integer.MAX_VALUE), NumberUtils\n208: .createNumber(\"10\" + Integer.MAX_VALUE));\n209: assertEquals(\"createNumber(String) 18 failed\", new BigInteger(\"10\" + Long.MAX_VALUE), NumberUtils\n210: .createNumber(\"10\" + Long.MAX_VALUE));\n211: 212: // LANG-521\n213: assertEquals(\"createNumber(String) LANG-521 failed\", new Float(\"2.\"), NumberUtils.createNumber(\"2.\"));\n214: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.SystemUtils:isJavaVersionAtLeast(F)Z",
                                    "method_body": "1273: public static boolean isJavaVersionAtLeast(float requiredVersion) {\n1274: return JAVA_VERSION_FLOAT >= requiredVersion;\n1275: }",
                                    "suspicious_rank": 0.095
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;",
                                    "method_body": "627: public static Float createFloat(String str) {\n628: if (str == null) {\n631: return Float.valueOf(str);\n632: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;",
                                    "method_body": "677: public static Long createLong(String str) {\n678: if (str == null) {\n681: return Long.valueOf(str);\n682: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;",
                                    "method_body": "660: public static Integer createInteger(String str) {\n661: if (str == null) {\n665: return Integer.decode(str);\n666: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;",
                                    "method_body": "643: public static Double createDouble(String str) {\n644: if (str == null) {\n647: return Double.valueOf(str);\n648: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isDigits(Ljava/lang/String;)Z",
                                    "method_body": "1287: public static boolean isDigits(String str) {\n1288: if (StringUtils.isEmpty(str)) {\n1291: for (int i = 0; i < str.length(); i++) {\n1292: if (!Character.isDigit(str.charAt(i))) {\n1296: return true;\n1297: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "227: public static boolean isBlank(CharSequence str) {\n229: if (str == null || (strLen = str.length()) == 0) {\n230: return true;\n232: for (int i = 0; i < strLen; i++) {\n233: if ((Character.isWhitespace(str.charAt(i)) == false)) {\n234: return false;\n238: }",
                                    "suspicious_rank": 0.316
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;",
                                    "method_body": "709: public static BigDecimal createBigDecimal(String str) {\n710: if (str == null) {\n714: if (StringUtils.isBlank(str)) {\n717: return new BigDecimal(str);\n718: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "448: public static Number createNumber(String str) throws NumberFormatException {\n449: if (str == null) {\n450: return null;\n452: if (StringUtils.isBlank(str)) {\n453: throw new NumberFormatException(\"A blank string is not a valid number\");\n455: if (str.startsWith(\"--\")) {\n460: return null;\n462: if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n463: return createInteger(str);\n465: char lastChar = str.charAt(str.length() - 1);\n469: int decPos = str.indexOf('.');\n470: int expPos = str.indexOf('e') + str.indexOf('E') + 1;\n472: if (decPos > -1) {\n474: if (expPos > -1) {\n475: if (expPos < decPos) {\n476: throw new NumberFormatException(str + \" is not a valid number.\");\n478: dec = str.substring(decPos + 1, expPos);\n480: dec = str.substring(decPos + 1);\n482: mant = str.substring(0, decPos);\n484: if (expPos > -1) {\n485: mant = str.substring(0, expPos);\n487: mant = str;\n489: dec = null;\n491: if (!Character.isDigit(lastChar)) {\n492: if (expPos > -1 && expPos < str.length() - 1) {\n493: exp = str.substring(expPos + 1, str.length() - 1);\n495: exp = null;\n498: String numeric = str.substring(0, str.length() - 1);\n499: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n500: switch (lastChar) {\n503: if (dec == null\n507: return createLong(numeric);\n508: } catch (NumberFormatException nfe) {\n511: return createBigInteger(numeric);\n514: throw new NumberFormatException(str + \" is not a valid number.\");\n518: Float f = NumberUtils.createFloat(numeric);\n519: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n522: return f;\n525: } catch (NumberFormatException nfe) {\n527: }\n532: Double d = NumberUtils.createDouble(numeric);\n533: if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n534: return d;\n536: } catch (NumberFormatException nfe) {\n538: }\n540: return createBigDecimal(numeric);\n541: } catch (NumberFormatException e) {\n546: throw new NumberFormatException(str + \" is not a valid number.\");\n552: if (expPos > -1 && expPos < str.length() - 1) {\n553: exp = str.substring(expPos + 1, str.length());\n555: exp = null;\n557: if (dec == null && exp == null) {\n560: return createInteger(str);\n561: } catch (NumberFormatException nfe) {\n565: return createLong(str);\n566: } catch (NumberFormatException nfe) {\n569: return createBigInteger(str);\n573: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n575: Float f = createFloat(str);\n576: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n577: return f;\n579: } catch (NumberFormatException nfe) {\n581: }\n583: Double d = createDouble(str);\n584: if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n585: return d;\n587: } catch (NumberFormatException nfe) {\n591: return createBigDecimal(str);\n595: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "190: public static boolean isEmpty(CharSequence str) {\n191: return str == null || str.length() == 0;\n192: }",
                                    "suspicious_rank": 0.153
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;",
                                    "method_body": "693: public static BigInteger createBigInteger(String str) {\n694: if (str == null) {\n697: return new BigInteger(str);\n698: }",
                                    "suspicious_rank": 0.816
                                }
                            ],
                            "stack_trace": "java.lang.NumberFormatException: 2. is not a valid number.\nat org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:546)\nat org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:213)"
                        },
                        {
                            "test_name": "org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber",
                            "test_body": "1002: public void testIsNumber() {\n1003: String val = \"12345\";\n1004: assertTrue(\"isNumber(String) 1 failed\", NumberUtils.isNumber(val));\n1005: assertTrue(\"isNumber(String)/createNumber(String) 1 failed\", checkCreateNumber(val));\n1006: val = \"1234.5\";\n1007: assertTrue(\"isNumber(String) 2 failed\", NumberUtils.isNumber(val));\n1008: assertTrue(\"isNumber(String)/createNumber(String) 2 failed\", checkCreateNumber(val));\n1009: val = \".12345\";\n1010: assertTrue(\"isNumber(String) 3 failed\", NumberUtils.isNumber(val));\n1011: assertTrue(\"isNumber(String)/createNumber(String) 3 failed\", checkCreateNumber(val));\n1012: val = \"1234E5\";\n1013: assertTrue(\"isNumber(String) 4 failed\", NumberUtils.isNumber(val));\n1014: assertTrue(\"isNumber(String)/createNumber(String) 4 failed\", checkCreateNumber(val));\n1015: val = \"1234E+5\";\n1016: assertTrue(\"isNumber(String) 5 failed\", NumberUtils.isNumber(val));\n1017: assertTrue(\"isNumber(String)/createNumber(String) 5 failed\", checkCreateNumber(val));\n1018: val = \"1234E-5\";\n1019: assertTrue(\"isNumber(String) 6 failed\", NumberUtils.isNumber(val));\n1020: assertTrue(\"isNumber(String)/createNumber(String) 6 failed\", checkCreateNumber(val));\n1021: val = \"123.4E5\";\n1022: assertTrue(\"isNumber(String) 7 failed\", NumberUtils.isNumber(val));\n1023: assertTrue(\"isNumber(String)/createNumber(String) 7 failed\", checkCreateNumber(val));\n1024: val = \"-1234\";\n1025: assertTrue(\"isNumber(String) 8 failed\", NumberUtils.isNumber(val));\n1026: assertTrue(\"isNumber(String)/createNumber(String) 8 failed\", checkCreateNumber(val));\n1027: val = \"-1234.5\";\n1028: assertTrue(\"isNumber(String) 9 failed\", NumberUtils.isNumber(val));\n1029: assertTrue(\"isNumber(String)/createNumber(String) 9 failed\", checkCreateNumber(val));\n1030: val = \"-.12345\";\n1031: assertTrue(\"isNumber(String) 10 failed\", NumberUtils.isNumber(val));\n1032: assertTrue(\"isNumber(String)/createNumber(String) 10 failed\", checkCreateNumber(val));\n1033: val = \"-1234E5\";\n1034: assertTrue(\"isNumber(String) 11 failed\", NumberUtils.isNumber(val));\n1035: assertTrue(\"isNumber(String)/createNumber(String) 11 failed\", checkCreateNumber(val));\n1036: val = \"0\";\n1037: assertTrue(\"isNumber(String) 12 failed\", NumberUtils.isNumber(val));\n1038: assertTrue(\"isNumber(String)/createNumber(String) 12 failed\", checkCreateNumber(val));\n1039: val = \"-0\";\n1040: assertTrue(\"isNumber(String) 13 failed\", NumberUtils.isNumber(val));\n1041: assertTrue(\"isNumber(String)/createNumber(String) 13 failed\", checkCreateNumber(val));\n1042: val = \"01234\";\n1043: assertTrue(\"isNumber(String) 14 failed\", NumberUtils.isNumber(val));\n1044: assertTrue(\"isNumber(String)/createNumber(String) 14 failed\", checkCreateNumber(val));\n1045: val = \"-01234\";\n1046: assertTrue(\"isNumber(String) 15 failed\", NumberUtils.isNumber(val));\n1047: assertTrue(\"isNumber(String)/createNumber(String) 15 failed\", checkCreateNumber(val));\n1048: val = \"0xABC123\";\n1049: assertTrue(\"isNumber(String) 16 failed\", NumberUtils.isNumber(val));\n1050: assertTrue(\"isNumber(String)/createNumber(String) 16 failed\", checkCreateNumber(val));\n1051: val = \"0x0\";\n1052: assertTrue(\"isNumber(String) 17 failed\", NumberUtils.isNumber(val));\n1053: assertTrue(\"isNumber(String)/createNumber(String) 17 failed\", checkCreateNumber(val));\n1054: val = \"123.4E21D\";\n1055: assertTrue(\"isNumber(String) 19 failed\", NumberUtils.isNumber(val));\n1056: assertTrue(\"isNumber(String)/createNumber(String) 19 failed\", checkCreateNumber(val));\n1057: val = \"-221.23F\";\n1058: assertTrue(\"isNumber(String) 20 failed\", NumberUtils.isNumber(val));\n1059: assertTrue(\"isNumber(String)/createNumber(String) 20 failed\", checkCreateNumber(val));\n1060: val = \"22338L\";\n1061: assertTrue(\"isNumber(String) 21 failed\", NumberUtils.isNumber(val));\n1062: assertTrue(\"isNumber(String)/createNumber(String) 21 failed\", checkCreateNumber(val));\n1063: val = null;\n1064: assertTrue(\"isNumber(String) 1 Neg failed\", !NumberUtils.isNumber(val));\n1065: assertTrue(\"isNumber(String)/createNumber(String) 1 Neg failed\", !checkCreateNumber(val));\n1066: val = \"\";\n1067: assertTrue(\"isNumber(String) 2 Neg failed\", !NumberUtils.isNumber(val));\n1068: assertTrue(\"isNumber(String)/createNumber(String) 2 Neg failed\", !checkCreateNumber(val));\n1069: val = \"--2.3\";\n1070: assertTrue(\"isNumber(String) 3 Neg failed\", !NumberUtils.isNumber(val));\n1071: assertTrue(\"isNumber(String)/createNumber(String) 3 Neg failed\", !checkCreateNumber(val));\n1072: val = \".12.3\";\n1073: assertTrue(\"isNumber(String) 4 Neg failed\", !NumberUtils.isNumber(val));\n1074: assertTrue(\"isNumber(String)/createNumber(String) 4 Neg failed\", !checkCreateNumber(val));\n1075: val = \"-123E\";\n1076: assertTrue(\"isNumber(String) 5 Neg failed\", !NumberUtils.isNumber(val));\n1077: assertTrue(\"isNumber(String)/createNumber(String) 5 Neg failed\", !checkCreateNumber(val));\n1078: val = \"-123E+-212\";\n1079: assertTrue(\"isNumber(String) 6 Neg failed\", !NumberUtils.isNumber(val));\n1080: assertTrue(\"isNumber(String)/createNumber(String) 6 Neg failed\", !checkCreateNumber(val));\n1081: val = \"-123E2.12\";\n1082: assertTrue(\"isNumber(String) 7 Neg failed\", !NumberUtils.isNumber(val));\n1083: assertTrue(\"isNumber(String)/createNumber(String) 7 Neg failed\", !checkCreateNumber(val));\n1084: val = \"0xGF\";\n1085: assertTrue(\"isNumber(String) 8 Neg failed\", !NumberUtils.isNumber(val));\n1086: assertTrue(\"isNumber(String)/createNumber(String) 8 Neg failed\", !checkCreateNumber(val));\n1087: val = \"0xFAE-1\";\n1088: assertTrue(\"isNumber(String) 9 Neg failed\", !NumberUtils.isNumber(val));\n1089: assertTrue(\"isNumber(String)/createNumber(String) 9 Neg failed\", !checkCreateNumber(val));\n1090: val = \".\";\n1091: assertTrue(\"isNumber(String) 10 Neg failed\", !NumberUtils.isNumber(val));\n1092: assertTrue(\"isNumber(String)/createNumber(String) 10 Neg failed\", !checkCreateNumber(val));\n1093: val = \"-0ABC123\";\n1094: assertTrue(\"isNumber(String) 11 Neg failed\", !NumberUtils.isNumber(val));\n1095: assertTrue(\"isNumber(String)/createNumber(String) 11 Neg failed\", !checkCreateNumber(val));\n1096: val = \"123.4E-D\";\n1097: assertTrue(\"isNumber(String) 12 Neg failed\", !NumberUtils.isNumber(val));\n1098: assertTrue(\"isNumber(String)/createNumber(String) 12 Neg failed\", !checkCreateNumber(val));\n1099: val = \"123.4ED\";\n1100: assertTrue(\"isNumber(String) 13 Neg failed\", !NumberUtils.isNumber(val));\n1101: assertTrue(\"isNumber(String)/createNumber(String) 13 Neg failed\", !checkCreateNumber(val));\n1102: val = \"1234E5l\";\n1103: assertTrue(\"isNumber(String) 14 Neg failed\", !NumberUtils.isNumber(val));\n1104: assertTrue(\"isNumber(String)/createNumber(String) 14 Neg failed\", !checkCreateNumber(val));\n1105: val = \"11a\";\n1106: assertTrue(\"isNumber(String) 15 Neg failed\", !NumberUtils.isNumber(val));\n1107: assertTrue(\"isNumber(String)/createNumber(String) 15 Neg failed\", !checkCreateNumber(val)); \n1108: val = \"1a\";\n1109: assertTrue(\"isNumber(String) 16 Neg failed\", !NumberUtils.isNumber(val));\n1110: assertTrue(\"isNumber(String)/createNumber(String) 16 Neg failed\", !checkCreateNumber(val)); \n1111: val = \"a\";\n1112: assertTrue(\"isNumber(String) 17 Neg failed\", !NumberUtils.isNumber(val));\n1113: assertTrue(\"isNumber(String)/createNumber(String) 17 Neg failed\", !checkCreateNumber(val)); \n1114: val = \"11g\";\n1115: assertTrue(\"isNumber(String) 18 Neg failed\", !NumberUtils.isNumber(val));\n1116: assertTrue(\"isNumber(String)/createNumber(String) 18 Neg failed\", !checkCreateNumber(val)); \n1117: val = \"11z\";\n1118: assertTrue(\"isNumber(String) 19 Neg failed\", !NumberUtils.isNumber(val));\n1119: assertTrue(\"isNumber(String)/createNumber(String) 19 Neg failed\", !checkCreateNumber(val)); \n1120: val = \"11def\";\n1121: assertTrue(\"isNumber(String) 20 Neg failed\", !NumberUtils.isNumber(val));\n1122: assertTrue(\"isNumber(String)/createNumber(String) 20 Neg failed\", !checkCreateNumber(val)); \n1123: val = \"11d11\";\n1124: assertTrue(\"isNumber(String) 21 Neg failed\", !NumberUtils.isNumber(val));\n1125: assertTrue(\"isNumber(String)/createNumber(String) 21 Neg failed\", !checkCreateNumber(val)); \n1126: val = \"11 11\";\n1127: assertTrue(\"isNumber(String) 22 Neg failed\", !NumberUtils.isNumber(val));\n1128: assertTrue(\"isNumber(String)/createNumber(String) 22 Neg failed\", !checkCreateNumber(val));\n1129: val = \" 1111\";\n1130: assertTrue(\"isNumber(String) 23 Neg failed\", !NumberUtils.isNumber(val));\n1131: assertTrue(\"isNumber(String)/createNumber(String) 23 Neg failed\", !checkCreateNumber(val));\n1132: val = \"1111 \";\n1133: assertTrue(\"isNumber(String) 24 Neg failed\", !NumberUtils.isNumber(val));\n1134: assertTrue(\"isNumber(String)/createNumber(String) 24 Neg failed\", !checkCreateNumber(val));\n1135: 1136: // LANG-521\n1137: val = \"2.\";\n1138: assertTrue(\"isNumber(String) LANG-521 failed\", NumberUtils.isNumber(val));\n1139: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;",
                                    "method_body": "627: public static Float createFloat(String str) {\n628: if (str == null) {\n631: return Float.valueOf(str);\n632: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;",
                                    "method_body": "677: public static Long createLong(String str) {\n678: if (str == null) {\n681: return Long.valueOf(str);\n682: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;",
                                    "method_body": "660: public static Integer createInteger(String str) {\n661: if (str == null) {\n665: return Integer.decode(str);\n666: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "605: private static boolean isAllZeros(String str) {\n606: if (str == null) {\n609: for (int i = str.length() - 1; i >= 0; i--) {\n610: if (str.charAt(i) != '0') {\n611: return false;\n614: return str.length() > 0;\n615: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;",
                                    "method_body": "643: public static Double createDouble(String str) {\n644: if (str == null) {\n647: return Double.valueOf(str);\n648: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isDigits(Ljava/lang/String;)Z",
                                    "method_body": "1287: public static boolean isDigits(String str) {\n1288: if (StringUtils.isEmpty(str)) {\n1291: for (int i = 0; i < str.length(); i++) {\n1292: if (!Character.isDigit(str.charAt(i))) {\n1296: return true;\n1297: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:isNumber(Ljava/lang/String;)Z",
                                    "method_body": "1312: public static boolean isNumber(String str) {\n1313: if (StringUtils.isEmpty(str)) {\n1314: return false;\n1316: char[] chars = str.toCharArray();\n1317: int sz = chars.length;\n1318: boolean hasExp = false;\n1319: boolean hasDecPoint = false;\n1320: boolean allowSigns = false;\n1321: boolean foundDigit = false;\n1323: int start = (chars[0] == '-') ? 1 : 0;\n1324: if (sz > start + 1) {\n1325: if (chars[start] == '0' && chars[start + 1] == 'x') {\n1326: int i = start + 2;\n1327: if (i == sz) {\n1331: for (; i < chars.length; i++) {\n1332: if ((chars[i] < '0' || chars[i] > '9')\n1335: return false;\n1338: return true;\n1341: sz--; // don't want to loop to the last char, check it afterwords\n1343: int i = start;\n1346: while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {\n1347: if (chars[i] >= '0' && chars[i] <= '9') {\n1348: foundDigit = true;\n1349: allowSigns = false;\n1351: } else if (chars[i] == '.') {\n1352: if (hasDecPoint || hasExp) {\n1354: return false;\n1356: hasDecPoint = true;\n1357: } else if (chars[i] == 'e' || chars[i] == 'E') {\n1359: if (hasExp) {\n1363: if (!foundDigit) {\n1366: hasExp = true;\n1367: allowSigns = true;\n1368: } else if (chars[i] == '+' || chars[i] == '-') {\n1369: if (!allowSigns) {\n1370: return false;\n1372: allowSigns = false;\n1373: foundDigit = false; // we need a digit after the E\n1375: return false;\n1377: i++;\n1379: if (i < chars.length) {\n1380: if (chars[i] >= '0' && chars[i] <= '9') {\n1382: return true;\n1384: if (chars[i] == 'e' || chars[i] == 'E') {\n1386: return false;\n1388: if (!allowSigns\n1393: return foundDigit;\n1395: if (chars[i] == 'l'\n1398: return foundDigit && !hasExp;\n1401: return false;\n1406: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isBlank(Ljava/lang/CharSequence;)Z",
                                    "method_body": "227: public static boolean isBlank(CharSequence str) {\n229: if (str == null || (strLen = str.length()) == 0) {\n230: return true;\n232: for (int i = 0; i < strLen; i++) {\n233: if ((Character.isWhitespace(str.charAt(i)) == false)) {\n234: return false;\n238: }",
                                    "suspicious_rank": 0.316
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;",
                                    "method_body": "709: public static BigDecimal createBigDecimal(String str) {\n710: if (str == null) {\n714: if (StringUtils.isBlank(str)) {\n717: return new BigDecimal(str);\n718: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "448: public static Number createNumber(String str) throws NumberFormatException {\n449: if (str == null) {\n450: return null;\n452: if (StringUtils.isBlank(str)) {\n453: throw new NumberFormatException(\"A blank string is not a valid number\");\n455: if (str.startsWith(\"--\")) {\n460: return null;\n462: if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n463: return createInteger(str);\n465: char lastChar = str.charAt(str.length() - 1);\n469: int decPos = str.indexOf('.');\n470: int expPos = str.indexOf('e') + str.indexOf('E') + 1;\n472: if (decPos > -1) {\n474: if (expPos > -1) {\n475: if (expPos < decPos) {\n476: throw new NumberFormatException(str + \" is not a valid number.\");\n478: dec = str.substring(decPos + 1, expPos);\n480: dec = str.substring(decPos + 1);\n482: mant = str.substring(0, decPos);\n484: if (expPos > -1) {\n485: mant = str.substring(0, expPos);\n487: mant = str;\n489: dec = null;\n491: if (!Character.isDigit(lastChar)) {\n492: if (expPos > -1 && expPos < str.length() - 1) {\n493: exp = str.substring(expPos + 1, str.length() - 1);\n495: exp = null;\n498: String numeric = str.substring(0, str.length() - 1);\n499: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n500: switch (lastChar) {\n503: if (dec == null\n507: return createLong(numeric);\n508: } catch (NumberFormatException nfe) {\n511: return createBigInteger(numeric);\n514: throw new NumberFormatException(str + \" is not a valid number.\");\n518: Float f = NumberUtils.createFloat(numeric);\n519: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n522: return f;\n525: } catch (NumberFormatException nfe) {\n527: }\n532: Double d = NumberUtils.createDouble(numeric);\n533: if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n534: return d;\n536: } catch (NumberFormatException nfe) {\n538: }\n540: return createBigDecimal(numeric);\n541: } catch (NumberFormatException e) {\n546: throw new NumberFormatException(str + \" is not a valid number.\");\n552: if (expPos > -1 && expPos < str.length() - 1) {\n553: exp = str.substring(expPos + 1, str.length());\n555: exp = null;\n557: if (dec == null && exp == null) {\n560: return createInteger(str);\n561: } catch (NumberFormatException nfe) {\n565: return createLong(str);\n566: } catch (NumberFormatException nfe) {\n569: return createBigInteger(str);\n573: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n575: Float f = createFloat(str);\n576: if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n577: return f;\n579: } catch (NumberFormatException nfe) {\n581: }\n583: Double d = createDouble(str);\n584: if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n585: return d;\n587: } catch (NumberFormatException nfe) {\n591: return createBigDecimal(str);\n595: }",
                                    "suspicious_rank": 0.816
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                                    "method_body": "190: public static boolean isEmpty(CharSequence str) {\n191: return str == null || str.length() == 0;\n192: }",
                                    "suspicious_rank": 0.153
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;",
                                    "method_body": "693: public static BigInteger createBigInteger(String str) {\n694: if (str == null) {\n697: return new BigInteger(str);\n698: }",
                                    "suspicious_rank": 0.816
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: isNumber(String) LANG-521 failed\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.TestCase.assertTrue(TestCase.java:192)\nat org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(NumberUtilsTest.java:1138)"
                        }
                    ]
                },
                {
                    "bug_id": 37,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.ArrayUtilsAddTest.testJira567",
                            "test_body": "32: public void testJira567(){\n33: Number[] n;\n34: // Valid array construction\n35: n = ArrayUtils.addAll(new Number[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});\n36: assertEquals(2,n.length);\n37: assertEquals(Number.class,n.getClass().getComponentType());\n38: try {\n39: // Invalid - can't store Long in Integer array\n40: n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});\n41: fail(\"Should have generated IllegalArgumentException\");\n42: } catch (IllegalArgumentException expected) {\n43: }\n44: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.ArrayUtils:addAll([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;",
                                    "method_body": "2953: public static <T> T[] addAll(T[] array1, T... array2) {\n2954: if (array1 == null) {\n2956: } else if (array2 == null) {\n2959: final Class<?> type1 = array1.getClass().getComponentType();\n2960: T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n2961: System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n2962: System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n2964: return joinedArray;\n2965: }",
                                    "suspicious_rank": 0.5
                                }
                            ],
                            "stack_trace": "java.lang.ArrayStoreException\nat java.lang.System.arraycopy(Native Method)\nat org.apache.commons.lang3.ArrayUtils.addAll(ArrayUtils.java:2962)\nat org.apache.commons.lang3.ArrayUtilsAddTest.testJira567(ArrayUtilsAddTest.java:40)"
                        }
                    ]
                },
                {
                    "bug_id": 38,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.time.FastDateFormatTest.testLang538",
                            "test_body": "339: public void testLang538() {\n340: final String dateTime = \"2009-10-16T16:42:16.000Z\";\n341: 342: // more commonly constructed with: cal = new GregorianCalendar(2009, 9, 16, 8, 42, 16)\n343: // for the unit test to work in any time zone, constructing with GMT-8 rather than default locale time zone\n344: GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(\"GMT-8\"));\n345: cal.clear();\n346: cal.set(2009, 9, 16, 8, 42, 16);\n347: 348: FastDateFormat format = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", TimeZone.getTimeZone(\"GMT\"));\n349: assertEquals(\"dateTime\", dateTime, format.format(cal));\n350: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Calendar;)Ljava/lang/String;",
                                    "method_body": "831: public String format(Calendar calendar) {\n832: return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();\n833: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:hashCode()I",
                                    "method_body": "1001: public int hashCode() {\n1002: int total = 0;\n1003: total += mPattern.hashCode();\n1004: total += mTimeZone.hashCode();\n1005: total += (mTimeZoneForced ? 1 : 0);\n1006: total += mLocale.hashCode();\n1007: total += (mLocaleForced ? 1 : 0);\n1008: return total;\n1009: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral:<init>(C)V",
                                    "method_body": "1068: void appendTo(StringBuffer buffer, int value);\n1083: CharacterLiteral(char value) {\n1084: mValue = value;\n1085: }\n1091: return 1;\n1098: buffer.append(mValue);\n1099: }\n1100: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1422: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1423: appendTo(buffer, calendar.get(Calendar.MONTH) + 1);\n1424: }",
                                    "suspicious_rank": 0.18
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:selectNumberRule(II)Lorg/apache/commons/lang3/time/FastDateFormat$NumberRule;",
                                    "method_body": "766: protected NumberRule selectNumberRule(int field, int padding) {\n767: switch (padding) {\n771: return new TwoDigitNumberField(field);\n773: return new PaddedNumberField(field, padding);\n775: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:<init>(II)V",
                                    "method_body": "1272: PaddedNumberField(int field, int size) {\n1273: if (size < 3) {\n1277: mField = field;\n1278: mSize = size;\n1279: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1353: public final void appendTo(StringBuffer buffer, int value) {\n1354: if (value < 100) {\n1355: buffer.append((char)(value / 10 + '0'));\n1356: buffer.append((char)(value % 10 + '0'));\n1360: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:estimateLength()I",
                                    "method_body": "1339: public int estimateLength() {\n1340: return 2;\n1341: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:applyRules(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "886: protected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {\n887: Rule[] rules = mRules;\n888: int len = mRules.length;\n889: for (int i = 0; i < len; i++) {\n890: rules[i].appendTo(buf, calendar);\n892: return buf;\n893: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:<init>(I)V",
                                    "method_body": "1332: TwoDigitNumberField(int field) {\n1333: mField = field;\n1334: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
                                    "method_body": "870: public StringBuffer format(Calendar calendar, StringBuffer buf) {\n871: if (mTimeZoneForced) {\n872: calendar = (Calendar) calendar.clone();\n873: calendar.setTimeZone(mTimeZone);\n875: return applyRules(calendar, buf);\n876: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1068: void appendTo(StringBuffer buffer, int value);\n1083: CharacterLiteral(char value) {\n1084: mValue = value;\n1085: }\n1091: return 1;\n1098: buffer.append(mValue);\n1099: }\n1100: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "534: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n535: super();\n536: if (pattern == null) {\n539: mPattern = pattern;\n541: mTimeZoneForced = (timeZone != null);\n542: if (timeZone == null) {\n545: mTimeZone = timeZone;\n547: mLocaleForced = (locale != null);\n548: if (locale == null) {\n549: locale = Locale.getDefault();\n551: mLocale = locale;\n552: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:estimateLength()I",
                                    "method_body": "1284: public int estimateLength() {\n1285: return 4;\n1286: }",
                                    "suspicious_rank": 0.151
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.Validate:isTrue(ZLjava/lang/String;J)V",
                                    "method_body": "120: public static void isTrue(boolean expression, String message, long value) {\n121: if (expression == false) {\n124: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "212: public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) {\n213: FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);\n214: FastDateFormat format = cInstanceCache.get(emptyFormat);\n215: if (format == null) {\n216: format = emptyFormat;\n217: format.init();  // convert shell format into usable one\n218: cInstanceCache.put(format, format);  // this is OK!\n220: return format;\n221: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1429: public final void appendTo(StringBuffer buffer, int value) {\n1430: buffer.append((char)(value / 10 + '0'));\n1431: buffer.append((char)(value % 10 + '0'));\n1432: }",
                                    "suspicious_rank": 0.18
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:appendTo(Ljava/lang/StringBuffer;I)V",
                                    "method_body": "1298: public final void appendTo(StringBuffer buffer, int value) {\n1299: if (value < 100) {\n1300: for (int i = mSize; --i >= 2; ) {\n1301: buffer.append('0');\n1303: buffer.append((char)(value / 10 + '0'));\n1304: buffer.append((char)(value % 10 + '0'));\n1307: if (value < 1000) {\n1310: Validate.isTrue(value > -1, \"Negative values should not be possible\", value);\n1311: digits = Integer.toString(value).length();\n1313: for (int i = mSize; --i >= digits; ) {\n1316: buffer.append(Integer.toString(value));\n1318: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1346: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1347: appendTo(buffer, calendar.get(mField));\n1348: }",
                                    "suspicious_rank": 0.171
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral:estimateLength()I",
                                    "method_body": "1068: void appendTo(StringBuffer buffer, int value);\n1083: CharacterLiteral(char value) {\n1084: mValue = value;\n1085: }\n1091: return 1;\n1098: buffer.append(mValue);\n1099: }\n1100: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:init()V",
                                    "method_body": "557: protected void init() {\n558: List<Rule> rulesList = parsePattern();\n559: mRules = rulesList.toArray(new Rule[rulesList.size()]);\n561: int len = 0;\n562: for (int i=mRules.length; --i >= 0; ) {\n563: len += mRules[i].estimateLength();\n566: mMaxLengthEstimate = len;\n567: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parseToken(Ljava/lang/String;[I)Ljava/lang/String;",
                                    "method_body": "707: protected String parseToken(String pattern, int[] indexRef) {\n708: StringBuilder buf = new StringBuilder();\n710: int i = indexRef[0];\n711: int length = pattern.length();\n713: char c = pattern.charAt(i);\n714: if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {\n717: buf.append(c);\n719: while (i + 1 < length) {\n720: char peek = pattern.charAt(i + 1);\n721: if (peek == c) {\n722: buf.append(c);\n723: i++;\n727: }\n730: buf.append('\\'');\n732: boolean inLiteral = false;\n734: for (; i < length; i++) {\n735: c = pattern.charAt(i);\n737: if (c == '\\'') {\n738: if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {\n743: inLiteral = !inLiteral;\n745: } else if (!inLiteral &&\n747: i--;\n748: break;\n750: buf.append(c);\n755: indexRef[0] = i;\n756: return buf.toString();\n757: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;",
                                    "method_body": "181: public static FastDateFormat getInstance(String pattern, TimeZone timeZone) {\n182: return getInstance(pattern, timeZone, null);\n183: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField:estimateLength()I",
                                    "method_body": "1415: public int estimateLength() {\n1416: return 2;\n1417: }",
                                    "suspicious_rank": 0.152
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parsePattern()Ljava/util/List;",
                                    "method_body": "577: protected List<Rule> parsePattern() {\n578: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n579: List<Rule> rules = new ArrayList<Rule>();\n581: String[] ERAs = symbols.getEras();\n582: String[] months = symbols.getMonths();\n583: String[] shortMonths = symbols.getShortMonths();\n584: String[] weekdays = symbols.getWeekdays();\n585: String[] shortWeekdays = symbols.getShortWeekdays();\n586: String[] AmPmStrings = symbols.getAmPmStrings();\n588: int length = mPattern.length();\n589: int[] indexRef = new int[1];\n591: for (int i = 0; i < length; i++) {\n592: indexRef[0] = i;\n593: String token = parseToken(mPattern, indexRef);\n594: i = indexRef[0];\n596: int tokenLen = token.length();\n597: if (tokenLen == 0) {\n602: char c = token.charAt(0);\n604: switch (c) {\n609: if (tokenLen >= 4) {\n610: rule = selectNumberRule(Calendar.YEAR, tokenLen);\n616: if (tokenLen >= 4) {\n618: } else if (tokenLen == 3) {\n620: } else if (tokenLen == 2) {\n621: rule = TwoDigitMonthField.INSTANCE;\n627: rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n628: break;\n633: rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);\n634: break;\n636: rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n637: break;\n639: rule = selectNumberRule(Calendar.SECOND, tokenLen);\n640: break;\n642: rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);\n643: break;\n683: String sub = token.substring(1);\n684: if (sub.length() == 1) {\n685: rule = new CharacterLiteral(sub.charAt(0));\n694: rules.add(rule);\n697: return rules;\n698: }",
                                    "suspicious_rank": 0.149
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V",
                                    "method_body": "1291: public void appendTo(StringBuffer buffer, Calendar calendar) {\n1292: appendTo(buffer, calendar.get(mField));\n1293: }",
                                    "suspicious_rank": 0.171
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: dateTime expected:<2009-10-16T[16]:42:16.000Z> but was:<2009-10-16T[08]:42:16.000Z>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.lang3.time.FastDateFormatTest.testLang538(FastDateFormatTest.java:349)"
                        }
                    ]
                },
                {
                    "bug_id": 39,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray",
                            "test_body": "1009: public void testReplace_StringStringArrayStringArray() {\n1010: 1011: 1012: //JAVADOC TESTS START\n1013: assertNull(StringUtils.replaceEach(null, new String[]{\"a\"}, new String[]{\"b\"}));\n1014: assertEquals(StringUtils.replaceEach(\"\", new String[]{\"a\"}, new String[]{\"b\"}),\"\");\n1015: assertEquals(StringUtils.replaceEach(\"aba\", null, null),\"aba\");\n1016: assertEquals(StringUtils.replaceEach(\"aba\", new String[0], null),\"aba\");\n1017: assertEquals(StringUtils.replaceEach(\"aba\", null, new String[0]),\"aba\");\n1018: assertEquals(StringUtils.replaceEach(\"aba\", new String[]{\"a\"}, null),\"aba\");\n1019: 1020: assertEquals(StringUtils.replaceEach(\"aba\", new String[]{\"a\"}, new String[]{\"\"}),\"b\");\n1021: assertEquals(StringUtils.replaceEach(\"aba\", new String[]{null}, new String[]{\"a\"}),\"aba\");\n1022: assertEquals(StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"w\", \"t\"}),\"wcte\");\n1023: assertEquals(StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"t\"}),\"dcte\");\n1024: //JAVADOC TESTS END\n1025: 1026: assertEquals(\"bcc\", StringUtils.replaceEach(\"abc\", new String[]{\"a\", \"b\"}, new String[]{\"b\", \"c\"}));\n1027: assertEquals(\"q651.506bera\", StringUtils.replaceEach(\"d216.102oren\",\n1028: new String[]{\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \n1029: \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"A\", \"B\", \"C\", \"D\", \n1030: \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \n1031: \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"},\n1032: new String[]{\"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"a\", \n1033: \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"N\", \"O\", \"P\", \"Q\", \n1034: \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \n1035: \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"5\", \"6\", \"7\", \"8\", \"9\", \"1\", \"2\", \"3\", \"4\"}));\n1036: 1037: // Test null safety inside arrays - LANG-552\n1038: assertEquals(StringUtils.replaceEach(\"aba\", new String[]{\"a\"}, new String[]{null}),\"aba\");\n1039: assertEquals(StringUtils.replaceEach(\"aba\", new String[]{\"a\", \"b\"}, new String[]{\"c\", null}),\"cbc\");\n1040: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:replaceEach(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "3501: public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n3502: return replaceEach(text, searchList, replacementList, false, 0);\n3503: }",
                                    "suspicious_rank": 1.0
                                },
                                {
                                    "method_signature": "org.apache.commons.lang3.StringUtils:replaceEach(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZI)Ljava/lang/String;",
                                    "method_body": "3605: private static String replaceEach(String text, String[] searchList, String[] replacementList,\n3612: if (text == null || text.length() == 0 || searchList == null ||\n3615: return text;\n3619: if (timeToLive < 0) {\n3623: int searchLength = searchList.length;\n3624: int replacementLength = replacementList.length;\n3627: if (searchLength != replacementLength) {\n3635: boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];\n3638: int textIndex = -1;\n3639: int replaceIndex = -1;\n3640: int tempIndex = -1;\n3644: for (int i = 0; i < searchLength; i++) {\n3645: if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||\n3648: continue;\n3650: tempIndex = text.indexOf(searchList[i]);\n3653: if (tempIndex == -1) {\n3654: noMoreMatchesForReplIndex[i] = true;\n3656: if (textIndex == -1 || tempIndex < textIndex) {\n3657: textIndex = tempIndex;\n3658: replaceIndex = i;\n3665: if (textIndex == -1) {\n3666: return text;\n3669: int start = 0;\n3672: int increase = 0;\n3675: for (int i = 0; i < searchList.length; i++) {\n3676: int greater = replacementList[i].length() - searchList[i].length();\n3677: if (greater > 0) {\n3682: increase = Math.min(increase, text.length() / 5);\n3684: StringBuilder buf = new StringBuilder(text.length() + increase);\n3686: while (textIndex != -1) {\n3688: for (int i = start; i < textIndex; i++) {\n3689: buf.append(text.charAt(i));\n3691: buf.append(replacementList[replaceIndex]);\n3693: start = textIndex + searchList[replaceIndex].length();\n3695: textIndex = -1;\n3696: replaceIndex = -1;\n3697: tempIndex = -1;\n3700: for (int i = 0; i < searchLength; i++) {\n3701: if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||\n3706: tempIndex = text.indexOf(searchList[i], start);\n3709: if (tempIndex == -1) {\n3710: noMoreMatchesForReplIndex[i] = true;\n3712: if (textIndex == -1 || tempIndex < textIndex) {\n3713: textIndex = tempIndex;\n3714: replaceIndex = i;\n3721: int textLength = text.length();\n3722: for (int i = start; i < textLength; i++) {\n3723: buf.append(text.charAt(i));\n3725: String result = buf.toString();\n3726: if (!repeat) {\n3727: return result;\n3731: }",
                                    "suspicious_rank": 0.707
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang3.StringUtils.replaceEach(StringUtils.java:3676)\nat org.apache.commons.lang3.StringUtils.replaceEach(StringUtils.java:3502)\nat org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray(StringUtilsTest.java:1039)"
                        }
                    ]
                },
                {
                    "bug_id": 40,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence",
                            "test_body": "316: public void testContainsIgnoreCase_LocaleIndependence() {\n317: Locale orig = Locale.getDefault();\n318: 319: Locale[] locales = { Locale.ENGLISH, new Locale(\"tr\"), Locale.getDefault() };\n320: 321: String[][] tdata = { \n322: { \"i\", \"I\" },\n323: { \"I\", \"i\" },\n324: { \"\\u03C2\", \"\\u03C3\" },\n325: { \"\\u03A3\", \"\\u03C2\" },\n326: { \"\\u03A3\", \"\\u03C3\" },\n327: };\n328: 329: String[][] fdata = { \n330: { \"\\u00DF\", \"SS\" },\n331: };\n332: 333: try {\n334: for (int i = 0; i < locales.length; i++) {\n335: Locale.setDefault(locales[i]);\n336: for (int j = 0; j < tdata.length; j++) {\n337: assertTrue(Locale.getDefault() + \": \" + j + \" \" + tdata[j][0] + \" \" + tdata[j][1], StringUtils\n338: .containsIgnoreCase(tdata[j][0], tdata[j][1]));\n339: }\n340: for (int j = 0; j < fdata.length; j++) {\n341: assertFalse(Locale.getDefault() + \": \" + j + \" \" + fdata[j][0] + \" \" + fdata[j][1], StringUtils\n342: .containsIgnoreCase(fdata[j][0], fdata[j][1]));\n343: }\n344: }\n345: } finally {\n346: Locale.setDefault(orig);\n347: }\n348: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:containsIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z",
                                    "method_body": "1044: public static boolean containsIgnoreCase(String str, String searchStr) {\n1045: if (str == null || searchStr == null) {\n1048: return contains(str.toUpperCase(), searchStr.toUpperCase());\n1049: }",
                                    "suspicious_rank": 0.707
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:contains(Ljava/lang/String;Ljava/lang/String;)Z",
                                    "method_body": "1014: public static boolean contains(String str, String searchStr) {\n1015: if (str == null || searchStr == null) {\n1018: return str.indexOf(searchStr) >= 0;\n1019: }",
                                    "suspicious_rank": 0.5
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: en: 0 \u00df SS\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertFalse(Assert.java:39)\nat junit.framework.TestCase.assertFalse(TestCase.java:210)\nat org.apache.commons.lang.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence(StringUtilsEqualsIndexOfTest.java:341)"
                        }
                    ]
                },
                {
                    "bug_id": 41,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.ClassUtilsTest.test_getShortClassName_Class",
                            "test_body": "91: public void test_getShortClassName_Class() {\n92: assertEquals(\"ClassUtils\", ClassUtils.getShortClassName(ClassUtils.class));\n93: assertEquals(\"Map.Entry\", ClassUtils.getShortClassName(Map.Entry.class));\n94: assertEquals(\"\", ClassUtils.getShortClassName((Class) null));\n95: 96: // LANG-535\n97: assertEquals(\"String[]\", ClassUtils.getShortClassName(String[].class));\n98: assertEquals(\"Map.Entry[]\", ClassUtils.getShortClassName(Map.Entry[].class));\n99: 100: // Primitives\n101: assertEquals(\"boolean\", ClassUtils.getShortClassName(boolean.class));\n102: assertEquals(\"byte\", ClassUtils.getShortClassName(byte.class));\n103: assertEquals(\"char\", ClassUtils.getShortClassName(char.class));\n104: assertEquals(\"short\", ClassUtils.getShortClassName(short.class));\n105: assertEquals(\"int\", ClassUtils.getShortClassName(int.class));\n106: assertEquals(\"long\", ClassUtils.getShortClassName(long.class));\n107: assertEquals(\"float\", ClassUtils.getShortClassName(float.class));\n108: assertEquals(\"double\", ClassUtils.getShortClassName(double.class));\n109: 110: // Primitive Arrays\n111: assertEquals(\"boolean[]\", ClassUtils.getShortClassName(boolean[].class));\n112: assertEquals(\"byte[]\", ClassUtils.getShortClassName(byte[].class));\n113: assertEquals(\"char[]\", ClassUtils.getShortClassName(char[].class));\n114: assertEquals(\"short[]\", ClassUtils.getShortClassName(short[].class));\n115: assertEquals(\"int[]\", ClassUtils.getShortClassName(int[].class));\n116: assertEquals(\"long[]\", ClassUtils.getShortClassName(long[].class));\n117: assertEquals(\"float[]\", ClassUtils.getShortClassName(float[].class));\n118: assertEquals(\"double[]\", ClassUtils.getShortClassName(double[].class));\n119: 120: // Arrays of arrays of ...\n121: assertEquals(\"String[][]\", ClassUtils.getShortClassName(String[][].class));\n122: assertEquals(\"String[][][]\", ClassUtils.getShortClassName(String[][][].class));\n123: assertEquals(\"String[][][][]\", ClassUtils.getShortClassName(String[][][][].class));\n124: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.ClassUtils:getShortClassName(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "183: public static String getShortClassName(String className) {\n184: if (className == null) {\n187: if (className.length() == 0) {\n196: int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n197: int innerIdx = className.indexOf(\n199: String out = className.substring(lastDotIdx + 1);\n200: if (innerIdx != -1) {\n201: out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n203: return out;\n204: }",
                                    "suspicious_rank": 0.129
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.ClassUtils:getShortClassName(Ljava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "168: public static String getShortClassName(Class<?> cls) {\n169: if (cls == null) {\n170: return StringUtils.EMPTY;\n172: return getShortClassName(cls.getName());\n173: }",
                                    "suspicious_rank": 0.139
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<String[[]]> but was:<String[;]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.ClassUtilsTest.test_getShortClassName_Class(ClassUtilsTest.java:97)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.ClassUtilsTest.test_getPackageName_Class",
                            "test_body": "140: public void test_getPackageName_Class() {\n141: assertEquals(\"java.lang\", ClassUtils.getPackageName(String.class));\n142: assertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class));\n143: assertEquals(\"\", ClassUtils.getPackageName((Class)null));\n144: 145: // LANG-535\n146: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[].class));\n147: 148: // Primitive Arrays\n149: assertEquals(\"\", ClassUtils.getPackageName(boolean[].class));\n150: assertEquals(\"\", ClassUtils.getPackageName(byte[].class));\n151: assertEquals(\"\", ClassUtils.getPackageName(char[].class));\n152: assertEquals(\"\", ClassUtils.getPackageName(short[].class));\n153: assertEquals(\"\", ClassUtils.getPackageName(int[].class));\n154: assertEquals(\"\", ClassUtils.getPackageName(long[].class));\n155: assertEquals(\"\", ClassUtils.getPackageName(float[].class));\n156: assertEquals(\"\", ClassUtils.getPackageName(double[].class));\n157: 158: // Arrays of arrays of ...\n159: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][].class));\n160: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][].class));\n161: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][][].class));\n162: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.ClassUtils:getPackageName(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "244: public static String getPackageName(String className) {\n245: if (className == null) {\n252: int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n253: if (i == -1) {\n256: return className.substring(0, i);\n257: }",
                                    "suspicious_rank": 0.289
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.ClassUtils:getPackageName(Ljava/lang/Class;)Ljava/lang/String;",
                                    "method_body": "228: public static String getPackageName(Class<?> cls) {\n229: if (cls == null) {\n230: return StringUtils.EMPTY;\n232: return getPackageName(cls.getName());\n233: }",
                                    "suspicious_rank": 0.5
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<[]java.lang> but was:<[[L]java.lang>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.ClassUtilsTest.test_getPackageName_Class(ClassUtilsTest.java:146)"
                        }
                    ]
                },
                {
                    "bug_id": 42,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeHtmlHighUnicode",
                            "test_body": "420: public void testEscapeHtmlHighUnicode() throws java.io.UnsupportedEncodingException {\n421: // this is the utf8 representation of the character:\n422: // COUNTING ROD UNIT DIGIT THREE\n423: // in unicode\n424: // codepoint: U+1D362\n425: byte[] data = new byte[] { (byte)0xF0, (byte)0x9D, (byte)0x8D, (byte)0xA2 };\n426: 427: String escaped = StringEscapeUtils.escapeHtml( new String(data, \"UTF8\") );\n428: String unescaped = StringEscapeUtils.unescapeHtml( escaped );\n429: 430: assertEquals( \"High unicode was not escaped correctly\", \"&#119650;\", escaped);\n431: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "524: public static String unescapeHtml(String str) {\n525: if (str == null) {\n529: StringWriter writer = new StringWriter ((int)(str.length() * 1.5));\n530: unescapeHtml(writer, str);\n531: return writer.toString();\n536: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities$PrimitiveEntityMap:name(I)Ljava/lang/String;",
                                    "method_body": "415: void add(String name, int value);\n457: return (String) mapValueToName.get(value);\n470: }",
                                    "suspicious_rank": 0.123
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/io/Writer;Ljava/lang/String;)V",
                                    "method_body": "497: public static void escapeHtml(Writer writer, String string) throws IOException {\n498: if (writer == null ) {\n501: if (string == null) {\n504: Entities.HTML40.escape(writer, string);\n505: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities:entityName(I)Ljava/lang/String;",
                                    "method_body": "765: public String entityName(int value) {\n766: return map.name(value);\n767: }",
                                    "suspicious_rank": 0.129
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:unescapeHtml(Ljava/io/Writer;Ljava/lang/String;)V",
                                    "method_body": "556: public static void unescapeHtml(Writer writer, String string) throws IOException {\n557: if (writer == null ) {\n560: if (string == null) {\n563: Entities.HTML40.unescape(writer, string);\n564: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities:doUnescape(Ljava/io/Writer;Ljava/lang/String;I)V",
                                    "method_body": "927: private void doUnescape(Writer writer, String str, int firstAmp) throws IOException {\n928: writer.write(str, 0, firstAmp);\n929: int len = str.length();\n930: for (int i = firstAmp; i < len; i++) {\n931: char c = str.charAt(i);\n932: if (c == '&') {\n933: int nextIdx = i + 1;\n934: int semiColonIdx = str.indexOf(';', nextIdx);\n935: if (semiColonIdx == -1) {\n939: int amphersandIdx = str.indexOf('&', i + 1);\n940: if (amphersandIdx != -1 && amphersandIdx < semiColonIdx) {\n945: String entityContent = str.substring(nextIdx, semiColonIdx);\n946: int entityValue = -1;\n947: int entityContentLen = entityContent.length();\n948: if (entityContentLen > 0) {\n949: if (entityContent.charAt(0) == '#') { // escaped value content is an integer (decimal or\n951: if (entityContentLen > 1) {\n952: char isHexChar = entityContent.charAt(1);\n954: switch (isHexChar) {\n961: entityValue = Integer.parseInt(entityContent.substring(1), 10);\n964: if (entityValue > 0xFFFF) {\n969: }\n970: }\n976: if (entityValue == -1) {\n981: writer.write(entityValue);\n983: i = semiColonIdx; // move index up to the semi-colon\n984: } else {\n988: }",
                                    "suspicious_rank": 0.118
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities$LookupEntityMap:name(I)Ljava/lang/String;",
                                    "method_body": "532: public String name(int value) {\n533: if (value < LOOKUP_TABLE_SIZE) {\n536: return super.name(value);\n537: }",
                                    "suspicious_rank": 0.136
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities:escape(Ljava/io/Writer;Ljava/lang/String;)V",
                                    "method_body": "825: public void escape(Writer writer, String str) throws IOException {\n826: int len = str.length();\n827: for (int i = 0; i < len; i++) {\n828: char c = str.charAt(i);\n829: String entityName = this.entityName(c);\n830: if (entityName == null) {\n831: if (c > 0x7F) {\n832: writer.write(\"&#\");\n833: writer.write(Integer.toString(c, 10));\n834: writer.write(';');\n844: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.IntHashMap:get(I)Ljava/lang/Object;",
                                    "method_body": "236: public Object get(int key) {\n237: Entry tab[] = table;\n238: int hash = key;\n239: int index = (hash & 0x7FFFFFFF) % tab.length;\n240: for (Entry e = tab[index]; e != null; e = e.next) {\n241: if (e.hash == hash) {\n245: return null;\n246: }",
                                    "suspicious_rank": 0.123
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeHtml(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "454: public static String escapeHtml(String str) {\n455: if (str == null) {\n459: StringWriter writer = new StringWriter ((int)(str.length() * 1.5));\n460: escapeHtml(writer, str);\n461: return writer.toString();\n466: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities:unescape(Ljava/io/Writer;Ljava/lang/String;)V",
                                    "method_body": "904: public void unescape(Writer writer, String str) throws IOException {\n905: int firstAmp = str.indexOf('&');\n906: if (firstAmp < 0) {\n910: doUnescape(writer, str, firstAmp);\n912: }",
                                    "suspicious_rank": 0.123
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: High unicode was not escaped correctly expected:<&#[119650];> but was:<&#[55348;&#57186];>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.lang.StringEscapeUtilsTest.testEscapeHtmlHighUnicode(StringEscapeUtilsTest.java:430)"
                        }
                    ]
                },
                {
                    "bug_id": 43,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477",
                            "test_body": "98: public void testEscapedQuote_LANG_477() {\n99: String pattern = \"it''s a {0,lower} 'test'!\";\n100: ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);\n101: assertEquals(\"it's a dummy test!\", emf.format(new Object[] {\"DUMMY\"}));\n102: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.text.ExtendedMessageFormat:<init>(Ljava/lang/String;Ljava/util/Map;)V",
                                    "method_body": "111: public ExtendedMessageFormat(String pattern, Map registry) {\n112: this(pattern, Locale.getDefault(), registry);\n113: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.ExtendedMessageFormat:applyPattern(Ljava/lang/String;)V",
                                    "method_body": "142: public final void applyPattern(String pattern) {\n143: if (registry == null) {\n144: super.applyPattern(pattern);\n145: toPattern = super.toPattern();\n146: return;\n148: ArrayList foundFormats = new ArrayList();\n149: ArrayList foundDescriptions = new ArrayList();\n150: StringBuffer stripCustom = new StringBuffer(pattern.length());\n152: ParsePosition pos = new ParsePosition(0);\n153: char[] c = pattern.toCharArray();\n154: int fmtCount = 0;\n155: while (pos.getIndex() < pattern.length()) {\n156: switch (c[pos.getIndex()]) {\n158: appendQuotedString(pattern, pos, stripCustom, true);\n159: break;\n187: stripCustom.append(c[pos.getIndex()]);\n188: next(pos);\n206: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.ExtendedMessageFormat:<init>(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V",
                                    "method_body": "123: public ExtendedMessageFormat(String pattern, Locale locale, Map registry) {\n124: super(DUMMY_PATTERN);\n125: setLocale(locale);\n126: this.registry = registry;\n127: applyPattern(pattern);\n128: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.ExtendedMessageFormat:appendQuotedString(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;",
                                    "method_body": "417: private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n419: int start = pos.getIndex();\n420: char[] c = pattern.toCharArray();\n421: if (escapingOn && c[start] == QUOTE) {\n422: return appendTo == null ? null : appendTo.append(QUOTE);\n444: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.ExtendedMessageFormat:next(Ljava/text/ParsePosition;)Ljava/text/ParsePosition;",
                                    "method_body": "402: private ParsePosition next(ParsePosition pos) {\n403: pos.setIndex(pos.getIndex() + 1);\n404: return pos;\n405: }",
                                    "suspicious_rank": 0.204
                                }
                            ],
                            "stack_trace": "java.lang.OutOfMemoryError: Java heap space\nat java.util.Arrays.copyOf(Arrays.java:2367)\nat java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:130)\nat java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:114)\nat java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587)\nat java.lang.StringBuffer.append(StringBuffer.java:332)\nat org.apache.commons.lang.text.ExtendedMessageFormat.appendQuotedString(ExtendedMessageFormat.java:422)\nat org.apache.commons.lang.text.ExtendedMessageFormat.applyPattern(ExtendedMessageFormat.java:158)\nat org.apache.commons.lang.text.ExtendedMessageFormat.<init>(ExtendedMessageFormat.java:127)\nat org.apache.commons.lang.text.ExtendedMessageFormat.<init>(ExtendedMessageFormat.java:112)\nat org.apache.commons.lang.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477(ExtendedMessageFormatTest.java:100)"
                        }
                    ]
                },
                {
                    "bug_id": 44,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.NumberUtilsTest.testLang457",
                            "test_body": "524: public void testLang457() {\n525: String[] badInputs = new String[] { \"l\", \"L\", \"f\", \"F\", \"junk\", \"bobL\"};\n526: for(int i=0; i<badInputs.length; i++) {\n527: try {\n528: NumberUtils.createNumber(badInputs[i]);\n529: fail(\"NumberFormatException was expected for \" + badInputs[i]);\n530: } catch (NumberFormatException e) {\n531: return; // expected\n532: }\n533: }\n534: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "296: private static boolean isAllZeros(String s) {\n297: if (s == null) {\n300: for (int i = s.length() - 1; i >= 0; i--) {\n301: if (s.charAt(i) != '0') {\n302: return false;\n306: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "138: public static Number createNumber(String val) throws NumberFormatException {\n139: if (val == null) {\n142: if (val.length() == 0) {\n145: if (val.startsWith(\"--\")) {\n152: if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n155: char lastChar = val.charAt(val.length() - 1);\n159: int decPos = val.indexOf('.');\n160: int expPos = val.indexOf('e') + val.indexOf('E') + 1;\n162: if (decPos > -1) {\n174: if (expPos > -1) {\n177: mant = val;\n179: dec = null;\n181: if (!Character.isDigit(lastChar)) {\n182: if (expPos > -1 && expPos < val.length() - 1) {\n185: exp = null;\n188: String numeric = val.substring(0, val.length() - 1);\n189: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n190: switch (lastChar) {\n193: if (dec == null\n286: }",
                                    "suspicious_rank": 0.236
                                }
                            ],
                            "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 0\nat java.lang.String.charAt(String.java:658)\nat org.apache.commons.lang.NumberUtils.createNumber(NumberUtils.java:193)\nat org.apache.commons.lang.NumberUtilsTest.testLang457(NumberUtilsTest.java:528)"
                        }
                    ]
                },
                {
                    "bug_id": 45,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.WordUtilsTest.testAbbreviate",
                            "test_body": "366: public void testAbbreviate() {\n367: // check null and empty are returned respectively\n368: assertNull(WordUtils.abbreviate(null, 1,-1,\"\"));\n369: assertEquals(StringUtils.EMPTY, WordUtils.abbreviate(\"\", 1,-1,\"\"));\n370: 371: // test upper limit\n372: assertEquals(\"01234\", WordUtils.abbreviate(\"0123456789\", 0,5,\"\"));\n373: assertEquals(\"01234\", WordUtils.abbreviate(\"0123456789\", 5, 2,\"\"));\n374: assertEquals(\"012\", WordUtils.abbreviate(\"012 3456789\", 2, 5,\"\"));\n375: assertEquals(\"012 3\", WordUtils.abbreviate(\"012 3456789\", 5, 2,\"\"));\n376: assertEquals(\"0123456789\", WordUtils.abbreviate(\"0123456789\", 0,-1,\"\"));\n377: 378: // test upper limit + append string\n379: assertEquals(\"01234-\", WordUtils.abbreviate(\"0123456789\", 0,5,\"-\"));\n380: assertEquals(\"01234-\", WordUtils.abbreviate(\"0123456789\", 5, 2,\"-\"));\n381: assertEquals(\"012\", WordUtils.abbreviate(\"012 3456789\", 2, 5, null));\n382: assertEquals(\"012 3\", WordUtils.abbreviate(\"012 3456789\", 5, 2,\"\"));\n383: assertEquals(\"0123456789\", WordUtils.abbreviate(\"0123456789\", 0,-1,\"\"));\n384: 385: // test lower value\n386: assertEquals(\"012\", WordUtils.abbreviate(\"012 3456789\", 0,5, null));\n387: assertEquals(\"01234\", WordUtils.abbreviate(\"01234 56789\", 5, 10, null));\n388: assertEquals(\"01 23 45 67\", WordUtils.abbreviate(\"01 23 45 67 89\", 9, -1, null));\n389: assertEquals(\"01 23 45 6\", WordUtils.abbreviate(\"01 23 45 67 89\", 9, 10, null));\n390: assertEquals(\"0123456789\", WordUtils.abbreviate(\"0123456789\", 15, 20, null));\n391: 392: // test lower value + append\n393: assertEquals(\"012\", WordUtils.abbreviate(\"012 3456789\", 0,5, null));\n394: assertEquals(\"01234-\", WordUtils.abbreviate(\"01234 56789\", 5, 10, \"-\"));\n395: assertEquals(\"01 23 45 67abc\", WordUtils.abbreviate(\"01 23 45 67 89\", 9, -1, \"abc\"));\n396: assertEquals(\"01 23 45 6\", WordUtils.abbreviate(\"01 23 45 67 89\", 9, 10, \"\"));\n397: 398: // others\n399: assertEquals(\"\", WordUtils.abbreviate(\"0123456790\", 0,0,\"\"));\n400: assertEquals(\"\", WordUtils.abbreviate(\" 0123456790\", 0,-1,\"\"));\n401: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:defaultString(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "5278: public static String defaultString(String str) {\n5279: return str == null ? EMPTY : str;\n5280: }",
                                    "suspicious_rank": 0.204
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.WordUtils:abbreviate(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;",
                                    "method_body": "605: public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n607: if (str == null) {\n608: return null;\n610: if (str.length() == 0) {\n611: return StringUtils.EMPTY;\n618: if (upper == -1 || upper > str.length()) {\n619: upper = str.length();\n622: if (upper < lower) {\n623: upper = lower;\n626: StringBuffer result = new StringBuffer();\n627: int index = StringUtils.indexOf(str, \" \", lower);\n628: if (index == -1) {\n629: result.append(str.substring(0, upper));\n631: if (upper != str.length()) {\n632: result.append(StringUtils.defaultString(appendToEnd));\n634: } else if (index > upper) {\n635: result.append(str.substring(0, upper));\n636: result.append(StringUtils.defaultString(appendToEnd));\n638: result.append(str.substring(0, index));\n639: result.append(StringUtils.defaultString(appendToEnd));\n641: return result.toString();\n642: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:indexOf(Ljava/lang/String;Ljava/lang/String;I)I",
                                    "method_body": "850: public static int indexOf(String str, String searchStr, int startPos) {\n851: if (str == null || searchStr == null) {\n855: if (searchStr.length() == 0 && startPos >= str.length()) {\n858: return str.indexOf(searchStr, startPos);\n859: }",
                                    "suspicious_rank": 0.289
                                }
                            ],
                            "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 15\nat java.lang.String.substring(String.java:1907)\nat org.apache.commons.lang.WordUtils.abbreviate(WordUtils.java:629)\nat org.apache.commons.lang.WordUtilsTest.testAbbreviate(WordUtilsTest.java:390)"
                        }
                    ]
                },
                {
                    "bug_id": 46,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash",
                            "test_body": "103: public void testEscapeJavaWithSlash() {\n104: final String input = \"String with a slash (/) in it\";\n105: 106: final String expected = input;\n107: final String actual = StringEscapeUtils.escapeJava(input);\n108: 109: /**\n110: * In 2.4 StringEscapeUtils.escapeJava(String) escapes '/' characters, which are not a valid character to escape\n111: * in a Java string.\n112: */\n113: assertEquals(expected, actual);\n114: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;",
                                    "method_body": "154: private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {\n155: if (str == null) {\n159: StringWriter writer = new StringWriter(str.length() * 2);\n160: escapeJavaStyleString(writer, str, escapeSingleQuotes);\n161: return writer.toString();\n167: }",
                                    "suspicious_rank": 0.183
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V",
                                    "method_body": "178: private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\n179: if (out == null) {\n182: if (str == null) {\n186: sz = str.length();\n187: for (int i = 0; i < sz; i++) {\n188: char ch = str.charAt(i);\n191: if (ch > 0xfff) {\n193: } else if (ch > 0xff) {\n195: } else if (ch > 0x7f) {\n197: } else if (ch < 32) {\n228: switch (ch) {\n244: out.write('\\\\');\n245: out.write('/');\n246: break;\n248: out.write(ch);\n253: }",
                                    "suspicious_rank": 0.183
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "85: public static String escapeJava(String str) {\n86: return escapeJavaStyleString(str, false);\n87: }",
                                    "suspicious_rank": 0.204
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<...tring with a slash ([]/) in it> but was:<...tring with a slash ([\\]/) in it>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(StringEscapeUtilsTest.java:113)"
                        }
                    ]
                },
                {
                    "bug_id": 47,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.text.StrBuilderTest.testLang412Right",
                            "test_body": "1753: public void testLang412Right() {\n1754: StrBuilder sb = new StrBuilder();\n1755: sb.appendFixedWidthPadRight(null, 10, '*');\n1756: assertEquals( \"Failed to invoke appendFixedWidthPadRight correctly\", \"**********\", sb.toString());\n1757: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "1226: public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n1227: if (width > 0) {\n1228: ensureCapacity(size + width);\n1229: String str = (obj == null ? getNullText() : obj.toString());\n1230: int strLen = str.length();\n1231: if (strLen >= width) {\n1243: }",
                                    "suspicious_rank": 0.189
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>(I)V",
                                    "method_body": "106: public StrBuilder(int initialCapacity) {\n107: super();\n108: if (initialCapacity <= 0) {\n111: buffer = new char[initialCapacity];\n112: }",
                                    "suspicious_rank": 0.063
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:ensureCapacity(I)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "227: public StrBuilder ensureCapacity(int capacity) {\n228: if (capacity > buffer.length) {\n233: return this;\n234: }",
                                    "suspicious_rank": 0.054
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>()V",
                                    "method_body": "97: public StrBuilder() {\n98: this(CAPACITY);\n99: }",
                                    "suspicious_rank": 0.063
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:getNullText()Ljava/lang/String;",
                                    "method_body": "157: public String getNullText() {\n158: return nullText;\n159: }",
                                    "suspicious_rank": 0.338
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(StrBuilder.java:1230)\nat org.apache.commons.lang.text.StrBuilderTest.testLang412Right(StrBuilderTest.java:1755)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.text.StrBuilderTest.testLang412Left",
                            "test_body": "1759: public void testLang412Left() {\n1760: StrBuilder sb = new StrBuilder();\n1761: sb.appendFixedWidthPadLeft(null, 10, '*');\n1762: assertEquals( \"Failed to invoke appendFixedWidthPadLeft correctly\", \"**********\", sb.toString());\n1763: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadLeft(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "1182: public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar) {\n1183: if (width > 0) {\n1184: ensureCapacity(size + width);\n1185: String str = (obj == null ? getNullText() : obj.toString());\n1186: int strLen = str.length();\n1187: if (strLen >= width) {\n1199: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>(I)V",
                                    "method_body": "106: public StrBuilder(int initialCapacity) {\n107: super();\n108: if (initialCapacity <= 0) {\n111: buffer = new char[initialCapacity];\n112: }",
                                    "suspicious_rank": 0.063
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:ensureCapacity(I)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "227: public StrBuilder ensureCapacity(int capacity) {\n228: if (capacity > buffer.length) {\n233: return this;\n234: }",
                                    "suspicious_rank": 0.054
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>()V",
                                    "method_body": "97: public StrBuilder() {\n98: this(CAPACITY);\n99: }",
                                    "suspicious_rank": 0.063
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:getNullText()Ljava/lang/String;",
                                    "method_body": "157: public String getNullText() {\n158: return nullText;\n159: }",
                                    "suspicious_rank": 0.338
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(StrBuilder.java:1186)\nat org.apache.commons.lang.text.StrBuilderTest.testLang412Left(StrBuilderTest.java:1761)"
                        }
                    ]
                },
                {
                    "bug_id": 48,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.builder.EqualsBuilderTest.testBigDecimal",
                            "test_body": "381: public void testBigDecimal() {\n382: BigDecimal o1 = new BigDecimal(\"2.0\");\n383: BigDecimal o2 = new BigDecimal(\"2.00\");\n384: assertTrue(new EqualsBuilder().append(o1, o1).isEquals());\n385: assertTrue(new EqualsBuilder().append(o1, o2).isEquals());\n386: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.builder.EqualsBuilder:isEquals()Z",
                                    "method_body": "830: public boolean isEquals() {\n831: return this.isEquals;\n832: }",
                                    "suspicious_rank": 0.052
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.builder.EqualsBuilder:<init>()V",
                                    "method_body": "100: public EqualsBuilder() {\n102: }",
                                    "suspicious_rank": 0.051
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.builder.EqualsBuilder:append(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang/builder/EqualsBuilder;",
                                    "method_body": "367: public EqualsBuilder append(Object lhs, Object rhs) {\n368: if (isEquals == false) {\n371: if (lhs == rhs) {\n372: return this;\n374: if (lhs == null || rhs == null) {\n378: Class lhsClass = lhs.getClass();\n379: if (!lhsClass.isArray()) {\n381: isEquals = lhs.equals(rhs);\n408: return this;\n409: }",
                                    "suspicious_rank": 0.06
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertTrue(Assert.java:31)\nat junit.framework.TestCase.assertTrue(TestCase.java:201)\nat org.apache.commons.lang.builder.EqualsBuilderTest.testBigDecimal(EqualsBuilderTest.java:385)"
                        }
                    ]
                },
                {
                    "bug_id": 49,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.math.FractionTest.testReduce",
                            "test_body": "616: public void testReduce() {\n617: Fraction f = null;\n618: 619: f = Fraction.getFraction(50, 75);\n620: Fraction result = f.reduce();\n621: assertEquals(2, result.getNumerator());\n622: assertEquals(3, result.getDenominator());\n623: 624: f = Fraction.getFraction(-2, -3);\n625: result = f.reduce();\n626: assertEquals(2, result.getNumerator());\n627: assertEquals(3, result.getDenominator());\n628: 629: f = Fraction.getFraction(2, -3);\n630: result = f.reduce();\n631: assertEquals(-2, result.getNumerator());\n632: assertEquals(3, result.getDenominator());\n633: 634: f = Fraction.getFraction(-2, 3);\n635: result = f.reduce();\n636: assertEquals(-2, result.getNumerator());\n637: assertEquals(3, result.getDenominator());\n638: assertSame(f, result);\n639: 640: f = Fraction.getFraction(2, 3);\n641: result = f.reduce();\n642: assertEquals(2, result.getNumerator());\n643: assertEquals(3, result.getDenominator());\n644: assertSame(f, result);\n645: 646: f = Fraction.getFraction(0, 1);\n647: result = f.reduce();\n648: assertEquals(0, result.getNumerator());\n649: assertEquals(1, result.getDenominator());\n650: assertSame(f, result);\n651: 652: f = Fraction.getFraction(0, 100);\n653: result = f.reduce();\n654: assertEquals(0, result.getNumerator());\n655: assertEquals(1, result.getDenominator());\n656: assertSame(result, Fraction.ZERO);\n657: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.math.Fraction:getNumerator()I",
                                    "method_body": "367: public int getNumerator() {\n368: return numerator;\n369: }",
                                    "suspicious_rank": 0.087
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.Fraction:greatestCommonDivisor(II)I",
                                    "method_body": "569: private static int greatestCommonDivisor(int u, int v) {\n571: if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {\n572: return 1;\n578: if (u>0) { u=-u; } // make u negative\n579: if (v>0) { v=-v; } // make v negative\n581: int k=0;\n582: while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...\n585: if (k==31) {\n590: int t = ((u&1)==1) ? v : -(u/2)/*B3*/;\n596: while ((t&1)==0) { // while t is even..\n600: if (t>0) {\n601: u = -t;\n603: v = t;\n606: t = (v - u)/2;\n609: } while (t!=0);\n610: return -u*(1<<k); // gcd is u*2^k\n611: }",
                                    "suspicious_rank": 0.129
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.Fraction:<init>(II)V",
                                    "method_body": "43: private static final long serialVersionUID = 65382027393090L;\n107: private transient int hashCode = 0;\n111: private transient String toString = null;\n115: private transient String toProperString = null;\n125: super();\n126: this.numerator = numerator;\n127: this.denominator = denominator;\n128: }",
                                    "suspicious_rank": 0.082
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.Fraction:reduce()Lorg/apache/commons/lang/math/Fraction;",
                                    "method_body": "465: public Fraction reduce() {\n466: int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n467: if (gcd == 1) {\n468: return this;\n470: return Fraction.getFraction(numerator / gcd, denominator / gcd);\n471: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.Fraction:getDenominator()I",
                                    "method_body": "376: public int getDenominator() {\n377: return denominator;\n378: }",
                                    "suspicious_rank": 0.087
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.Fraction:getFraction(II)Lorg/apache/commons/lang/math/Fraction;",
                                    "method_body": "141: public static Fraction getFraction(int numerator, int denominator) {\n142: if (denominator == 0) {\n145: if (denominator < 0) {\n146: if (numerator==Integer.MIN_VALUE ||\n150: numerator = -numerator;\n151: denominator = -denominator;\n153: return new Fraction(numerator, denominator);\n154: }",
                                    "suspicious_rank": 0.102
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<1> but was:<100>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang.math.FractionTest.testReduce(FractionTest.java:655)"
                        }
                    ]
                },
                {
                    "bug_id": 50,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance",
                            "test_body": "155: public void test_changeDefault_Locale_DateTimeInstance() {\n156: Locale realDefaultLocale = Locale.getDefault();\n157: try {\n158: Locale.setDefault(Locale.US);\n159: FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n160: FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n161: Locale.setDefault(Locale.GERMANY);\n162: FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n163: 164: assertSame(Locale.GERMANY, format1.getLocale());\n165: assertSame(Locale.US, format2.getLocale());\n166: assertSame(Locale.GERMANY, format3.getLocale());\n167: assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);\n168: assertTrue(format2 != format3);\n169: 170: } finally {\n171: Locale.setDefault(realDefaultLocale);\n172: }\n173: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TwelveHourField:<init>(Lorg/apache/commons/lang/time/FastDateFormat$NumberRule;)V",
                                    "method_body": "1447: TwelveHourField(NumberRule rule) {\n1448: mRule = rule;\n1449: }",
                                    "suspicious_rank": 0.213
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField:estimateLength()I",
                                    "method_body": "1339: public int estimateLength() {\n1340: return 2;\n1341: }",
                                    "suspicious_rank": 0.067
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:selectNumberRule(II)Lorg/apache/commons/lang/time/FastDateFormat$NumberRule;",
                                    "method_body": "769: protected NumberRule selectNumberRule(int field, int padding) {\n770: switch (padding) {\n772: return new UnpaddedNumberField(field);\n774: return new TwoDigitNumberField(field);\n776: return new PaddedNumberField(field, padding);\n778: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateTimeInstance(IILjava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "423: public static FastDateFormat getDateTimeInstance(\n425: return getDateTimeInstance(dateStyle, timeStyle, null, locale);\n426: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$Pair:hashCode()I",
                                    "method_body": "1737: public int hashCode() {\n1738: return\n1741: }",
                                    "suspicious_rank": 0.348
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TextField:<init>(I[Ljava/lang/String;)V",
                                    "method_body": "1145: TextField(int field, String[] values) {\n1146: mField = field;\n1147: mValues = values;\n1148: }",
                                    "suspicious_rank": 0.174
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField:<init>(I)V",
                                    "method_body": "1332: TwoDigitNumberField(int field) {\n1333: mField = field;\n1334: }",
                                    "suspicious_rank": 0.067
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$CharacterLiteral:<init>(C)V",
                                    "method_body": "1066: void appendTo(StringBuffer buffer, int value);\n1081: CharacterLiteral(char value) {\n1082: mValue = value;\n1083: }\n1089: return 1;\n1098: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:parsePattern()Ljava/util/List;",
                                    "method_body": "580: protected List parsePattern() {\n581: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n582: List rules = new ArrayList();\n584: String[] ERAs = symbols.getEras();\n585: String[] months = symbols.getMonths();\n586: String[] shortMonths = symbols.getShortMonths();\n587: String[] weekdays = symbols.getWeekdays();\n588: String[] shortWeekdays = symbols.getShortWeekdays();\n589: String[] AmPmStrings = symbols.getAmPmStrings();\n591: int length = mPattern.length();\n592: int[] indexRef = new int[1];\n594: for (int i = 0; i < length; i++) {\n595: indexRef[0] = i;\n596: String token = parseToken(mPattern, indexRef);\n597: i = indexRef[0];\n599: int tokenLen = token.length();\n600: if (tokenLen == 0) {\n605: char c = token.charAt(0);\n607: switch (c) {\n612: if (tokenLen >= 4) {\n613: rule = selectNumberRule(Calendar.YEAR, tokenLen);\n619: if (tokenLen >= 4) {\n620: rule = new TextField(Calendar.MONTH, months);\n630: rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n631: break;\n633: rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));\n634: break;\n636: rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);\n637: break;\n639: rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n640: break;\n642: rule = selectNumberRule(Calendar.SECOND, tokenLen);\n643: break;\n648: rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n649: break;\n663: rule = new TextField(Calendar.AM_PM, AmPmStrings);\n664: break;\n672: if (tokenLen >= 4) {\n675: rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);\n677: break;\n686: String sub = token.substring(1);\n687: if (sub.length() == 1) {\n688: rule = new CharacterLiteral(sub.charAt(0));\n690: rule = new StringLiteral(sub);\n692: break;\n697: rules.add(rule);\n700: return rules;\n701: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:hashCode()I",
                                    "method_body": "1000: public int hashCode() {\n1001: int total = 0;\n1002: total += mPattern.hashCode();\n1003: total += mTimeZone.hashCode();\n1004: total += (mTimeZoneForced ? 1 : 0);\n1005: total += mLocale.hashCode();\n1006: total += (mLocaleForced ? 1 : 0);\n1007: return total;\n1008: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TwelveHourField:estimateLength()I",
                                    "method_body": "1454: public int estimateLength() {\n1455: return mRule.estimateLength();\n1456: }",
                                    "suspicious_rank": 0.213
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$StringLiteral:<init>(Ljava/lang/String;)V",
                                    "method_body": "1112: StringLiteral(String value) {\n1113: mValue = value;\n1114: }",
                                    "suspicious_rank": 0.182
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$Pair:equals(Ljava/lang/Object;)Z",
                                    "method_body": "1716: public boolean equals(Object obj) {\n1717: if (this == obj) {\n1721: if (!(obj instanceof Pair)) {\n1725: Pair key = (Pair)obj;\n1727: return\n1732: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TextField:estimateLength()I",
                                    "method_body": "1153: public int estimateLength() {\n1154: int max = 0;\n1155: for (int i=mValues.length; --i >= 0; ) {\n1156: int len = mValues[i].length();\n1157: if (len > max) {\n1158: max = len;\n1160: }\n1161: return max;\n1162: }",
                                    "suspicious_rank": 0.174
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$CharacterLiteral:estimateLength()I",
                                    "method_body": "1066: void appendTo(StringBuffer buffer, int value);\n1081: CharacterLiteral(char value) {\n1082: mValue = value;\n1083: }\n1089: return 1;\n1098: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$PaddedNumberField:estimateLength()I",
                                    "method_body": "1284: public int estimateLength() {\n1285: return 4;\n1286: }",
                                    "suspicious_rank": 0.135
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "537: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n538: super();\n539: if (pattern == null) {\n542: mPattern = pattern;\n544: mTimeZoneForced = (timeZone != null);\n545: if (timeZone == null) {\n546: timeZone = TimeZone.getDefault();\n548: mTimeZone = timeZone;\n550: mLocaleForced = (locale != null);\n551: if (locale == null) {\n554: mLocale = locale;\n555: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateTimeInstance(II)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "406: public static FastDateFormat getDateTimeInstance(\n408: return getDateTimeInstance(dateStyle, timeStyle, null, null);\n409: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:init()V",
                                    "method_body": "560: protected void init() {\n561: List rulesList = parsePattern();\n562: mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);\n564: int len = 0;\n565: for (int i=mRules.length; --i >= 0; ) {\n566: len += mRules[i].estimateLength();\n569: mMaxLengthEstimate = len;\n570: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$StringLiteral:estimateLength()I",
                                    "method_body": "1119: public int estimateLength() {\n1120: return mValue.length();\n1121: }",
                                    "suspicious_rank": 0.182
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateTimeInstance(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "458: public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone,\n461: Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));\n462: if (timeZone != null) {\n465: if (locale != null) {\n466: key = new Pair(key, locale);\n469: FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);\n470: if (format == null) {\n471: if (locale == null) {\n472: locale = Locale.getDefault();\n475: SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,\n477: String pattern = formatter.toPattern();\n478: format = getInstance(pattern, timeZone, locale);\n479: cDateTimeInstanceCache.put(key, format);\n483: }\n485: return format;\n486: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "211: public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) {\n212: FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);\n213: FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);\n214: if (format == null) {\n215: format = emptyFormat;\n216: format.init();  // convert shell format into usable one\n217: cInstanceCache.put(format, format);  // this is OK!\n219: return format;\n220: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField:estimateLength()I",
                                    "method_body": "1192: public int estimateLength() {\n1193: return 4;\n1194: }",
                                    "suspicious_rank": 0.27
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule:<init>(Ljava/util/TimeZone;ZLjava/util/Locale;I)V",
                                    "method_body": "1538: TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {\n1539: mTimeZone = timeZone;\n1540: mTimeZoneForced = timeZoneForced;\n1541: mLocale = locale;\n1542: mStyle = style;\n1544: if (timeZoneForced) {\n1548: mStandard = null;\n1549: mDaylight = null;\n1551: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$PaddedNumberField:<init>(II)V",
                                    "method_body": "1272: PaddedNumberField(int field, int size) {\n1273: if (size < 3) {\n1277: mField = field;\n1278: mSize = size;\n1279: }",
                                    "suspicious_rank": 0.135
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$Pair:<init>(Ljava/lang/Object;Ljava/lang/Object;)V",
                                    "method_body": "1708: public Pair(Object obj1, Object obj2) {\n1709: mObj1 = obj1;\n1710: mObj2 = obj2;\n1711: }",
                                    "suspicious_rank": 0.348
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField:<init>(I)V",
                                    "method_body": "1185: UnpaddedNumberField(int field) {\n1186: mField = field;\n1187: }",
                                    "suspicious_rank": 0.27
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:parseToken(Ljava/lang/String;[I)Ljava/lang/String;",
                                    "method_body": "710: protected String parseToken(String pattern, int[] indexRef) {\n711: StringBuffer buf = new StringBuffer();\n713: int i = indexRef[0];\n714: int length = pattern.length();\n716: char c = pattern.charAt(i);\n717: if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {\n720: buf.append(c);\n722: while (i + 1 < length) {\n723: char peek = pattern.charAt(i + 1);\n724: if (peek == c) {\n725: buf.append(c);\n726: i++;\n730: }\n733: buf.append('\\'');\n735: boolean inLiteral = false;\n737: for (; i < length; i++) {\n738: c = pattern.charAt(i);\n740: if (c == '\\'') {\n741: if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {\n746: inLiteral = !inLiteral;\n748: } else if (!inLiteral &&\n750: i--;\n751: break;\n753: buf.append(c);\n758: indexRef[0] = i;\n759: return buf.toString();\n760: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getLocale()Ljava/util/Locale;",
                                    "method_body": "953: public Locale getLocale() {\n954: return mLocale;\n955: }",
                                    "suspicious_rank": 0.27
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule:estimateLength()I",
                                    "method_body": "1556: public int estimateLength() {\n1557: if (mTimeZoneForced) {\n1559: } else if (mStyle == TimeZone.SHORT) {\n1560: return 4;\n1564: }",
                                    "suspicious_rank": 0.302
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected same:<de_DE> was not:<en_US>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotSame(Assert.java:325)\nat junit.framework.Assert.assertSame(Assert.java:288)\nat junit.framework.Assert.assertSame(Assert.java:296)\nat junit.framework.TestCase.assertSame(TestCase.java:465)\nat org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance(FastDateFormatTest.java:166)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance",
                            "test_body": "135: public void test_changeDefault_Locale_DateInstance() {\n136: Locale realDefaultLocale = Locale.getDefault();\n137: try {\n138: Locale.setDefault(Locale.US);\n139: FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n140: FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n141: Locale.setDefault(Locale.GERMANY);\n142: FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n143: 144: assertSame(Locale.GERMANY, format1.getLocale());\n145: assertSame(Locale.US, format2.getLocale());\n146: assertSame(Locale.GERMANY, format3.getLocale());\n147: assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);\n148: assertTrue(format2 != format3);\n149: 150: } finally {\n151: Locale.setDefault(realDefaultLocale);\n152: }\n153: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:selectNumberRule(II)Lorg/apache/commons/lang/time/FastDateFormat$NumberRule;",
                                    "method_body": "769: protected NumberRule selectNumberRule(int field, int padding) {\n770: switch (padding) {\n772: return new UnpaddedNumberField(field);\n774: return new TwoDigitNumberField(field);\n776: return new PaddedNumberField(field, padding);\n778: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "279: public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale) {\n280: Object key = new Integer(style);\n281: if (timeZone != null) {\n285: if (locale != null) {\n286: key = new Pair(key, locale);\n290: FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);\n291: if (format == null) {\n292: if (locale == null) {\n293: locale = Locale.getDefault();\n296: SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);\n297: String pattern = formatter.toPattern();\n298: format = getInstance(pattern, timeZone, locale);\n299: cDateInstanceCache.put(key, format);\n303: }\n305: return format;\n306: }",
                                    "suspicious_rank": 0.213
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$Pair:hashCode()I",
                                    "method_body": "1737: public int hashCode() {\n1738: return\n1741: }",
                                    "suspicious_rank": 0.348
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateInstance(I)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "233: public static FastDateFormat getDateInstance(int style) {\n234: return getDateInstance(style, null, null);\n235: }",
                                    "suspicious_rank": 0.302
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TextField:<init>(I[Ljava/lang/String;)V",
                                    "method_body": "1145: TextField(int field, String[] values) {\n1146: mField = field;\n1147: mValues = values;\n1148: }",
                                    "suspicious_rank": 0.174
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$CharacterLiteral:<init>(C)V",
                                    "method_body": "1066: void appendTo(StringBuffer buffer, int value);\n1081: CharacterLiteral(char value) {\n1082: mValue = value;\n1083: }\n1089: return 1;\n1098: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:parsePattern()Ljava/util/List;",
                                    "method_body": "580: protected List parsePattern() {\n581: DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n582: List rules = new ArrayList();\n584: String[] ERAs = symbols.getEras();\n585: String[] months = symbols.getMonths();\n586: String[] shortMonths = symbols.getShortMonths();\n587: String[] weekdays = symbols.getWeekdays();\n588: String[] shortWeekdays = symbols.getShortWeekdays();\n589: String[] AmPmStrings = symbols.getAmPmStrings();\n591: int length = mPattern.length();\n592: int[] indexRef = new int[1];\n594: for (int i = 0; i < length; i++) {\n595: indexRef[0] = i;\n596: String token = parseToken(mPattern, indexRef);\n597: i = indexRef[0];\n599: int tokenLen = token.length();\n600: if (tokenLen == 0) {\n605: char c = token.charAt(0);\n607: switch (c) {\n612: if (tokenLen >= 4) {\n613: rule = selectNumberRule(Calendar.YEAR, tokenLen);\n619: if (tokenLen >= 4) {\n620: rule = new TextField(Calendar.MONTH, months);\n630: rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n631: break;\n633: rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));\n634: break;\n636: rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);\n637: break;\n639: rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n640: break;\n642: rule = selectNumberRule(Calendar.SECOND, tokenLen);\n643: break;\n648: rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n649: break;\n663: rule = new TextField(Calendar.AM_PM, AmPmStrings);\n664: break;\n672: if (tokenLen >= 4) {\n675: rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);\n677: break;\n686: String sub = token.substring(1);\n687: if (sub.length() == 1) {\n688: rule = new CharacterLiteral(sub.charAt(0));\n690: rule = new StringLiteral(sub);\n692: break;\n697: rules.add(rule);\n700: return rules;\n701: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:hashCode()I",
                                    "method_body": "1000: public int hashCode() {\n1001: int total = 0;\n1002: total += mPattern.hashCode();\n1003: total += mTimeZone.hashCode();\n1004: total += (mTimeZoneForced ? 1 : 0);\n1005: total += mLocale.hashCode();\n1006: total += (mLocaleForced ? 1 : 0);\n1007: return total;\n1008: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$StringLiteral:<init>(Ljava/lang/String;)V",
                                    "method_body": "1112: StringLiteral(String value) {\n1113: mValue = value;\n1114: }",
                                    "suspicious_rank": 0.182
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$TextField:estimateLength()I",
                                    "method_body": "1153: public int estimateLength() {\n1154: int max = 0;\n1155: for (int i=mValues.length; --i >= 0; ) {\n1156: int len = mValues[i].length();\n1157: if (len > max) {\n1158: max = len;\n1160: }\n1161: return max;\n1162: }",
                                    "suspicious_rank": 0.174
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$CharacterLiteral:estimateLength()I",
                                    "method_body": "1066: void appendTo(StringBuffer buffer, int value);\n1081: CharacterLiteral(char value) {\n1082: mValue = value;\n1083: }\n1089: return 1;\n1098: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$PaddedNumberField:estimateLength()I",
                                    "method_body": "1284: public int estimateLength() {\n1285: return 4;\n1286: }",
                                    "suspicious_rank": 0.135
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
                                    "method_body": "537: protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n538: super();\n539: if (pattern == null) {\n542: mPattern = pattern;\n544: mTimeZoneForced = (timeZone != null);\n545: if (timeZone == null) {\n546: timeZone = TimeZone.getDefault();\n548: mTimeZone = timeZone;\n550: mLocaleForced = (locale != null);\n551: if (locale == null) {\n554: mLocale = locale;\n555: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:init()V",
                                    "method_body": "560: protected void init() {\n561: List rulesList = parsePattern();\n562: mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);\n564: int len = 0;\n565: for (int i=mRules.length; --i >= 0; ) {\n566: len += mRules[i].estimateLength();\n569: mMaxLengthEstimate = len;\n570: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$StringLiteral:estimateLength()I",
                                    "method_body": "1119: public int estimateLength() {\n1120: return mValue.length();\n1121: }",
                                    "suspicious_rank": 0.182
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "211: public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) {\n212: FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);\n213: FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);\n214: if (format == null) {\n215: format = emptyFormat;\n216: format.init();  // convert shell format into usable one\n217: cInstanceCache.put(format, format);  // this is OK!\n219: return format;\n220: }",
                                    "suspicious_rank": 0.132
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField:estimateLength()I",
                                    "method_body": "1192: public int estimateLength() {\n1193: return 4;\n1194: }",
                                    "suspicious_rank": 0.27
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$PaddedNumberField:<init>(II)V",
                                    "method_body": "1272: PaddedNumberField(int field, int size) {\n1273: if (size < 3) {\n1277: mField = field;\n1278: mSize = size;\n1279: }",
                                    "suspicious_rank": 0.135
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$Pair:<init>(Ljava/lang/Object;Ljava/lang/Object;)V",
                                    "method_body": "1708: public Pair(Object obj1, Object obj2) {\n1709: mObj1 = obj1;\n1710: mObj2 = obj2;\n1711: }",
                                    "suspicious_rank": 0.348
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField:<init>(I)V",
                                    "method_body": "1185: UnpaddedNumberField(int field) {\n1186: mField = field;\n1187: }",
                                    "suspicious_rank": 0.27
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateInstance(ILjava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                                    "method_body": "248: public static FastDateFormat getDateInstance(int style, Locale locale) {\n249: return getDateInstance(style, null, locale);\n250: }",
                                    "suspicious_rank": 0.213
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.FastDateFormat:getLocale()Ljava/util/Locale;",
                                    "method_body": "953: public Locale getLocale() {\n954: return mLocale;\n955: }",
                                    "suspicious_rank": 0.27
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected same:<de_DE> was not:<en_US>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotSame(Assert.java:325)\nat junit.framework.Assert.assertSame(Assert.java:288)\nat junit.framework.Assert.assertSame(Assert.java:296)\nat junit.framework.TestCase.assertSame(TestCase.java:465)\nat org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance(FastDateFormatTest.java:146)"
                        }
                    ]
                },
                {
                    "bug_id": 51,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.BooleanUtilsTest.test_toBoolean_String",
                            "test_body": "295: public void test_toBoolean_String() {\n296: assertEquals(false, BooleanUtils.toBoolean((String) null));\n297: assertEquals(false, BooleanUtils.toBoolean(\"\"));\n298: assertEquals(false, BooleanUtils.toBoolean(\"off\"));\n299: assertEquals(false, BooleanUtils.toBoolean(\"oof\"));\n300: assertEquals(false, BooleanUtils.toBoolean(\"yep\"));\n301: assertEquals(false, BooleanUtils.toBoolean(\"trux\"));\n302: assertEquals(false, BooleanUtils.toBoolean(\"false\"));\n303: assertEquals(false, BooleanUtils.toBoolean(\"a\"));\n304: assertEquals(true, BooleanUtils.toBoolean(\"true\")); // interned handled differently\n305: assertEquals(true, BooleanUtils.toBoolean(new StringBuffer(\"tr\").append(\"ue\").toString()));\n306: assertEquals(true, BooleanUtils.toBoolean(\"truE\"));\n307: assertEquals(true, BooleanUtils.toBoolean(\"trUe\"));\n308: assertEquals(true, BooleanUtils.toBoolean(\"trUE\"));\n309: assertEquals(true, BooleanUtils.toBoolean(\"tRue\"));\n310: assertEquals(true, BooleanUtils.toBoolean(\"tRuE\"));\n311: assertEquals(true, BooleanUtils.toBoolean(\"tRUe\"));\n312: assertEquals(true, BooleanUtils.toBoolean(\"tRUE\"));\n313: assertEquals(true, BooleanUtils.toBoolean(\"TRUE\"));\n314: assertEquals(true, BooleanUtils.toBoolean(\"TRUe\"));\n315: assertEquals(true, BooleanUtils.toBoolean(\"TRuE\"));\n316: assertEquals(true, BooleanUtils.toBoolean(\"TRue\"));\n317: assertEquals(true, BooleanUtils.toBoolean(\"TrUE\"));\n318: assertEquals(true, BooleanUtils.toBoolean(\"TrUe\"));\n319: assertEquals(true, BooleanUtils.toBoolean(\"TruE\"));\n320: assertEquals(true, BooleanUtils.toBoolean(\"True\"));\n321: assertEquals(true, BooleanUtils.toBoolean(\"on\"));\n322: assertEquals(true, BooleanUtils.toBoolean(\"oN\"));\n323: assertEquals(true, BooleanUtils.toBoolean(\"On\"));\n324: assertEquals(true, BooleanUtils.toBoolean(\"ON\"));\n325: assertEquals(true, BooleanUtils.toBoolean(\"yes\"));\n326: assertEquals(true, BooleanUtils.toBoolean(\"yeS\"));\n327: assertEquals(true, BooleanUtils.toBoolean(\"yEs\"));\n328: assertEquals(true, BooleanUtils.toBoolean(\"yES\"));\n329: assertEquals(true, BooleanUtils.toBoolean(\"Yes\"));\n330: assertEquals(true, BooleanUtils.toBoolean(\"YeS\"));\n331: assertEquals(true, BooleanUtils.toBoolean(\"YEs\"));\n332: assertEquals(true, BooleanUtils.toBoolean(\"YES\"));\n333: assertEquals(false, BooleanUtils.toBoolean(\"yes?\"));\n334: assertEquals(false, BooleanUtils.toBoolean(\"tru\"));\n335: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.BooleanUtils:toBoolean(Ljava/lang/String;)Z",
                                    "method_body": "649: public static boolean toBoolean(String str) {\n656: if (str == \"true\") {\n657: return true;\n659: if (str == null) {\n660: return false;\n662: switch (str.length()) {\n664: char ch0 = str.charAt(0);\n665: char ch1 = str.charAt(1);\n666: return\n671: char ch = str.charAt(0);\n672: if (ch == 'y') {\n673: return\n677: if (ch == 'Y') {\n678: return\n684: char ch = str.charAt(0);\n685: if (ch == 't') {\n686: return\n691: if (ch == 'T') {\n692: return\n699: return false;\n700: }",
                                    "suspicious_rank": 0.408
                                }
                            ],
                            "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 3\nat java.lang.String.charAt(String.java:658)\nat org.apache.commons.lang.BooleanUtils.toBoolean(BooleanUtils.java:686)\nat org.apache.commons.lang.BooleanUtilsTest.test_toBoolean_String(BooleanUtilsTest.java:334)"
                        }
                    ]
                },
                {
                    "bug_id": 52,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript",
                            "test_body": "169: public void testEscapeJavaScript() {\n170: assertEquals(null, StringEscapeUtils.escapeJavaScript(null));\n171: try {\n172: StringEscapeUtils.escapeJavaScript(null, null);\n173: fail();\n174: } catch (IOException ex) {\n175: fail();\n176: } catch (IllegalArgumentException ex) {\n177: }\n178: try {\n179: StringEscapeUtils.escapeJavaScript(null, \"\");\n180: fail();\n181: } catch (IOException ex) {\n182: fail();\n183: } catch (IllegalArgumentException ex) {\n184: }\n185: 186: assertEquals(\"He didn\\\\'t say, \\\\\\\"stop!\\\\\\\"\", StringEscapeUtils.escapeJavaScript(\"He didn't say, \\\"stop!\\\"\"));\n187: assertEquals(\"document.getElementById(\\\\\\\"test\\\\\\\").value = \\\\'<script>alert(\\\\'aaa\\\\');<\\\\/script>\\\\';\", \n188: StringEscapeUtils.escapeJavaScript(\"document.getElementById(\\\"test\\\").value = '<script>alert('aaa');</script>';\"));\n189: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;",
                                    "method_body": "148: private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {\n149: if (str == null) {\n150: return null;\n153: StringWriter writer = new StringWriter(str.length() * 2);\n154: escapeJavaStyleString(writer, str, escapeSingleQuotes);\n155: return writer.toString();\n161: }",
                                    "suspicious_rank": 0.204
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V",
                                    "method_body": "137: public static void escapeJavaScript(Writer out, String str) throws IOException {\n138: escapeJavaStyleString(out, str, true);\n139: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "121: public static String escapeJavaScript(String str) {\n122: return escapeJavaStyleString(str, true);\n123: }",
                                    "suspicious_rank": 0.408
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V",
                                    "method_body": "171: private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\n172: if (out == null) {\n173: throw new IllegalArgumentException(\"The Writer must not be null\");\n175: if (str == null) {\n179: sz = str.length();\n180: for (int i = 0; i < sz; i++) {\n181: char ch = str.charAt(i);\n184: if (ch > 0xfff) {\n186: } else if (ch > 0xff) {\n188: } else if (ch > 0x7f) {\n190: } else if (ch < 32) {\n221: switch (ch) {\n223: if (escapeSingleQuote) {\n224: out.write('\\\\');\n226: out.write('\\'');\n227: break;\n229: out.write('\\\\');\n230: out.write('\"');\n231: break;\n237: out.write(ch);\n242: }",
                                    "suspicious_rank": 0.204
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<...ipt>alert(\\'aaa\\');<[\\]/script>\\';> but was:<...ipt>alert(\\'aaa\\');<[]/script>\\';>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(StringEscapeUtilsTest.java:187)"
                        }
                    ]
                },
                {
                    "bug_id": 53,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.time.DateUtilsTest.testRoundLang346",
                            "test_body": "705: public void testRoundLang346() throws Exception\n706: {\n707: TimeZone.setDefault(defaultZone);\n708: dateTimeParser.setTimeZone(defaultZone);\n709: Calendar testCalendar = Calendar.getInstance();\n710: testCalendar.set(2007, 6, 2, 8, 8, 50);\n711: Date date = testCalendar.getTime();\n712: assertEquals(\"Minute Round Up Failed\",\n713: dateTimeParser.parse(\"July 2, 2007 08:09:00.000\"),\n714: DateUtils.round(date, Calendar.MINUTE));\n715: 716: testCalendar.set(2007, 6, 2, 8, 8, 20);\n717: date = testCalendar.getTime();\n718: assertEquals(\"Minute No Round Failed\",\n719: dateTimeParser.parse(\"July 2, 2007 08:08:00.000\"),\n720: DateUtils.round(date, Calendar.MINUTE));\n721: 722: testCalendar.set(2007, 6, 2, 8, 8, 50);\n723: testCalendar.set(Calendar.MILLISECOND, 600);\n724: date = testCalendar.getTime();\n725: 726: assertEquals(\"Second Round Up with 600 Milli Seconds Failed\",\n727: dateTimeParser.parse(\"July 2, 2007 08:08:51.000\"),\n728: DateUtils.round(date, Calendar.SECOND));\n729: 730: testCalendar.set(2007, 6, 2, 8, 8, 50);\n731: testCalendar.set(Calendar.MILLISECOND, 200);\n732: date = testCalendar.getTime();\n733: assertEquals(\"Second Round Down with 200 Milli Seconds Failed\",\n734: dateTimeParser.parse(\"July 2, 2007 08:08:50.000\"),\n735: DateUtils.round(date, Calendar.SECOND));\n736: 737: testCalendar.set(2007, 6, 2, 8, 8, 20);\n738: testCalendar.set(Calendar.MILLISECOND, 600);\n739: date = testCalendar.getTime();\n740: assertEquals(\"Second Round Up with 200 Milli Seconds Failed\",\n741: dateTimeParser.parse(\"July 2, 2007 08:08:21.000\"),\n742: DateUtils.round(date, Calendar.SECOND));\n743: 744: testCalendar.set(2007, 6, 2, 8, 8, 20);\n745: testCalendar.set(Calendar.MILLISECOND, 200);\n746: date = testCalendar.getTime();\n747: assertEquals(\"Second Round Down with 200 Milli Seconds Failed\",\n748: dateTimeParser.parse(\"July 2, 2007 08:08:20.000\"),\n749: DateUtils.round(date, Calendar.SECOND));\n750: 751: testCalendar.set(2007, 6, 2, 8, 8, 50);\n752: date = testCalendar.getTime();\n753: assertEquals(\"Hour Round Down Failed\",\n754: dateTimeParser.parse(\"July 2, 2007 08:00:00.000\"),\n755: DateUtils.round(date, Calendar.HOUR));\n756: 757: testCalendar.set(2007, 6, 2, 8, 31, 50);\n758: date = testCalendar.getTime();\n759: assertEquals(\"Hour Round Up Failed\",\n760: dateTimeParser.parse(\"July 2, 2007 09:00:00.000\"),\n761: DateUtils.round(date, Calendar.HOUR));\n762: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.time.DateUtils:modify(Ljava/util/Calendar;IZ)V",
                                    "method_body": "620: private static void modify(Calendar val, int field, boolean round) {\n621: if (val.get(Calendar.YEAR) > 280000000) {\n625: if (field == Calendar.MILLISECOND) {\n635: Date date = val.getTime();\n636: long time = date.getTime();\n637: boolean done = false;\n640: int millisecs = val.get(Calendar.MILLISECOND);\n641: if (!round || millisecs < 500) {\n649: int seconds = val.get(Calendar.SECOND);\n650: if (!done && (!round || seconds < 30)) {\n658: int minutes = val.get(Calendar.MINUTE);\n659: if (!done && (!round || minutes < 30)) {\n660: time = time - (minutes * 60000L);\n664: if (date.getTime() != time) {\n665: date.setTime(time);\n666: val.setTime(date);\n670: boolean roundUp = false;\n671: for (int i = 0; i < fields.length; i++) {\n672: for (int j = 0; j < fields[i].length; j++) {\n673: if (fields[i][j] == field) {\n675: if (round && roundUp) {\n676: if (field == DateUtils.SEMI_MONTH) {\n689: val.add(fields[i][0], 1);\n692: return;\n696: int offset = 0;\n697: boolean offsetSet = false;\n699: switch (field) {\n729: if (!offsetSet) {\n730: int min = val.getActualMinimum(fields[i][0]);\n731: int max = val.getActualMaximum(fields[i][0]);\n733: offset = val.get(fields[i][0]) - min;\n735: roundUp = offset > ((max - min) / 2);\n738: if (offset != 0) {\n739: val.set(fields[i][0], val.get(fields[i][0]) - offset);\n744: }",
                                    "suspicious_rank": 0.167
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DateUtils:round(Ljava/util/Date;I)Ljava/util/Date;",
                                    "method_body": "436: public static Date round(Date date, int field) {\n437: if (date == null) {\n440: Calendar gval = Calendar.getInstance();\n441: gval.setTime(date);\n442: modify(gval, field, true);\n443: return gval.getTime();\n444: }",
                                    "suspicious_rank": 0.236
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Minute Round Up Failed expected:<Mon Jul 02 08:09:00 PDT 2007> but was:<Mon Jul 02 08:01:00 PDT 2007>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.TestCase.assertEquals(TestCase.java:244)\nat org.apache.commons.lang.time.DateUtilsTest.testRoundLang346(DateUtilsTest.java:712)"
                        }
                    ]
                },
                {
                    "bug_id": 54,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testLang328",
                            "test_body": "504: public void testLang328() {\n505: assertValidToLocale(\"fr__POSIX\", \"fr\", \"\", \"POSIX\");\n506: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:toLocale(Ljava/lang/String;)Ljava/util/Locale;",
                                    "method_body": "94: public static Locale toLocale(String str) {\n95: if (str == null) {\n98: int len = str.length();\n99: if (len != 2 && len != 5 && len < 7) {\n102: char ch0 = str.charAt(0);\n103: char ch1 = str.charAt(1);\n104: if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n107: if (len == 2) {\n110: if (str.charAt(2) != '_') {\n113: char ch3 = str.charAt(3);\n114: char ch4 = str.charAt(4);\n115: if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n116: throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n127: }",
                                    "suspicious_rank": 0.204
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return availableLocaleList().contains(locale);\n224: }",
                                    "suspicious_rank": 0.118
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:availableLocaleList()Ljava/util/List;",
                                    "method_body": "191: public static List availableLocaleList() {\n192: return cAvailableLocaleList;\n193: }",
                                    "suspicious_rank": 0.118
                                }
                            ],
                            "stack_trace": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX\nat org.apache.commons.lang.LocaleUtils.toLocale(LocaleUtils.java:116)\nat org.apache.commons.lang.LocaleUtilsTest.assertValidToLocale(LocaleUtilsTest.java:140)\nat org.apache.commons.lang.LocaleUtilsTest.testLang328(LocaleUtilsTest.java:505)"
                        }
                    ]
                },
                {
                    "bug_id": 55,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.time.StopWatchTest.testLang315",
                            "test_body": "111: public void testLang315() {\n112: StopWatch watch = new StopWatch();\n113: watch.start();\n114: try {Thread.sleep(200);} catch (InterruptedException ex) {}\n115: watch.suspend();\n116: long suspendTime = watch.getTime();\n117: try {Thread.sleep(200);} catch (InterruptedException ex) {}\n118: watch.stop();\n119: long totalTime = watch.getTime();\n120: assertTrue( suspendTime == totalTime );\n121: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.time.StopWatch:getTime()J",
                                    "method_body": "208: public long getTime() {\n209: if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) {\n210: return this.stopTime - this.startTime;\n219: }",
                                    "suspicious_rank": 0.169
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.StopWatch:suspend()V",
                                    "method_body": "175: public void suspend() {\n176: if(this.runningState != STATE_RUNNING) {\n179: stopTime = System.currentTimeMillis();\n180: this.runningState = STATE_SUSPENDED;\n181: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.StopWatch:start()V",
                                    "method_body": "95: public void start() {\n96: if(this.runningState == STATE_STOPPED) {\n99: if(this.runningState != STATE_UNSTARTED) {\n102: stopTime = -1;\n103: startTime = System.currentTimeMillis();\n104: this.runningState = STATE_RUNNING;\n105: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.StopWatch:<init>()V",
                                    "method_body": "53: private static final int STATE_UNSTARTED = 0;\n65: private int runningState = STATE_UNSTARTED;\n70: private int splitState   = STATE_UNSPLIT;\n75: private long startTime = -1;\n79: private long stopTime = -1;\n85: super();\n86: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.StopWatch:stop()V",
                                    "method_body": "114: public void stop() {\n115: if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n118: stopTime = System.currentTimeMillis();\n119: this.runningState = STATE_STOPPED;\n120: }",
                                    "suspicious_rank": 0.169
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertTrue(Assert.java:31)\nat junit.framework.TestCase.assertTrue(TestCase.java:201)\nat org.apache.commons.lang.time.StopWatchTest.testLang315(StopWatchTest.java:120)"
                        }
                    ]
                },
                {
                    "bug_id": 57,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testAvailableLocaleList",
                            "test_body": "348: public void testAvailableLocaleList() {\n349: List list = LocaleUtils.availableLocaleList();\n350: List list2 = LocaleUtils.availableLocaleList();\n351: assertNotNull(list);\n352: assertSame(list, list2);\n353: assertUnmodifiableCollection(list);\n354: 355: Locale[] jdkLocaleArray = Locale.getAvailableLocales();\n356: List jdkLocaleList = Arrays.asList(jdkLocaleArray);\n357: assertEquals(jdkLocaleList, list);\n358: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:<clinit>()V",
                                    "method_body": "43: private static final List cAvailableLocaleList;\n47: private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());\n49: private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());\n51: List list = Arrays.asList(Locale.getAvailableLocales());\n52: cAvailableLocaleList = Collections.unmodifiableList(list);\n53: }",
                                    "suspicious_rank": 0.829
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testCountriesByLanguage\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_LocaleLocale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLanguagesByCountry\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_1Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testLanguagesByCountry",
                            "test_body": "432: public void testLanguagesByCountry() {\n433: assertLanguageByCountry(null, new String[0]);\n434: assertLanguageByCountry(\"GB\", new String[]{\"en\"});\n435: assertLanguageByCountry(\"ZZ\", new String[0]);\n436: assertLanguageByCountry(\"CH\", new String[]{\"fr\", \"de\", \"it\"});\n437: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_1Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testToLocale_3Part",
                            "test_body": "231: public void testToLocale_3Part() {\n232: assertValidToLocale(\"us_EN_A\", \"us\", \"EN\", \"A\");\n233: // this isn't pretty, but was caused by a jdk bug it seems\n234: // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4210525\n235: if (SystemUtils.isJavaVersionAtLeast(1.4f)) {\n236: assertValidToLocale(\"us_EN_a\", \"us\", \"EN\", \"a\");\n237: assertValidToLocale(\"us_EN_SFsafdFDsdfF\", \"us\", \"EN\", \"SFsafdFDsdfF\");\n238: } else {\n239: assertValidToLocale(\"us_EN_a\", \"us\", \"EN\", \"A\");\n240: assertValidToLocale(\"us_EN_SFsafdFDsdfF\", \"us\", \"EN\", \"SFSAFDFDSDFF\");\n241: }\n242: 243: try {\n244: LocaleUtils.toLocale(\"us_EN-a\");\n245: fail(\"Should fail as not underscore\");\n246: } catch (IllegalArgumentException iae) {}\n247: try {\n248: LocaleUtils.toLocale(\"uu_UU_\");\n249: fail(\"Must be 3, 5 or 7+ in length\");\n250: } catch (IllegalArgumentException iae) {}\n251: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testLocaleLookupList_LocaleLocale",
                            "test_body": "294: public void testLocaleLookupList_LocaleLocale() {\n295: assertLocaleLookupList(LOCALE_QQ, LOCALE_QQ, \n296: new Locale[]{LOCALE_QQ});\n297: assertLocaleLookupList(LOCALE_EN, LOCALE_EN, \n298: new Locale[]{LOCALE_EN});\n299: 300: assertLocaleLookupList(LOCALE_EN_US, LOCALE_EN_US, \n301: new Locale[]{\n302: LOCALE_EN_US,\n303: LOCALE_EN});\n304: assertLocaleLookupList(LOCALE_EN_US, LOCALE_QQ,\n305: new Locale[] {\n306: LOCALE_EN_US,\n307: LOCALE_EN,\n308: LOCALE_QQ});\n309: assertLocaleLookupList(LOCALE_EN_US, LOCALE_QQ_ZZ,\n310: new Locale[] {\n311: LOCALE_EN_US,\n312: LOCALE_EN,\n313: LOCALE_QQ_ZZ});\n314: 315: assertLocaleLookupList(LOCALE_EN_US_ZZZZ, null,\n316: new Locale[] {\n317: LOCALE_EN_US_ZZZZ,\n318: LOCALE_EN_US,\n319: LOCALE_EN});\n320: assertLocaleLookupList(LOCALE_EN_US_ZZZZ, LOCALE_EN_US_ZZZZ,\n321: new Locale[] {\n322: LOCALE_EN_US_ZZZZ,\n323: LOCALE_EN_US,\n324: LOCALE_EN});\n325: assertLocaleLookupList(LOCALE_EN_US_ZZZZ, LOCALE_QQ,\n326: new Locale[] {\n327: LOCALE_EN_US_ZZZZ,\n328: LOCALE_EN_US,\n329: LOCALE_EN,\n330: LOCALE_QQ});\n331: assertLocaleLookupList(LOCALE_EN_US_ZZZZ, LOCALE_QQ_ZZ,\n332: new Locale[] {\n333: LOCALE_EN_US_ZZZZ,\n334: LOCALE_EN_US,\n335: LOCALE_EN,\n336: LOCALE_QQ_ZZ});\n337: assertLocaleLookupList(LOCALE_FR_CA, LOCALE_EN,\n338: new Locale[] {\n339: LOCALE_FR_CA,\n340: LOCALE_FR,\n341: LOCALE_EN});\n342: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLanguagesByCountry\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_1Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testIsAvailableLocale",
                            "test_body": "381: public void testIsAvailableLocale() {\n382: Set set = LocaleUtils.availableLocaleSet();\n383: assertEquals(set.contains(LOCALE_EN), LocaleUtils.isAvailableLocale(LOCALE_EN));\n384: assertEquals(set.contains(LOCALE_EN_US), LocaleUtils.isAvailableLocale(LOCALE_EN_US));\n385: assertEquals(set.contains(LOCALE_EN_US_ZZZZ), LocaleUtils.isAvailableLocale(LOCALE_EN_US_ZZZZ));\n386: assertEquals(set.contains(LOCALE_FR), LocaleUtils.isAvailableLocale(LOCALE_FR));\n387: assertEquals(set.contains(LOCALE_FR_CA), LocaleUtils.isAvailableLocale(LOCALE_FR_CA));\n388: assertEquals(set.contains(LOCALE_QQ), LocaleUtils.isAvailableLocale(LOCALE_QQ));\n389: assertEquals(set.contains(LOCALE_QQ_ZZ), LocaleUtils.isAvailableLocale(LOCALE_QQ_ZZ));\n390: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testAvailableLocaleList\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testCountriesByLanguage\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_LocaleLocale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLanguagesByCountry\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_1Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testToLocale_2Part",
                            "test_body": "197: public void testToLocale_2Part() {\n198: assertValidToLocale(\"us_EN\", \"us\", \"EN\");\n199: //valid though doesnt exist\n200: assertValidToLocale(\"us_ZH\", \"us\", \"ZH\");\n201: 202: try {\n203: LocaleUtils.toLocale(\"us-EN\");\n204: fail(\"Should fail as not underscore\");\n205: } catch (IllegalArgumentException iae) {}\n206: try {\n207: LocaleUtils.toLocale(\"us_En\");\n208: fail(\"Should fail second part not uppercase\");\n209: } catch (IllegalArgumentException iae) {}\n210: try {\n211: LocaleUtils.toLocale(\"us_en\");\n212: fail(\"Should fail second part not uppercase\");\n213: } catch (IllegalArgumentException iae) {}\n214: try {\n215: LocaleUtils.toLocale(\"us_eN\");\n216: fail(\"Should fail second part not uppercase\");\n217: } catch (IllegalArgumentException iae) {}\n218: try {\n219: LocaleUtils.toLocale(\"uS_EN\");\n220: fail(\"Should fail first part not lowercase\");\n221: } catch (IllegalArgumentException iae) {}\n222: try {\n223: LocaleUtils.toLocale(\"us_E3\");\n224: fail(\"Should fail second part not uppercase\");\n225: } catch (IllegalArgumentException iae) {}\n226: }        \n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testConstructor",
                            "test_body": "89: public void testConstructor() {\n90: assertNotNull(new LocaleUtils());\n91: Constructor[] cons = LocaleUtils.class.getDeclaredConstructors();\n92: assertEquals(1, cons.length);\n93: assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));\n94: assertEquals(true, Modifier.isPublic(LocaleUtils.class.getModifiers()));\n95: assertEquals(false, Modifier.isFinal(LocaleUtils.class.getModifiers()));\n96: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testAvailableLocaleSet",
                            "test_body": "364: public void testAvailableLocaleSet() {\n365: Set set = LocaleUtils.availableLocaleSet();\n366: Set set2 = LocaleUtils.availableLocaleSet();\n367: assertNotNull(set);\n368: assertSame(set, set2);\n369: assertUnmodifiableCollection(set);\n370: 371: Locale[] jdkLocaleArray = Locale.getAvailableLocales();\n372: List jdkLocaleList = Arrays.asList(jdkLocaleArray);\n373: Set jdkLocaleSet = new HashSet(jdkLocaleList);\n374: assertEquals(jdkLocaleSet, set);\n375: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testIsAvailableLocale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testAvailableLocaleList\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testCountriesByLanguage\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_LocaleLocale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLanguagesByCountry\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_1Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testToLocale_1Part",
                            "test_body": "151: public void testToLocale_1Part() {\n152: assertEquals(null, LocaleUtils.toLocale((String) null));\n153: 154: assertValidToLocale(\"us\");\n155: assertValidToLocale(\"fr\");\n156: assertValidToLocale(\"de\");\n157: assertValidToLocale(\"zh\");\n158: // Valid format but lang doesnt exist, should make instance anyway\n159: assertValidToLocale(\"qq\");\n160: 161: try {\n162: LocaleUtils.toLocale(\"Us\");\n163: fail(\"Should fail if not lowercase\");\n164: } catch (IllegalArgumentException iae) {}\n165: try {\n166: LocaleUtils.toLocale(\"US\");\n167: fail(\"Should fail if not lowercase\");\n168: } catch (IllegalArgumentException iae) {}\n169: try {\n170: LocaleUtils.toLocale(\"uS\");\n171: fail(\"Should fail if not lowercase\");\n172: } catch (IllegalArgumentException iae) {}\n173: try {\n174: LocaleUtils.toLocale(\"u#\");\n175: fail(\"Should fail if not lowercase\");\n176: } catch (IllegalArgumentException iae) {}\n177: 178: try {\n179: LocaleUtils.toLocale(\"u\");\n180: fail(\"Must be 2 chars if less than 5\");\n181: } catch (IllegalArgumentException iae) {}\n182: 183: try {\n184: LocaleUtils.toLocale(\"uuu\");\n185: fail(\"Must be 2 chars if less than 5\");\n186: } catch (IllegalArgumentException iae) {}\n187: 188: try {\n189: LocaleUtils.toLocale(\"uu_U\");\n190: fail(\"Must be 2 chars if less than 5\");\n191: } catch (IllegalArgumentException iae) {}\n192: }        \n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testCountriesByLanguage",
                            "test_body": "479: public void testCountriesByLanguage() {}\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_LocaleLocale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLanguagesByCountry\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_1Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.LocaleUtilsTest.testLocaleLookupList_Locale",
                            "test_body": "275: public void testLocaleLookupList_Locale() {\n276: assertLocaleLookupList(null, null, new Locale[0]);\n277: assertLocaleLookupList(LOCALE_QQ, null, new Locale[]{LOCALE_QQ});\n278: assertLocaleLookupList(LOCALE_EN, null, new Locale[]{LOCALE_EN});\n279: assertLocaleLookupList(LOCALE_EN, null, new Locale[]{LOCALE_EN});\n280: assertLocaleLookupList(LOCALE_EN_US, null,\n281: new Locale[] {\n282: LOCALE_EN_US,\n283: LOCALE_EN});\n284: assertLocaleLookupList(LOCALE_EN_US_ZZZZ, null,\n285: new Locale[] {\n286: LOCALE_EN_US_ZZZZ,\n287: LOCALE_EN_US,\n288: LOCALE_EN});\n289: }        \n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                                    "method_body": "222: public static boolean isAvailableLocale(Locale locale) {\n223: return cAvailableLocaleSet.contains(locale);\n224: }",
                                    "suspicious_rank": 0.829
                                }
                            ],
                            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n--- org.apache.commons.lang.LocaleUtilsTest::testConstructor\njava.lang.NullPointerException\nat org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)\nat org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)\nat junit.framework.TestCase.runBare(TestCase.java:139)\nat junit.framework.TestResult$1.protect(TestResult.java:122)\nat junit.framework.TestResult.runProtected(TestResult.java:142)\nat junit.framework.TestResult.run(TestResult.java:125)\nat junit.framework.TestCase.run(TestCase.java:129)\nat junit.framework.TestSuite.runTest(TestSuite.java:255)\nat junit.framework.TestSuite.run(TestSuite.java:250)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)\nat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)\nat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\nat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\nat org.apache.tools.ant.Task.perform(Task.java:348)\nat org.apache.tools.ant.Target.execute(Target.java:392)\nat org.apache.tools.ant.Target.performTasks(Target.java:413)\nat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\nat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\nat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\nat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\nat org.apache.tools.ant.Main.runBuild(Main.java:811)\nat org.apache.tools.ant.Main.startAnt(Main.java:217)\nat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\nat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
                        }
                    ]
                },
                {
                    "bug_id": 58,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.math.NumberUtilsTest.testLang300",
                            "test_body": "1368: public void testLang300() {\n1369: NumberUtils.createNumber(\"-1l\");\n1370: NumberUtils.createNumber(\"01l\");\n1371: NumberUtils.createNumber(\"1l\");\n1372: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:isEmpty(Ljava/lang/String;)Z",
                                    "method_body": "184: public static boolean isEmpty(String str) {\n185: return str == null || str.length() == 0;\n186: }",
                                    "suspicious_rank": 0.027
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:isBlank(Ljava/lang/String;)Z",
                                    "method_body": "221: public static boolean isBlank(String str) {\n223: if (str == null || (strLen = str.length()) == 0) {\n226: for (int i = 0; i < strLen; i++) {\n227: if ((Character.isWhitespace(str.charAt(i)) == false)) {\n228: return false;\n232: }",
                                    "suspicious_rank": 0.154
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z",
                                    "method_body": "1506: public static boolean isDigits(String str) {\n1507: if (StringUtils.isEmpty(str)) {\n1508: return false;\n1510: for (int i = 0; i < str.length(); i++) {\n1511: if (!Character.isDigit(str.charAt(i))) {\n1515: return true;\n1516: }",
                                    "suspicious_rank": 0.189
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;",
                                    "method_body": "627: public static Long createLong(String str) {\n628: if (str == null) {\n631: return Long.valueOf(str);\n632: }",
                                    "suspicious_rank": 0.189
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
                                    "method_body": "397: public static Number createNumber(String str) throws NumberFormatException {\n398: if (str == null) {\n401: if (StringUtils.isBlank(str)) {\n404: if (str.startsWith(\"--\")) {\n411: if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n414: char lastChar = str.charAt(str.length() - 1);\n418: int decPos = str.indexOf('.');\n419: int expPos = str.indexOf('e') + str.indexOf('E') + 1;\n421: if (decPos > -1) {\n433: if (expPos > -1) {\n436: mant = str;\n438: dec = null;\n440: if (!Character.isDigit(lastChar)) {\n441: if (expPos > -1 && expPos < str.length() - 1) {\n444: exp = null;\n447: String numeric = str.substring(0, str.length() - 1);\n448: boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n449: switch (lastChar) {\n452: if (dec == null\n457: return createLong(numeric);\n464: throw new NumberFormatException(str + \" is not a valid number.\");\n545: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.math.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
                                    "method_body": "555: private static boolean isAllZeros(String str) {\n556: if (str == null) {\n559: for (int i = str.length() - 1; i >= 0; i--) {\n560: if (str.charAt(i) != '0') {\n561: return false;\n565: }",
                                    "suspicious_rank": 0.218
                                }
                            ],
                            "stack_trace": "java.lang.NumberFormatException: 1l is not a valid number.\nat org.apache.commons.lang.math.NumberUtils.createNumber(NumberUtils.java:464)\nat org.apache.commons.lang.math.NumberUtilsTest.testLang300(NumberUtilsTest.java:1371)"
                        }
                    ]
                },
                {
                    "bug_id": 59,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.text.StrBuilderAppendInsertTest.testLang299",
                            "test_body": "600: public void testLang299() {\n601: StrBuilder sb = new StrBuilder(1);\n602: sb.appendFixedWidthPadRight(\"foo\", 1, '-');\n603: assertEquals(\"f\", sb.toString());\n604: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "878: public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n879: if (width > 0) {\n880: ensureCapacity(size + width);\n881: String str = (obj == null ? getNullText() : obj.toString());\n882: int strLen = str.length();\n883: if (strLen >= width) {\n884: str.getChars(0, strLen, buffer, size);\n895: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>(I)V",
                                    "method_body": "106: public StrBuilder(int initialCapacity) {\n107: super();\n108: if (initialCapacity <= 0) {\n111: buffer = new char[initialCapacity];\n112: }",
                                    "suspicious_rank": 0.034
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:ensureCapacity(I)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "227: public StrBuilder ensureCapacity(int capacity) {\n228: if (capacity > buffer.length) {\n233: return this;\n234: }",
                                    "suspicious_rank": 0.029
                                }
                            ],
                            "stack_trace": "java.lang.ArrayIndexOutOfBoundsException\nat java.lang.String.getChars(String.java:826)\nat org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(StrBuilder.java:884)\nat org.apache.commons.lang.text.StrBuilderAppendInsertTest.testLang299(StrBuilderAppendInsertTest.java:602)"
                        }
                    ]
                },
                {
                    "bug_id": 60,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.text.StrBuilderTest.testLang295",
                            "test_body": "1745: public void testLang295() {\n1746: StrBuilder sb = new StrBuilder(\"onetwothree\");\n1747: sb.deleteFirst(\"three\");\n1748: assertFalse( \"The contains(char) method is looking beyond the end of the string\", sb.contains('h'));\n1749: assertEquals( \"The indexOf(char) method is looking beyond the end of the string\", -1, sb.indexOf('h'));\n1750: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:contains(C)Z",
                                    "method_body": "1671: public boolean contains(char ch) {\n1672: char[] thisBuf = buffer;\n1673: for (int i = 0; i < thisBuf.length; i++) {\n1674: if (thisBuf[i] == ch) {\n1675: return true;\n1679: }",
                                    "suspicious_rank": 0.267
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:indexOf(Ljava/lang/String;I)I",
                                    "method_body": "1760: public int indexOf(String str, int startIndex) {\n1761: startIndex = (startIndex < 0 ? 0 : startIndex);\n1762: if (str == null || startIndex >= size) {\n1765: int strLen = str.length();\n1766: if (strLen == 1) {\n1769: if (strLen == 0) {\n1772: if (strLen > size) {\n1775: char[] thisBuf = buffer;\n1776: int len = size - strLen + 1;\n1778: for (int i = startIndex; i < len; i++) {\n1779: for (int j = 0; j < strLen; j++) {\n1780: if (str.charAt(j) != thisBuf[i + j]) {\n1781: continue outer;\n1784: return i;\n1787: }",
                                    "suspicious_rank": 0.12
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:deleteImpl(III)V",
                                    "method_body": "1113: private void deleteImpl(int startIndex, int endIndex, int len) {\n1114: System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);\n1115: size -= len;\n1116: }",
                                    "suspicious_rank": 0.094
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:ensureCapacity(I)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "227: public StrBuilder ensureCapacity(int capacity) {\n228: if (capacity > buffer.length) {\n233: return this;\n234: }",
                                    "suspicious_rank": 0.029
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:deleteFirst(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "1201: public StrBuilder deleteFirst(String str) {\n1202: int len = (str == null ? 0 : str.length());\n1203: if (len > 0) {\n1204: int index = indexOf(str, 0);\n1205: if (index >= 0) {\n1206: deleteImpl(index, index + len, len);\n1209: return this;\n1210: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>(Ljava/lang/String;)V",
                                    "method_body": "120: public StrBuilder(String str) {\n121: super();\n122: if (str == null) {\n125: buffer = new char[str.length() + CAPACITY];\n126: append(str);\n128: }",
                                    "suspicious_rank": 0.045
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:length()I",
                                    "method_body": "181: public int length() {\n182: return size;\n183: }",
                                    "suspicious_rank": 0.029
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:append(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "468: public StrBuilder append(String str) {\n469: if (str == null) {\n472: int strLen = str.length();\n473: if (strLen > 0) {\n474: int len = length();\n475: ensureCapacity(len + strLen);\n476: str.getChars(0, strLen, buffer, len);\n477: size += strLen;\n479: return this;\n480: }",
                                    "suspicious_rank": 0.035
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: The contains(char) method is looking beyond the end of the string\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertFalse(Assert.java:39)\nat junit.framework.TestCase.assertFalse(TestCase.java:210)\nat org.apache.commons.lang.text.StrBuilderTest.testLang295(StrBuilderTest.java:1748)"
                        }
                    ]
                },
                {
                    "bug_id": 61,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.text.StrBuilderTest.testLang294",
                            "test_body": "1732: public void testLang294() {\n1733: StrBuilder sb = new StrBuilder(\"\\n%BLAH%\\nDo more stuff\\neven more stuff\\n%BLAH%\\n\");\n1734: sb.deleteAll(\"\\n%BLAH%\");\n1735: assertEquals(\"\\nDo more stuff\\neven more stuff\\n\", sb.toString()); \n1736: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:deleteAll(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "1183: public StrBuilder deleteAll(String str) {\n1184: int len = (str == null ? 0 : str.length());\n1185: if (len > 0) {\n1186: int index = indexOf(str, 0);\n1187: while (index >= 0) {\n1188: deleteImpl(index, index + len, len);\n1189: index = indexOf(str, index);\n1193: }",
                                    "suspicious_rank": 0.25
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:indexOf(Ljava/lang/String;I)I",
                                    "method_body": "1760: public int indexOf(String str, int startIndex) {\n1761: startIndex = (startIndex < 0 ? 0 : startIndex);\n1762: if (str == null || startIndex >= size) {\n1765: int strLen = str.length();\n1766: if (strLen == 1) {\n1769: if (strLen == 0) {\n1772: if (strLen > size) {\n1775: char[] thisBuf = buffer;\n1776: int len = thisBuf.length - strLen;\n1778: for (int i = startIndex; i < len; i++) {\n1779: for (int j = 0; j < strLen; j++) {\n1780: if (str.charAt(j) != thisBuf[i + j]) {\n1781: continue outer;\n1784: return i;\n1787: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:deleteImpl(III)V",
                                    "method_body": "1113: private void deleteImpl(int startIndex, int endIndex, int len) {\n1114: System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);\n1115: size -= len;\n1116: }",
                                    "suspicious_rank": 0.183
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:ensureCapacity(I)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "227: public StrBuilder ensureCapacity(int capacity) {\n228: if (capacity > buffer.length) {\n233: return this;\n234: }",
                                    "suspicious_rank": 0.054
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>(Ljava/lang/String;)V",
                                    "method_body": "120: public StrBuilder(String str) {\n121: super();\n122: if (str == null) {\n125: buffer = new char[str.length() + CAPACITY];\n126: append(str);\n128: }",
                                    "suspicious_rank": 0.085
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:length()I",
                                    "method_body": "181: public int length() {\n182: return size;\n183: }",
                                    "suspicious_rank": 0.054
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:append(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "468: public StrBuilder append(String str) {\n469: if (str == null) {\n472: int strLen = str.length();\n473: if (strLen > 0) {\n474: int len = length();\n475: ensureCapacity(len + strLen);\n476: str.getChars(0, strLen, buffer, len);\n477: size += strLen;\n479: return this;\n480: }",
                                    "suspicious_rank": 0.066
                                }
                            ],
                            "stack_trace": "java.lang.ArrayIndexOutOfBoundsException\nat java.lang.System.arraycopy(Native Method)\nat org.apache.commons.lang.text.StrBuilder.deleteImpl(StrBuilder.java:1114)\nat org.apache.commons.lang.text.StrBuilder.deleteAll(StrBuilder.java:1188)\nat org.apache.commons.lang.text.StrBuilderTest.testLang294(StrBuilderTest.java:1734)"
                        },
                        {
                            "test_name": "org.apache.commons.lang.text.StrBuilderTest.testIndexOfLang294",
                            "test_body": "1738: public void testIndexOfLang294() {\n1739: StrBuilder sb = new StrBuilder(\"onetwothree\");\n1740: sb.deleteFirst(\"three\");\n1741: assertEquals(-1, sb.indexOf(\"three\"));\n1742: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:indexOf(Ljava/lang/String;I)I",
                                    "method_body": "1760: public int indexOf(String str, int startIndex) {\n1761: startIndex = (startIndex < 0 ? 0 : startIndex);\n1762: if (str == null || startIndex >= size) {\n1765: int strLen = str.length();\n1766: if (strLen == 1) {\n1769: if (strLen == 0) {\n1772: if (strLen > size) {\n1775: char[] thisBuf = buffer;\n1776: int len = thisBuf.length - strLen;\n1778: for (int i = startIndex; i < len; i++) {\n1779: for (int j = 0; j < strLen; j++) {\n1780: if (str.charAt(j) != thisBuf[i + j]) {\n1781: continue outer;\n1784: return i;\n1787: }",
                                    "suspicious_rank": 0.236
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:deleteImpl(III)V",
                                    "method_body": "1113: private void deleteImpl(int startIndex, int endIndex, int len) {\n1114: System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);\n1115: size -= len;\n1116: }",
                                    "suspicious_rank": 0.183
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:ensureCapacity(I)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "227: public StrBuilder ensureCapacity(int capacity) {\n228: if (capacity > buffer.length) {\n233: return this;\n234: }",
                                    "suspicious_rank": 0.054
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:deleteFirst(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "1201: public StrBuilder deleteFirst(String str) {\n1202: int len = (str == null ? 0 : str.length());\n1203: if (len > 0) {\n1204: int index = indexOf(str, 0);\n1205: if (index >= 0) {\n1206: deleteImpl(index, index + len, len);\n1209: return this;\n1210: }",
                                    "suspicious_rank": 0.25
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:<init>(Ljava/lang/String;)V",
                                    "method_body": "120: public StrBuilder(String str) {\n121: super();\n122: if (str == null) {\n125: buffer = new char[str.length() + CAPACITY];\n126: append(str);\n128: }",
                                    "suspicious_rank": 0.085
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:length()I",
                                    "method_body": "181: public int length() {\n182: return size;\n183: }",
                                    "suspicious_rank": 0.054
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:append(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;",
                                    "method_body": "468: public StrBuilder append(String str) {\n469: if (str == null) {\n472: int strLen = str.length();\n473: if (strLen > 0) {\n474: int len = length();\n475: ensureCapacity(len + strLen);\n476: str.getChars(0, strLen, buffer, len);\n477: size += strLen;\n479: return this;\n480: }",
                                    "suspicious_rank": 0.066
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.text.StrBuilder:indexOf(Ljava/lang/String;)I",
                                    "method_body": "1746: public int indexOf(String str) {\n1747: return indexOf(str, 0);\n1748: }",
                                    "suspicious_rank": 0.25
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: expected:<-1> but was:<6>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang.text.StrBuilderTest.testIndexOfLang294(StrBuilderTest.java:1741)"
                        }
                    ]
                },
                {
                    "bug_id": 62,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.EntitiesTest.testNumberOverflow",
                            "test_body": "200: public void testNumberOverflow() throws Exception {\n201: doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");\n202: doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");\n203: doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");\n204: doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");\n205: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.IntHashMap:<init>(IF)V",
                                    "method_body": "120: public IntHashMap(int initialCapacity, float loadFactor) {\n121: super();\n122: if (initialCapacity < 0) {\n125: if (loadFactor <= 0) {\n128: if (initialCapacity == 0) {\n132: this.loadFactor = loadFactor;\n133: table = new Entry[initialCapacity];\n134: threshold = (int) (initialCapacity * loadFactor);\n135: }",
                                    "suspicious_rank": 0.321
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities$LookupEntityMap:<init>()V",
                                    "method_body": "503: private String[] lookupTable;\n504: private int LOOKUP_TABLE_SIZE = 256;\n507: * {@inheritDoc}",
                                    "suspicious_rank": 0.35
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities$PrimitiveEntityMap:<init>()V",
                                    "method_body": "400: void add(String name, int value);\n419: static class PrimitiveEntityMap implements EntityMap {\n420: private Map mapNameToValue = new HashMap();\n421: private IntHashMap mapValueToName = new IntHashMap();\n427: mapNameToValue.put(name, new Integer(value));\n428: mapValueToName.put(value, name);\n429: }\n448: }",
                                    "suspicious_rank": 0.35
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.IntHashMap$Entry:<init>(IILjava/lang/Object;Lorg/apache/commons/lang/IntHashMap$Entry;)V",
                                    "method_body": "83: protected Entry(int hash, int key, Object value, Entry next) {\n84: this.hash = hash;\n85: this.key = key;\n86: this.value = value;\n87: this.next = next;\n88: }",
                                    "suspicious_rank": 0.324
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities:addEntity(Ljava/lang/String;I)V",
                                    "method_body": "712: public void addEntity(String name, int value) {\n713: map.add(name, value);\n714: }",
                                    "suspicious_rank": 0.35
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities:unescape(Ljava/lang/String;)Ljava/lang/String;",
                                    "method_body": "813: public String unescape(String str) {\n814: int firstAmp = str.indexOf('&');\n815: if (firstAmp < 0) {\n819: StringBuffer buf = new StringBuffer(str.length());\n820: buf.append(str.substring(0, firstAmp));\n821: for (int i = firstAmp; i < str.length(); ++i) {\n822: char ch = str.charAt(i);\n823: if (ch == '&') {\n824: int semi = str.indexOf(';', i + 1);\n825: if (semi == -1) {\n829: int amph = str.indexOf('&', i + 1);\n830: if( amph != -1 && amph < semi ) {\n835: String entityName = str.substring(i + 1, semi);\n837: if (entityName.length() == 0) {\n839: } else if (entityName.charAt(0) == '#') {\n840: if (entityName.length() == 1) {\n843: char charAt1 = entityName.charAt(1);\n845: if (charAt1 == 'x' || charAt1=='X') {\n848: entityValue = Integer.parseInt(entityName.substring(1));\n852: }\n853: }\n857: if (entityValue == -1) {\n862: buf.append((char) (entityValue));\n864: i = semi;\n865: } else {\n869: return buf.toString();\n870: }",
                                    "suspicious_rank": 0.429
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.IntHashMap:<init>()V",
                                    "method_body": "95: public IntHashMap() {\n96: this(20, 0.75f);\n97: }",
                                    "suspicious_rank": 0.324
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.Entities$PrimitiveEntityMap:add(Ljava/lang/String;I)V",
                                    "method_body": "400: void add(String name, int value);\n419: static class PrimitiveEntityMap implements EntityMap {\n420: private Map mapNameToValue = new HashMap();\n421: private IntHashMap mapValueToName = new IntHashMap();\n427: mapNameToValue.put(name, new Integer(value));\n428: mapValueToName.put(value, name);\n429: }\n448: }",
                                    "suspicious_rank": 0.35
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.IntHashMap:put(ILjava/lang/Object;)Ljava/lang/Object;",
                                    "method_body": "294: public Object put(int key, Object value) {\n296: Entry tab[] = table;\n297: int hash = key;\n298: int index = (hash & 0x7FFFFFFF) % tab.length;\n299: for (Entry e = tab[index]; e != null; e = e.next) {\n307: if (count >= threshold) {\n316: Entry e = new Entry(hash, key, value, tab[index]);\n317: tab[index] = e;\n318: count++;\n319: return null;\n320: }",
                                    "suspicious_rank": 0.324
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[\u614e]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)\nat org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)"
                        }
                    ]
                },
                {
                    "bug_id": 63,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.time.DurationFormatUtilsTest.testJiraLang281",
                            "test_body": "417: public void testJiraLang281() {\n418: Calendar cal = Calendar.getInstance();\n419: cal.set(Calendar.MONTH, Calendar.DECEMBER);\n420: cal.set(Calendar.DAY_OF_MONTH, 31);\n421: cal.set(Calendar.YEAR, 2005);\n422: cal.set(Calendar.HOUR_OF_DAY, 0);\n423: cal.set(Calendar.MINUTE, 0);\n424: cal.set(Calendar.SECOND, 0);\n425: cal.set(Calendar.MILLISECOND, 0);\n426: 427: Calendar cal2 = Calendar.getInstance();\n428: cal2.set(Calendar.MONTH, Calendar.OCTOBER);\n429: cal2.set(Calendar.DAY_OF_MONTH, 6);\n430: cal2.set(Calendar.YEAR, 2006);\n431: cal2.set(Calendar.HOUR_OF_DAY, 0);\n432: cal2.set(Calendar.MINUTE, 0);\n433: cal2.set(Calendar.SECOND, 0);\n434: cal2.set(Calendar.MILLISECOND, 0);\n435: String result = DurationFormatUtils.formatPeriod(cal.getTime().getTime(), cal2.getTime().getTime(), \"MM\");\n436: assertEquals(\"09\", result);\n437: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils:lexx(Ljava/lang/String;)[Lorg/apache/commons/lang/time/DurationFormatUtils$Token;",
                                    "method_body": "459: static Token[] lexx(String format) {\n460: char[] array = format.toCharArray();\n461: java.util.ArrayList list = new java.util.ArrayList(array.length);\n463: boolean inLiteral = false;\n464: StringBuffer buffer = null;\n465: Token previous = null;\n466: int sz = array.length;\n467: for(int i=0; i<sz; i++) {\n468: char ch = array[i];\n469: if(inLiteral && ch != '\\'') {\n473: Object value = null;\n474: switch(ch) {\n487: case 'M'  : value = M; break;\n501: if(value != null) {\n502: if(previous != null && previous.getValue() == value) {\n503: previous.increment();\n505: Token token = new Token(value);\n506: list.add(token);\n507: previous = token;\n509: buffer = null;\n512: return (Token[]) list.toArray( new Token[0] );\n513: }",
                                    "suspicious_rank": 0.114
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils:formatPeriod(JJLjava/lang/String;)Ljava/lang/String;",
                                    "method_body": "246: public static String formatPeriod(long startMillis, long endMillis, String format) {\n247: return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());\n248: }",
                                    "suspicious_rank": 0.267
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:leftPad(Ljava/lang/String;IC)Ljava/lang/String;",
                                    "method_body": "3864: public static String leftPad(String str, int size, char padChar) {\n3865: if (str == null) {\n3868: int pads = size - str.length();\n3869: if (pads <= 0) {\n3870: return str; // returns original String when possible\n3876: }",
                                    "suspicious_rank": 0.101
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils$Token:<init>(Ljava/lang/Object;)V",
                                    "method_body": "545: Token(Object value) {\n546: this.value = value;\n547: this.count = 1;\n548: }",
                                    "suspicious_rank": 0.114
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils:reduceAndCorrect(Ljava/util/Calendar;Ljava/util/Calendar;II)I",
                                    "method_body": "432: static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {\n433: end.add( field, -1 * difference );\n434: int endValue = end.get(field);\n435: int startValue = start.get(field);\n436: if (endValue < startValue) {\n437: int newdiff = startValue - endValue;\n438: end.add( field, newdiff );\n439: return newdiff;\n441: return 0;\n443: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils:formatPeriod(JJLjava/lang/String;ZLjava/util/TimeZone;)Ljava/lang/String;",
                                    "method_body": "262: public static String formatPeriod(long startMillis, long endMillis, String format, boolean padWithZeros,\n265: long millis = endMillis - startMillis;\n266: if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n270: Token[] tokens = lexx(format);\n274: Calendar start = Calendar.getInstance(timezone);\n275: start.setTime(new Date(startMillis));\n276: Calendar end = Calendar.getInstance(timezone);\n277: end.setTime(new Date(endMillis));\n280: int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n281: int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n282: int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n283: int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n284: int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n285: int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n286: int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n289: while (milliseconds < 0) {\n293: while (seconds < 0) {\n297: while (minutes < 0) {\n301: while (hours < 0) {\n305: while (days < 0) {\n306: days += 31;\n312: months -= 1;\n314: while (months < 0) {\n315: months += 12;\n316: years -= 1;\n318: milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n319: seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n320: minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n321: hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n322: days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);\n323: months -= reduceAndCorrect(start, end, Calendar.MONTH, months);\n324: years -= reduceAndCorrect(start, end, Calendar.YEAR, years);\n329: if (!Token.containsTokenWithValue(tokens, y)) {\n330: if (Token.containsTokenWithValue(tokens, M)) {\n331: months += 12 * years;\n332: years = 0;\n339: if (!Token.containsTokenWithValue(tokens, M)) {\n343: if (!Token.containsTokenWithValue(tokens, d)) {\n344: hours += 24 * days;\n345: days = 0;\n347: if (!Token.containsTokenWithValue(tokens, H)) {\n348: minutes += 60 * hours;\n349: hours = 0;\n351: if (!Token.containsTokenWithValue(tokens, m)) {\n352: seconds += 60 * minutes;\n353: minutes = 0;\n355: if (!Token.containsTokenWithValue(tokens, s)) {\n356: milliseconds += 1000 * seconds;\n357: seconds = 0;\n360: return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n361: }",
                                    "suspicious_rank": 0.218
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils$Token:containsTokenWithValue([Lorg/apache/commons/lang/time/DurationFormatUtils$Token;Ljava/lang/Object;)Z",
                                    "method_body": "527: static boolean containsTokenWithValue(Token[] tokens, Object value) {\n528: int sz = tokens.length;\n529: for (int i = 0; i < sz; i++) {\n530: if (tokens[i].getValue() == value) {\n531: return true;\n534: return false;\n535: }",
                                    "suspicious_rank": 0.12
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils$Token:getCount()I",
                                    "method_body": "574: int getCount() {\n575: return count;\n576: }",
                                    "suspicious_rank": 0.12
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils$Token:getValue()Ljava/lang/Object;",
                                    "method_body": "583: Object getValue() {\n584: return value;\n585: }",
                                    "suspicious_rank": 0.114
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils:format([Lorg/apache/commons/lang/time/DurationFormatUtils$Token;IIIIIIIZ)Ljava/lang/String;",
                                    "method_body": "378: static String format(Token[] tokens, int years, int months, int days, int hours, int minutes, int seconds,\n380: StringBuffer buffer = new StringBuffer();\n381: boolean lastOutputSeconds = false;\n382: int sz = tokens.length;\n383: for (int i = 0; i < sz; i++) {\n384: Token token = tokens[i];\n385: Object value = token.getValue();\n386: int count = token.getCount();\n387: if (value instanceof StringBuffer) {\n390: if (value == y) {\n394: } else if (value == M) {\n395: buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer\n397: lastOutputSeconds = false;\n430: return buffer.toString();\n431: }",
                                    "suspicious_rank": 0.12
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DurationFormatUtils$Token:increment()V",
                                    "method_body": "565: void increment() {\n566: count++;\n567: }",
                                    "suspicious_rank": 0.126
                                }
                            ],
                            "stack_trace": "junit.framework.ComparisonFailure: expected:<[09]> but was:<[-2]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.time.DurationFormatUtilsTest.testJiraLang281(DurationFormatUtilsTest.java:436)"
                        }
                    ]
                },
                {
                    "bug_id": 64,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_otherEnumType",
                            "test_body": "105: public void testCompareTo_otherEnumType() {\n106: try {\n107: ValuedColorEnum.BLUE.compareTo(ValuedLanguageEnum.ENGLISH);\n108: fail();\n109: } catch (ClassCastException ex) {\n110: // expected\n111: }\n112: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.StringUtils:isEmpty(Ljava/lang/String;)Z",
                                    "method_body": "184: public static boolean isEmpty(String str) {\n185: return str == null || str.length() == 0;\n186: }",
                                    "suspicious_rank": 0.072
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.Enum:class$(Ljava/lang/String;)Ljava/lang/Class;",
                                    "method_body": "326: private void init(String name) {\n327: if (StringUtils.isEmpty(name)) {\n331: Class enumClass = getEnumClass();\n332: if (enumClass == null) {\n335: Class cls = getClass();\n336: boolean ok = false;\n337: while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {\n338: if (cls == enumClass) {\n339: ok = true;\n340: break;\n344: if (ok == false) {\n349: Entry entry = (Entry) cEnumClasses.get(enumClass);\n350: if (entry == null) {\n351: entry = createEntry(enumClass);\n352: cEnumClasses.put(enumClass, entry);\n354: if (entry.map.containsKey(name)) {\n357: entry.map.put(name, this);\n358: entry.list.add(this);\n359: }"
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.Enum:createEntry(Ljava/lang/Class;)Lorg/apache/commons/lang/enums/Enum$Entry;",
                                    "method_body": "483: private static Entry createEntry(Class enumClass) {\n484: Entry entry = new Entry();\n485: Class cls = enumClass.getSuperclass();\n486: while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {\n495: return entry;\n496: }",
                                    "suspicious_rank": 0.125
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.Enum:init(Ljava/lang/String;)V",
                                    "method_body": "326: private void init(String name) {\n327: if (StringUtils.isEmpty(name)) {\n331: Class enumClass = getEnumClass();\n332: if (enumClass == null) {\n335: Class cls = getClass();\n336: boolean ok = false;\n337: while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {\n338: if (cls == enumClass) {\n339: ok = true;\n340: break;\n344: if (ok == false) {\n349: Entry entry = (Entry) cEnumClasses.get(enumClass);\n350: if (entry == null) {\n351: entry = createEntry(enumClass);\n352: cEnumClasses.put(enumClass, entry);\n354: if (entry.map.containsKey(name)) {\n357: entry.map.put(name, this);\n358: entry.list.add(this);\n359: }",
                                    "suspicious_rank": 0.121
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.Enum$Entry:<init>()V",
                                    "method_body": "296: protected Entry() {\n297: super();\n298: }",
                                    "suspicious_rank": 0.125
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.ValuedEnum:compareTo(Ljava/lang/Object;)I",
                                    "method_body": "182: public int compareTo(Object other) {\n183: return iValue - ((ValuedEnum) other).iValue;\n184: }",
                                    "suspicious_rank": 0.378
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.Enum:<init>(Ljava/lang/String;)V",
                                    "method_body": "311: protected Enum(String name) {\n312: super();\n313: init(name);\n314: iName = name;\n315: iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();\n317: }",
                                    "suspicious_rank": 0.121
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.Enum:getEnumClass()Ljava/lang/Class;",
                                    "method_body": "518: public Class getEnumClass() {\n519: return getClass();\n520: }",
                                    "suspicious_rank": 0.131
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.enums.ValuedEnum:<init>(Ljava/lang/String;I)V",
                                    "method_body": "125: protected ValuedEnum(String name, int value) {\n126: super(name);\n127: iValue = value;\n128: }",
                                    "suspicious_rank": 0.224
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.fail(Assert.java:64)\nat junit.framework.TestCase.fail(TestCase.java:235)\nat org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_otherEnumType(ValuedEnumTest.java:108)"
                        }
                    ]
                },
                {
                    "bug_id": 65,
                    "tests": [
                        {
                            "test_name": "org.apache.commons.lang.time.DateUtilsTest.testTruncateLang59",
                            "test_body": "896: public void testTruncateLang59() throws Exception {\n897: 898: // Set TimeZone to Mountain Time\n899: TimeZone MST_MDT = TimeZone.getTimeZone(\"MST7MDT\");\n900: TimeZone.setDefault(MST_MDT);\n901: DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS z\");\n902: format.setTimeZone(MST_MDT);\n903: 904: Date oct31_01MDT = new Date(1099206000000L); \n905: 906: Date oct31MDT             = new Date(oct31_01MDT.getTime()       - 3600000L); // - 1 hour\n907: Date oct31_01_02MDT       = new Date(oct31_01MDT.getTime()       + 120000L);  // + 2 minutes\n908: Date oct31_01_02_03MDT    = new Date(oct31_01_02MDT.getTime()    + 3000L);    // + 3 seconds\n909: Date oct31_01_02_03_04MDT = new Date(oct31_01_02_03MDT.getTime() + 4L);       // + 4 milliseconds\n910: 911: assertEquals(\"Check 00:00:00.000\", \"2004-10-31 00:00:00.000 MDT\", format.format(oct31MDT));\n912: assertEquals(\"Check 01:00:00.000\", \"2004-10-31 01:00:00.000 MDT\", format.format(oct31_01MDT));\n913: assertEquals(\"Check 01:02:00.000\", \"2004-10-31 01:02:00.000 MDT\", format.format(oct31_01_02MDT));\n914: assertEquals(\"Check 01:02:03.000\", \"2004-10-31 01:02:03.000 MDT\", format.format(oct31_01_02_03MDT));\n915: assertEquals(\"Check 01:02:03.004\", \"2004-10-31 01:02:03.004 MDT\", format.format(oct31_01_02_03_04MDT));\n916: 917: // ------- Demonstrate Problem -------\n918: Calendar gval = Calendar.getInstance();\n919: gval.setTime(new Date(oct31_01MDT.getTime()));\n920: gval.set(Calendar.MINUTE, gval.get(Calendar.MINUTE)); // set minutes to the same value\n921: assertEquals(\"Demonstrate Problem\", gval.getTime().getTime(), oct31_01MDT.getTime() + 3600000L);\n922: 923: // ---------- Test Truncate ----------\n924: assertEquals(\"Truncate Calendar.MILLISECOND\",\n925: oct31_01_02_03_04MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.MILLISECOND));\n926: 927: assertEquals(\"Truncate Calendar.SECOND\",\n928: oct31_01_02_03MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.SECOND));\n929: 930: assertEquals(\"Truncate Calendar.MINUTE\",\n931: oct31_01_02MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.MINUTE));\n932: 933: assertEquals(\"Truncate Calendar.HOUR_OF_DAY\",\n934: oct31_01MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.HOUR_OF_DAY));\n935: 936: assertEquals(\"Truncate Calendar.HOUR\",\n937: oct31_01MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.HOUR));\n938: 939: assertEquals(\"Truncate Calendar.DATE\",\n940: oct31MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.DATE));\n941: 942: 943: // ---------- Test Round (down) ----------\n944: assertEquals(\"Round Calendar.MILLISECOND\",\n945: oct31_01_02_03_04MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.MILLISECOND));\n946: 947: assertEquals(\"Round Calendar.SECOND\",\n948: oct31_01_02_03MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.SECOND));\n949: 950: assertEquals(\"Round Calendar.MINUTE\",\n951: oct31_01_02MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.MINUTE));\n952: 953: assertEquals(\"Round Calendar.HOUR_OF_DAY\",\n954: oct31_01MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.HOUR_OF_DAY));\n955: 956: assertEquals(\"Round Calendar.HOUR\",\n957: oct31_01MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.HOUR));\n958: 959: assertEquals(\"Round Calendar.DATE\",\n960: oct31MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.DATE));\n961: 962: // restore default time zone\n963: TimeZone.setDefault(defaultZone);\n964: }\n",
                            "covered_methods": [
                                {
                                    "method_signature": "org.apache.commons.lang.time.DateUtils:modify(Ljava/util/Calendar;IZ)V",
                                    "method_body": "619: private static void modify(Calendar val, int field, boolean round) {\n620: if (val.get(Calendar.YEAR) > 280000000) {\n641: boolean roundUp = false;\n642: for (int i = 0; i < fields.length; i++) {\n643: for (int j = 0; j < fields[i].length; j++) {\n644: if (fields[i][j] == field) {\n646: if (round && roundUp) {\n663: return;\n667: int offset = 0;\n668: boolean offsetSet = false;\n670: switch (field) {\n700: if (!offsetSet) {\n701: int min = val.getActualMinimum(fields[i][0]);\n702: int max = val.getActualMaximum(fields[i][0]);\n704: offset = val.get(fields[i][0]) - min;\n706: roundUp = offset > ((max - min) / 2);\n709: val.set(fields[i][0], val.get(fields[i][0]) - offset);\n713: }",
                                    "suspicious_rank": 0.169
                                },
                                {
                                    "method_signature": "org.apache.commons.lang.time.DateUtils:truncate(Ljava/util/Date;I)Ljava/util/Date;",
                                    "method_body": "542: public static Date truncate(Date date, int field) {\n543: if (date == null) {\n546: Calendar gval = Calendar.getInstance();\n547: gval.setTime(date);\n548: modify(gval, field, false);\n549: return gval.getTime();\n550: }",
                                    "suspicious_rank": 0.267
                                }
                            ],
                            "stack_trace": "junit.framework.AssertionFailedError: Truncate Calendar.SECOND expected:<Sun Oct 31 01:02:03 MDT 2004> but was:<Sun Oct 31 01:02:03 MST 2004>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.TestCase.assertEquals(TestCase.java:244)\nat org.apache.commons.lang.time.DateUtilsTest.testTruncateLang59(DateUtilsTest.java:927)"
                        }
                    ]
                }
            ]
        }
    ]
}