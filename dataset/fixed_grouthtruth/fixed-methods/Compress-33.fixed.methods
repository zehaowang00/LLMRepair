org.apache.commons.compress.compressors.CompressorStreamFactory.<init>()V,0
org.apache.commons.compress.compressors.CompressorStreamFactory.<init>(Z)V,0
org.apache.commons.compress.compressors.CompressorStreamFactory.setDecompressConcatenated(Z)V,0
org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;,1
org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;,0
org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorOutputStream(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;,0
org.apache.commons.compress.compressors.CompressorStreamFactory.getDecompressConcatenated()Z,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.<init>(Ljava/io/InputStream;)V,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.<init>(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.read()I,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.read([BII)I,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.skip(J)J,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.available()I,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.close()V,0
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.matches([BI)Z,1
