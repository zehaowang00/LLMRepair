com.google.javascript.jscomp.CodeGenerator.<init>(Lcom/google/javascript/jscomp/CodeConsumer;)V,0
com.google.javascript.jscomp.CodeGenerator.<init>(Lcom/google/javascript/jscomp/CodeConsumer;Lcom/google/javascript/jscomp/CompilerOptions;)V,0
com.google.javascript.jscomp.CodeGenerator.<clinit>()V,0
com.google.javascript.jscomp.CodeGenerator.forCostEstimation(Lcom/google/javascript/jscomp/CodeConsumer;)Lcom/google/javascript/jscomp/CodeGenerator;,0
com.google.javascript.jscomp.CodeGenerator.tagAsStrict()V,0
com.google.javascript.jscomp.CodeGenerator.add(Ljava/lang/String;)V,0
com.google.javascript.jscomp.CodeGenerator.addIdentifier(Ljava/lang/String;)V,0
com.google.javascript.jscomp.CodeGenerator.add(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.add(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CodeGenerator$Context;)V,1
com.google.javascript.jscomp.CodeGenerator.unrollBinaryOperator(Lcom/google/javascript/rhino/Node;ILjava/lang/String;Lcom/google/javascript/jscomp/CodeGenerator$Context;Lcom/google/javascript/jscomp/CodeGenerator$Context;II)V,0
com.google.javascript.jscomp.CodeGenerator.isSimpleNumber(Ljava/lang/String;)Z,0
com.google.javascript.jscomp.CodeGenerator.getSimpleNumber(Ljava/lang/String;)D,0
com.google.javascript.jscomp.CodeGenerator.isIndirectEval(Lcom/google/javascript/rhino/Node;)Z,0
com.google.javascript.jscomp.CodeGenerator.addNonEmptyStatement(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CodeGenerator$Context;Z)V,0
com.google.javascript.jscomp.CodeGenerator.isOneExactlyFunctionOrDo(Lcom/google/javascript/rhino/Node;)Z,0
com.google.javascript.jscomp.CodeGenerator.addExpr(Lcom/google/javascript/rhino/Node;ILcom/google/javascript/jscomp/CodeGenerator$Context;)V,0
com.google.javascript.jscomp.CodeGenerator.addList(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addList(Lcom/google/javascript/rhino/Node;Z)V,0
com.google.javascript.jscomp.CodeGenerator.addList(Lcom/google/javascript/rhino/Node;ZLcom/google/javascript/jscomp/CodeGenerator$Context;)V,0
com.google.javascript.jscomp.CodeGenerator.addArrayList(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addCaseBody(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addAllSiblings(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addJsString(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.jsString(Ljava/lang/String;Z)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.regexpEscape(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.escapeToDoubleQuotedJsString(Ljava/lang/String;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.regexpEscape(Ljava/lang/String;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.strEscape(Ljava/lang/String;CLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;ZZ)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.identifierEscape(Ljava/lang/String;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.getNonEmptyChildCount(Lcom/google/javascript/rhino/Node;I)I,0
com.google.javascript.jscomp.CodeGenerator.getFirstNonEmptyChild(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.CodeGenerator.getContextForNonEmptyExpression(Lcom/google/javascript/jscomp/CodeGenerator$Context;)Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodeGenerator.getContextForNoInOperator(Lcom/google/javascript/jscomp/CodeGenerator$Context;)Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodeGenerator.appendHexJavaScriptRepresentation(Ljava/lang/StringBuilder;C)V,0
com.google.javascript.jscomp.CodeGenerator.appendHexJavaScriptRepresentation(ILjava/lang/Appendable;)V,0
com.google.javascript.jscomp.CodeGenerator$Context.<init>(Ljava/lang/String;I)V,0
com.google.javascript.jscomp.CodeGenerator$Context.<clinit>()V,0
com.google.javascript.jscomp.CodeGenerator$Context.values()[Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodeGenerator$Context.valueOf(Ljava/lang/String;)Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.<init>(Z)V,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.<clinit>()V,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.optimizeSubtree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,1
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryRotateAssociativeOperator(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,1
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryFoldSimpleFunctionCall(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryFoldImmediateCallToBoundFunction(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.addParameterAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.trySplitComma(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryReplaceUndefined(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryReduceReturn(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryFoldStandardConstructors(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryFoldLiteralConstructor(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.isSafeToFoldArrayConstructor(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax$FoldArrayAction;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryFoldRegularExpressionConstructor(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.reduceTrueFalse(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryMinimizeArrayLiteral(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryMinimizeStringArrayLiteral(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.pickDelimiter([Ljava/lang/String;)Ljava/lang/String;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.areValidRegexpFlags(Ljava/lang/String;)Z,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.areSafeFlagsToFold(Ljava/lang/String;)Z,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.makeForwardSlashBracketSafe(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(Ljava/lang/String;)Z,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax$FoldArrayAction.<init>(Ljava/lang/String;I)V,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax$FoldArrayAction.<clinit>()V,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax$FoldArrayAction.values()[Lcom/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax$FoldArrayAction;,0
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax$FoldArrayAction.valueOf(Ljava/lang/String;)Lcom/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax$FoldArrayAction;,0
