<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat Mar 23 19:30:44 UTC 2024

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[LANG-624] SystemUtils.getJavaVersionAsFloat throws StringIndexOutOfBoundsException on Android runtime/Dalvik VM</title>
                <link>https://issues.apache.org/jira/browse/LANG-624</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;Can be replicated in the Android emulator quite easily.&lt;/p&gt;

&lt;p&gt;Stack trace:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
at org.apache.commons.lang.builder.ToStringBuilder.&amp;lt;clinit&amp;gt;(ToStringBuilder.java:98)
E/AndroidRuntime( 1681): 	... 17 more
E/AndroidRuntime( 1681): Caused by: java.lang.ExceptionInInitializerError
E/AndroidRuntime( 1681): 	at org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle.&amp;lt;init&amp;gt;(ToStringStyle.java:2276)
E/AndroidRuntime( 1681): 	at org.apache.commons.lang.builder.ToStringStyle.&amp;lt;clinit&amp;gt;(ToStringStyle.java:94)
E/AndroidRuntime( 1681): 	... 18 more
E/AndroidRuntime( 1681): Caused by: java.lang.StringIndexOutOfBoundsException
E/AndroidRuntime( 1681): 	at java.lang.String.substring(String.java:1571)
E/AndroidRuntime( 1681): 	at org.apache.commons.lang.SystemUtils.getJavaVersionAsFloat(SystemUtils.java:1153)
E/AndroidRuntime( 1681): 	at org.apache.commons.lang.SystemUtils.&amp;lt;clinit&amp;gt;(SystemUtils.java:818)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12465596">LANG-624</key>
            <summary>SystemUtils.getJavaVersionAsFloat throws StringIndexOutOfBoundsException on Android runtime/Dalvik VM</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="trumant">Travis Truman</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 May 2010 21:09:29 +0000</created>
                <updated>Tue, 1 Feb 2011 16:31:43 +0000</updated>
                            <resolved>Tue, 1 Feb 2011 16:31:42 +0000</resolved>
                                    <version>2.5</version>
                                    <fixVersion>3.0</fixVersion>
                                    <component>lang.*</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                                <comments>
                            <comment id="12872367" author="ggregory@seagullsw.com" created="Thu, 27 May 2010 21:11:20 +0000"  >&lt;p&gt;Can you copy a stack trace here please?&lt;/p&gt;</comment>
                            <comment id="12872383" author="ggregory@seagullsw.com" created="Thu, 27 May 2010 21:38:09 +0000"  >&lt;p&gt;Fixed in trunk, I will commit shortly.&lt;/p&gt;</comment>
                            <comment id="12872883" author="joehni" created="Fri, 28 May 2010 07:17:20 +0000"  >&lt;p&gt;The problem is that SystemUtils make wrong assumptions about the format of &quot;java.version&quot;. It completely depends on the vendor what this property contains and it does not have to be at all a string that can be interpreted as float value. It is more or less unfortunate that a Sun JDK matches a number format. See &lt;a href=&quot;http://java.sun.com/j2se/1.4.2/docs/guide/versioning/spec/versioning2.html#wp90020&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://java.sun.com/j2se/1.4.2/docs/guide/versioning/spec/versioning2.html#wp90020&lt;/a&gt;. If we really want to return the version of the Java Runtime as float, we have to use java.specification.version.&lt;/p&gt;</comment>
                            <comment id="12872917" author="ggregory@seagullsw.com" created="Fri, 28 May 2010 10:12:57 +0000"  >&lt;p&gt;Committed fix to trunk, unit test improvements and clean ups:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed and tested (&lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-624&quot; title=&quot;SystemUtils.getJavaVersionAsFloat throws StringIndexOutOfBoundsException on Android runtime/Dalvik VM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-624&quot;&gt;&lt;del&gt;LANG-624&lt;/del&gt;&lt;/a&gt;) SystemUtils.getJavaVersionAsFloat throws StringIndexOutOfBoundsException on Android runtime/Dalvik VM. This is based on a new implementation of the underlying code with less reliance of hard coded array indices, for example, calls like substring (0, 3).&lt;/li&gt;
	&lt;li&gt;Refactored some private methods into one private and one package private method such that the latter can be called from unit tests. This allows &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-624&quot; title=&quot;SystemUtils.getJavaVersionAsFloat throws StringIndexOutOfBoundsException on Android runtime/Dalvik VM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-624&quot;&gt;&lt;del&gt;LANG-624&lt;/del&gt;&lt;/a&gt; to be tested along with other methods. See below.&lt;/li&gt;
	&lt;li&gt;Removed &quot;dead code&quot; from unit tests: The SystemUtilsTest unit test contained code that was cut and pasted from SystemUtils for four constants and associated initialization methods. The test methods then called these SystemUtilsTest methods instead of the SystemUtils methods. The refactoring allows for the test to run against as much of the code in SystemUtils as possible.&lt;/li&gt;
	&lt;li&gt;Added assertions for Java version &quot;0&quot;, &quot;1.4.2&quot;, &quot;1.6&quot; and &quot;1.7&quot; to some tests.&lt;/li&gt;
	&lt;li&gt;Added Javadocs to document what happens with &quot;1.6.0_20&quot; vs. &quot;1.6.0&quot;, which is that the patch level is ignored.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12872942" author="joehni" created="Fri, 28 May 2010 12:04:35 +0000"  >&lt;p&gt;Sorry, this fix is simply. Aonix J9 VM (also used on mobile devices) returned &quot;1.3.0 subset&quot;. As explained, you cannot rely on &quot;java.version&quot; per definition.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Index: src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
===================================================================
--- src/test/java/org/apache/commons/lang3/SystemUtilsTest.java (revision 949153)
+++ src/test/java/org/apache/commons/lang3/SystemUtilsTest.java (working copy)
@@ -201,6 +201,7 @@
         assertEquals(1.5f, SystemUtils.toJavaVersionFloat(&quot;1.5.0&quot;), 0.000001f);
         assertEquals(1.6f, SystemUtils.toJavaVersionFloat(&quot;1.6.0&quot;), 0.000001f);
         assertEquals(1.31f, SystemUtils.toJavaVersionFloat(&quot;JavaVM-1.3.1&quot;), 0.000001f);
+        assertEquals(1.3f, SystemUtils.toJavaVersionFloat(&quot;1.3.0 subset&quot;), 0.000001f);
         // This used to return 0f in [lang] version 2.5:
         assertEquals(1.3f, SystemUtils.toJavaVersionFloat(&quot;XXX-1.3.x&quot;), 0.000001f);
     }
@@ -219,6 +220,7 @@
         assertEquals(150, SystemUtils.toJavaVersionInt(&quot;1.5.0&quot;), 0.000001f);
         assertEquals(160, SystemUtils.toJavaVersionInt(&quot;1.6.0&quot;), 0.000001f);
         assertEquals(131, SystemUtils.toJavaVersionInt(&quot;JavaVM-1.3.1&quot;), 0.000001f);
+        assertEquals(130, SystemUtils.toJavaVersionInt(&quot;1.3.1 subset&quot;), 0.000001f);
         // This used to return 0f in [lang] version 2.5:
         assertEquals(130, SystemUtils.toJavaVersionInt(&quot;XXX-1.3.x&quot;), 0.000001f);
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This simply fails.&lt;/p&gt;</comment>
                            <comment id="12873041" author="ggregory@seagullsw.com" created="Fri, 28 May 2010 16:29:40 +0000"  >&lt;p&gt;I expect this assertion to fail:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;assertEquals(130, SystemUtils.toJavaVersionInt(&quot;1.3.1 subset&quot;), 0.000001f);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You must mean:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;assertEquals(131, SystemUtils.toJavaVersionInt(&quot;1.3.1 subset&quot;), 0.000001f);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I applied and changed the test patch above.&lt;/p&gt;</comment>
                            <comment id="12873063" author="ggregory@seagullsw.com" created="Fri, 28 May 2010 17:07:46 +0000"  >&lt;p&gt;The attached screen shot shows that you now get a version number, just not a very useful one: 0.0.&lt;/p&gt;</comment>
                            <comment id="12887668" author="joehni" created="Tue, 13 Jul 2010 05:53:41 +0000"  >&lt;p&gt;I can only emphasis again, that it is wrong to use java.version instead of java.specification.version and expect something useful.&lt;/p&gt;</comment>
                            <comment id="12889567" author="bayard" created="Sun, 18 Jul 2010 05:49:54 +0000"  >&lt;p&gt;So should we be moving from java.version to java.specification.version?&lt;/p&gt;</comment>
                            <comment id="12889578" author="ggregory@seagullsw.com" created="Sun, 18 Jul 2010 07:11:35 +0000"  >&lt;p&gt;Wouldn&apos;t backward compatibility be an issue? Should we consider adding parallel APIs for java.specification.version?&lt;/p&gt;</comment>
                            <comment id="12890358" author="bayard" created="Tue, 20 Jul 2010 18:00:04 +0000"  >&lt;p&gt;Now&apos;s the time to break back compat if need be.&lt;/p&gt;

&lt;p&gt;Is java.specification.version the right value to use? Is it less useful than java.version?&lt;/p&gt;</comment>
                            <comment id="12890365" author="jwcarman" created="Tue, 20 Jul 2010 18:12:27 +0000"  >&lt;p&gt;Agreed, Henri.  If we&apos;re talking 3.0, we&apos;ve got some freedom here to break some stuff.  I would think that most folks are going to check to see what specification version is running, not what specific implementation version.&lt;/p&gt;</comment>
                            <comment id="12890385" author="sebb@apache.org" created="Tue, 20 Jul 2010 18:52:18 +0000"  >&lt;p&gt;The Javadoc for getJavaVersionAsFloat() does not specify how it obtains the information, so I think one could use &quot;java.specification.version&quot; instead of &quot;java.version&quot; without breaking compatibility.&lt;/p&gt;

&lt;p&gt;However the Javadoc for JAVA_VERSION does say that it uses &quot;java.version&quot;, so one cannot change that without changing the API (and Javadoc!).&lt;/p&gt;

&lt;p&gt;How about adding a JAVA_SPEC_VERSION field and using that in the AsFloat() method?&lt;/p&gt;</comment>
                            <comment id="12890392" author="mbenson" created="Tue, 20 Jul 2010 19:00:25 +0000"  >&lt;p&gt;IMO principle of least surprise would dictate that we use java.specification.version, &lt;b&gt;document it clearly&lt;/b&gt;, and provide JAVA_VENDOR_VERSION if we really feel the need to provide the results of java.version.&lt;/p&gt;</comment>
                            <comment id="12910449" author="bayard" created="Fri, 17 Sep 2010 05:05:15 +0000"  >&lt;p&gt;+1. I see no reason why we can&apos;t change the API.&lt;/p&gt;</comment>
                            <comment id="12910632" author="sebb@apache.org" created="Fri, 17 Sep 2010 15:36:49 +0000"  >&lt;p&gt;I don&apos;t think we need to change the API, just the implementation of AsFloat() (and clarify its Javadoc)&lt;/p&gt;

&lt;p&gt;Keep JAVA_VERSION&lt;br/&gt;
Add JAVA_SPECIFICATION_VERSION&lt;br/&gt;
Change asFloat() to use JAVA_SPEC_VERSION and document this.&lt;/p&gt;

&lt;p&gt;Could add JAVA_VENDOR_VERSION as an alias for JAVA_VERSION but I cannot see the point.&lt;/p&gt;</comment>
                            <comment id="12982480" author="bayard" created="Mon, 17 Jan 2011 05:46:18 +0000"  >&lt;p&gt;I&apos;m still +1 to change the API. I don&apos;t care that the javadoc for one item says how it works and the other doesn&apos;t; a change in functionality is a change in functionality. &lt;/p&gt;

&lt;p&gt;In this case, the right thing to do is to use the correct java.specification version. That&apos;s what we meant, and it&apos;s how we use the code everywhere.&lt;/p&gt;</comment>
                            <comment id="12985258" author="bayard" created="Sun, 23 Jan 2011 05:59:51 +0000"  >&lt;p&gt;Digging deeper into SystemUtils and specifically what I think should change:&lt;/p&gt;

&lt;p&gt;JAVA_VERSION: Keep as is. It&apos;s fair to expect it to point to java.version. That that is the vendor version should be noted in the javadoc.&lt;/p&gt;

&lt;p&gt;JAVA_VERSION_TRIMMED: We shouldn&apos;t be trying to parse the specification version out of java.version. Remove this. &lt;/p&gt;

&lt;p&gt;getJavaVersionTrimmed(): Private method for the above. Also remove.&lt;/p&gt;

&lt;p&gt;JAVA_VERSION_FLOAT: This now becomes impossible. Remove this - I don&apos;t think there&apos;s huge need to have code only run on 1.6.1 of a JVM. Sure it might be a good way to get around some bug in 1.6.0, but the code becomes inherently unportable.&lt;/p&gt;

&lt;p&gt;JAVA_VERSION_INT: Same as above. Remove.&lt;/p&gt;

&lt;p&gt;getJavaVersionMatches: Move this over to using JAVA_SPECIFICATION_VERSION. &lt;/p&gt;

&lt;p&gt;isJavaVersionAtLeast: Move to spec version. This means having a private Float version&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Drop the int variant of this method as it&apos;s silly to pass in 13 instead of 1.3. In general this is a silly method; the better solution imo would be to have a JAVA_1_2 enum &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I wonder if that&apos;s something we should consider for all of the IS_XYZ &apos;constants&apos;?&lt;/p&gt;
</comment>
                            <comment id="12985264" author="scolebourne" created="Sun, 23 Jan 2011 06:53:59 +0000"  >&lt;p&gt;We shouldn&apos;t remove the float/int methods. They are the useful ones!&lt;/p&gt;</comment>
                            <comment id="12985538" author="bayard" created="Mon, 24 Jan 2011 07:00:52 +0000"  >&lt;p&gt;isJavaVersionAtLeast is good; making it float/int based seems unnecessary and I think it&apos;s an artifact of the work to deal with the obtuse vendor version string.&lt;/p&gt;

&lt;p&gt;isJavaVersionAtLeast(SystemUtils.JAVA_1_2) would be better. For once I would like a static import there &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12985581" author="joehni" created="Mon, 24 Jan 2011 09:25:37 +0000"  >&lt;p&gt;The only problem that remains then is for Android, because IIRC it used to return something like 0.9 as specification version. Where are the Android guys to affirm my 2nd hand knowledge? Question is what isJavaAtLeast should do in this platform, because someone who uses c-l will probably expect that his check will succeed for Java 5 also on Android.&lt;/p&gt;</comment>
                            <comment id="12987391" author="bayard" created="Thu, 27 Jan 2011 05:53:48 +0000"  >&lt;p&gt;Well, technically it should return false all the time. We can add an &apos;isJava&apos; method that returns false for Android &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;As it is, sounds like a hack for Android such that 0.9 is considered equivalent to 5.0 with specification version would be suitable. I&apos;m not an Android coder - I&apos;m assuming 0.9 = 5.0 from your text and I&apos;m assuming if they move to 6.0 equivalent, it would be 0.91 or something.&lt;/p&gt;</comment>
                            <comment id="12987445" author="bayard" created="Thu, 27 Jan 2011 09:08:36 +0000"  >&lt;p&gt;Here&apos;s the proposed change. &lt;/p&gt;

&lt;p&gt;Needs more javadoc/unit test of the new enum; but I wanted to get feedback before finishing it off.&lt;/p&gt;</comment>
                            <comment id="12987545" author="ggregory@seagullsw.com" created="Thu, 27 Jan 2011 13:14:35 +0000"  >&lt;p&gt;I like the JavaVersion enum. No more magic numbers in the code.&lt;/p&gt;

&lt;p&gt;But when I see:&lt;/p&gt;

&lt;p&gt;JAVA_0_9(1.5f, &quot;0.9&quot;),    // Android &lt;/p&gt;

&lt;p&gt;I think we should have:&lt;/p&gt;

&lt;p&gt;JAVA_0_9(1.5f, &quot;0.9&quot;, &quot;Android&quot;)&lt;/p&gt;

&lt;p&gt;Which means JavaVersion needs a description field.&lt;/p&gt;

&lt;p&gt;What is the description for the other versions?&lt;/p&gt;

&lt;p&gt;Also instead of duplicating Strings like &quot;0.9&quot;, I would rather have private constants.&lt;/p&gt;</comment>
                            <comment id="12987546" author="ggregory@seagullsw.com" created="Thu, 27 Jan 2011 13:16:09 +0000"  >&lt;p&gt;For:&lt;/p&gt;

&lt;p&gt;    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(&quot;java.specification.version&quot;);&lt;br/&gt;
    private static final JavaVersion Enum_JAVA_SPECIFICATION_VERSION = JavaVersion.get(JAVA_SPECIFICATION_VERSION);&lt;/p&gt;

&lt;p&gt;The name Enum_JAVA_SPECIFICATION_VERSION looks odd, how about one of:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;JAVAVERSION_SPECIFICATION&lt;/li&gt;
	&lt;li&gt;JAVA_VERSION_SPECIFICATION&lt;/li&gt;
	&lt;li&gt;JAVAVERSION_ENUM_SPECIFICATION&lt;/li&gt;
	&lt;li&gt;JAVA_VERSION_ENUM_SPECIFICATION&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12987629" author="mbenson" created="Thu, 27 Jan 2011 16:23:12 +0000"  >&lt;p&gt;Agreed; +1 for JAVA_VERSION_SPECIFICATION.&lt;/p&gt;

&lt;p&gt;Perhaps we should talk more about the int/float calls.  I would like for existing code to continue to compile (the user having adjusted the import to the lang3 package).  However:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;the int-based handling seems to invite chaos in the future.  What happens when version 1.12 of the spec emerges?&lt;/li&gt;
	&lt;li&gt;the specification-based version idea we&apos;ve moved to only accommodates the one decimal, further marking the whole 3-digit int concept as obsolete.&lt;/li&gt;
	&lt;li&gt;we could support Number, comparing its float value, but this would yield a different behavior for Integer/boxed int than what had worked previously, and would break clients more insidiously than compilation failure.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Considering these points I don&apos;t see an acceptable way to support existing code.  Until someone suggests a better way, my position is that they&apos;re more trouble than they&apos;re worth.&lt;/p&gt;</comment>
                            <comment id="12987949" author="bayard" created="Fri, 28 Jan 2011 05:37:21 +0000"  >
&lt;p&gt;Gary&apos;s replies:&lt;/p&gt;

&lt;p&gt;Agreed that &apos;Android&apos; could be there as some kind of String description; however I don&apos;t think it&apos;s a backwards compat issue and would prefer to keep it simple. We can add another parameter to the constructor.&lt;/p&gt;

&lt;p&gt;On the Magic &quot;0.9&quot; String; I believe it&apos;s overkill to have a variable that is effectively String_0_9 = &quot;0.9&quot; and it will make the code less readable. &lt;/p&gt;

&lt;p&gt;On the name of the Enum_JAVA_SPECIFICATION_VERSION variable; absolutely. That was a &apos;whatever, it&apos;s private&apos; decision. I effectively went with some kind of Hungarian notation &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Cant&apos; say the alternatives provided are very readable though.&lt;/p&gt;

&lt;p&gt;Matt&apos;s reply:&lt;/p&gt;

&lt;p&gt;Glad to see you argued your way out of it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12988537" author="bayard" created="Sun, 30 Jan 2011 03:49:15 +0000"  >&lt;p&gt;svn ci -m &quot;Removed isJavaVersionAtLeast(float) and (int), and added an enum variant with the new JavaVersion enum. Updated the rest of the code, switched isJavaVersionAtLeast over to using java.specification.version and not java.version (the vendor code) and dropped JAVA_VERSION_TRIMMED, JAVA_VERSION_FLOAT and JAVA_VERSION_INT. See: &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-624&quot; title=&quot;SystemUtils.getJavaVersionAsFloat throws StringIndexOutOfBoundsException on Android runtime/Dalvik VM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-624&quot;&gt;&lt;del&gt;LANG-624&lt;/del&gt;&lt;/a&gt;&quot;&lt;br/&gt;
Sending        src/main/java/org/apache/commons/lang3/ClassUtils.java&lt;br/&gt;
Adding         src/main/java/org/apache/commons/lang3/JavaVersion.java&lt;br/&gt;
Sending        src/main/java/org/apache/commons/lang3/SystemUtils.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/CharEncodingTest.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/ClassUtilsTest.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/SystemUtilsTest.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java&lt;br/&gt;
Transmitting file data ..........&lt;br/&gt;
Committed revision 1065174.&lt;/p&gt;

&lt;p&gt;Leaving this open for a short while in case there&apos;s any feedback. I went with: &quot;JAVA_SPECIFICATION_VERSION_AS_ENUM&quot; as the variable name.&lt;/p&gt;</comment>
                            <comment id="12989273" author="bayard" created="Tue, 1 Feb 2011 16:31:43 +0000"  >&lt;p&gt;Resolving.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12445796" name="AndriodJavaVersion.png" size="57225" author="ggregory@seagullsw.com" created="Fri, 28 May 2010 17:07:46 +0000"/>
                            <attachment id="12469533" name="LANG-624.patch" size="30772" author="bayard" created="Thu, 27 Jan 2011 09:08:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>147454</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            13 years, 9 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d5p3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74699</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>