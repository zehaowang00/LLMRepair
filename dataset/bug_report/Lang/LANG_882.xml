<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat Mar 23 19:30:34 UTC 2024

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[LANG-882] LookupTranslator accepts CharSequence as input, but fails to work with implementations other than String</title>
                <link>https://issues.apache.org/jira/browse/LANG-882</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;The core of &lt;tt&gt;org.apache.commons.lang3.text.translate&lt;/tt&gt; is a &lt;tt&gt;HashMap&amp;lt;CharSequence, CharSequence&amp;gt; lookupMap&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;From the Javadoc of &lt;tt&gt;CharSequence&lt;/tt&gt; (emphasis mine):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This interface does not refine the general contracts of the equals and hashCode methods. The result of comparing two objects that implement CharSequence is therefore, in general, undefined. Each object may be implemented by a different class, and there is no guarantee that each class will be capable of testing its instances for equality with those of the other. &lt;b&gt;It is therefore inappropriate to use arbitrary CharSequence instances as elements in a set or as keys in a map.&lt;/b&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The current implementation causes code such as the following to not work as expected:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;CharSequence cs1 = &lt;span class=&quot;code-quote&quot;&gt;&quot;1 &amp;lt; 2&quot;&lt;/span&gt;;
CharSequence cs2 = CharBuffer.wrap(&lt;span class=&quot;code-quote&quot;&gt;&quot;1 &amp;lt; 2&quot;&lt;/span&gt;.toCharArray());

&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(StringEscapeUtils.ESCAPE_HTML4.translate(cs1));
&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(StringEscapeUtils.ESCAPE_HTML4.translate(cs2));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... which gives the following results (but should be identical):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;1 &amp;amp;lt; 2
1 &amp;lt; 2
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem, at a minimum, is that &lt;tt&gt;CharBuffer.equals&lt;/tt&gt; is even documented in the Javadoc that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A char buffer is not equal to any other type of object.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;... so a lookup on a CharBuffer in the Map will always fail when compared against the String implementations that it contains.&lt;/p&gt;

&lt;p&gt;An obvious work-around is to instead use something along the lines of either of the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(StringEscapeUtils.ESCAPE_HTML4.translate(cs2.toString()));
&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(StringEscapeUtils.escapeHtml4(cs2.toString()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... which forces everything back to a &lt;tt&gt;String&lt;/tt&gt;.  However, this is not practical when working with large sets of data, which would require significant heap allocations and garbage collection concerns.  (As such, I was actually trying to use the &lt;tt&gt;translate&lt;/tt&gt; method that outputs to a &lt;tt&gt;Writer&lt;/tt&gt; - but simplified the above examples to omit this.)&lt;/p&gt;

&lt;p&gt;Another option that I&apos;m considering is to use a custom &lt;tt&gt;CharSequence&lt;/tt&gt; wrapper around a &lt;tt&gt;char[]&lt;/tt&gt; that implements &lt;tt&gt;hashCode()&lt;/tt&gt; and &lt;tt&gt;equals()&lt;/tt&gt; to work with those implemented on &lt;tt&gt;String&lt;/tt&gt;.  (However, this will be interesting due to the symmetric assumption - which is further interesting that &lt;tt&gt;String.equals&lt;/tt&gt; is currently implemented using &lt;tt&gt;instanceof&lt;/tt&gt; - even though &lt;tt&gt;String&lt;/tt&gt; is &lt;tt&gt;final&lt;/tt&gt;...)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12639615">LANG-882</key>
            <summary>LookupTranslator accepts CharSequence as input, but fails to work with implementations other than String</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ziesemer">Mark A. Ziesemer</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Mar 2013 16:25:26 +0000</created>
                <updated>Tue, 23 Apr 2013 06:03:28 +0000</updated>
                            <resolved>Tue, 23 Apr 2013 06:03:28 +0000</resolved>
                                    <version>3.1</version>
                                    <fixVersion>3.2</fixVersion>
                                    <component>lang.text.translate.*</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                                <comments>
                            <comment id="13629935" author="bayard" created="Fri, 12 Apr 2013 08:51:16 +0000"  >&lt;p&gt;Thanks Mark. At the very least we should note this in the javadoc for 3.2, assuming a fix isn&apos;t readily available.&lt;/p&gt;

&lt;p&gt;How did the work around go?&lt;/p&gt;</comment>
                            <comment id="13637764" author="bayard" created="Mon, 22 Apr 2013 04:26:25 +0000"  >&lt;p&gt;I&apos;ve added a note to this in the Javadoc for the moment.&lt;/p&gt;

&lt;p&gt;Options that jump out to me are to go with calling .toString() on the key and taking any performance hits, or perhaps using TreeMap with a custom CharSequenceComparator if CharSequences are passed in that don&apos;t have refined equals(Object)/hashCode() methods and taking a lookup time performance hit. &lt;/p&gt;</comment>
                            <comment id="13637765" author="bayard" created="Mon, 22 Apr 2013 04:26:54 +0000"  >&lt;p&gt;Next step is to write a unit test showing the problem so there&apos;s something to fix. Might release 3.2 without this. &lt;/p&gt;</comment>
                            <comment id="13638816" author="bayard" created="Tue, 23 Apr 2013 06:00:00 +0000"  >&lt;p&gt;Test is easy - take the current LookupTranslator test and make a StringBuffer version. &lt;/p&gt;

&lt;p&gt;Solutions; naively throwing in a TreeMap doesn&apos;t work. A ClassCast occurs between StringBuffer and String. This is because calling subSequence on StringBuffer returns a String (boo!), and for some reason the call to compareTo in getEntry of TreeMap doesn&apos;t like the different types. Presumably this could be solved with a custom comparator.&lt;/p&gt;

&lt;p&gt;Changing the key of the HashMap to be a String resolves the issue. It feels weird for the key to be typed; ie) if it was StringBuffer(&quot;foo&quot;), I&apos;d expect it to match the String &quot;foo&quot; as well. Only matching the type of the input seems odd. I can see value in keeping the translate-to part of the system as CharSequence; you could have large items of text that won&apos;t be read until such a time as they need to be obtained.&lt;/p&gt;
</comment>
                            <comment id="13638821" author="bayard" created="Tue, 23 Apr 2013 06:03:28 +0000"  >&lt;p&gt;I&apos;ve gone ahead with the simple solution of using String as the key. It&apos;s not ideal, but I think it&apos;s an improvement over the current code.&lt;/p&gt;

&lt;p&gt;svn ci -m &quot;Allow LookupTranslator to support CharSequence properly; previously it was working only for CharSequence&apos;s that implemented hashCode and equals(Object). &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-882&quot; title=&quot;LookupTranslator accepts CharSequence as input, but fails to work with implementations other than String&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-882&quot;&gt;&lt;del&gt;LANG-882&lt;/del&gt;&lt;/a&gt;&quot; src/&lt;br/&gt;
Sending        src/changes/changes.xml&lt;br/&gt;
Sending        src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java&lt;br/&gt;
Sending        src/test/java/org/apache/commons/lang3/text/translate/LookupTranslatorTest.java&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 1470822.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320084</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 years, 49 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1j87z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320425</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>