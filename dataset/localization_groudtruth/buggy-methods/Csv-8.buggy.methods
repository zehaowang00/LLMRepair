org.apache.commons.csv.CSVFormat.<init>(CLjava/lang/Character;Lorg/apache/commons/csv/Quote;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V,1
org.apache.commons.csv.CSVFormat.<clinit>()V,0
org.apache.commons.csv.CSVFormat.isLineBreak(C)Z,0
org.apache.commons.csv.CSVFormat.isLineBreak(Ljava/lang/Character;)Z,0
org.apache.commons.csv.CSVFormat.newFormat(C)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.equals(Ljava/lang/Object;)Z,0
org.apache.commons.csv.CSVFormat.format([Ljava/lang/Object;)Ljava/lang/String;,0
org.apache.commons.csv.CSVFormat.getCommentStart()Ljava/lang/Character;,0
org.apache.commons.csv.CSVFormat.getDelimiter()C,0
org.apache.commons.csv.CSVFormat.getEscape()Ljava/lang/Character;,0
org.apache.commons.csv.CSVFormat.getHeader()[Ljava/lang/String;,0
org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()Z,0
org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()Z,0
org.apache.commons.csv.CSVFormat.getNullString()Ljava/lang/String;,0
org.apache.commons.csv.CSVFormat.getQuoteChar()Ljava/lang/Character;,0
org.apache.commons.csv.CSVFormat.getQuotePolicy()Lorg/apache/commons/csv/Quote;,0
org.apache.commons.csv.CSVFormat.getRecordSeparator()Ljava/lang/String;,0
org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()Z,0
org.apache.commons.csv.CSVFormat.hashCode()I,0
org.apache.commons.csv.CSVFormat.isCommentingEnabled()Z,0
org.apache.commons.csv.CSVFormat.isEscaping()Z,0
org.apache.commons.csv.CSVFormat.isNullHandling()Z,0
org.apache.commons.csv.CSVFormat.isQuoting()Z,0
org.apache.commons.csv.CSVFormat.parse(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;,0
org.apache.commons.csv.CSVFormat.toString()Ljava/lang/String;,0
org.apache.commons.csv.CSVFormat.validate()V,1
org.apache.commons.csv.CSVFormat.withCommentStart(C)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withCommentStart(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withEscape(C)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withQuoteChar(C)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withQuoteChar(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withQuotePolicy(Lorg/apache/commons/csv/Quote;)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;,0
org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat;,0
