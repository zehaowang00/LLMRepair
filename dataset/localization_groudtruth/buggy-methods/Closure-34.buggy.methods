com.google.javascript.jscomp.CodeGenerator.<init>(Lcom/google/javascript/jscomp/CodeConsumer;Ljava/nio/charset/Charset;)V,0
com.google.javascript.jscomp.CodeGenerator.<init>(Lcom/google/javascript/jscomp/CodeConsumer;)V,0
com.google.javascript.jscomp.CodeGenerator.<clinit>()V,0
com.google.javascript.jscomp.CodeGenerator.tagAsStrict()V,0
com.google.javascript.jscomp.CodeGenerator.add(Ljava/lang/String;)V,0
com.google.javascript.jscomp.CodeGenerator.addIdentifier(Ljava/lang/String;)V,0
com.google.javascript.jscomp.CodeGenerator.add(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.add(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CodeGenerator$Context;)V,1
com.google.javascript.jscomp.CodeGenerator.unrollBinaryOperator(Lcom/google/javascript/rhino/Node;ILjava/lang/String;Lcom/google/javascript/jscomp/CodeGenerator$Context;Lcom/google/javascript/jscomp/CodeGenerator$Context;II)V,1
com.google.javascript.jscomp.CodeGenerator.isSimpleNumber(Ljava/lang/String;)Z,0
com.google.javascript.jscomp.CodeGenerator.getSimpleNumber(Ljava/lang/String;)D,0
com.google.javascript.jscomp.CodeGenerator.isIndirectEval(Lcom/google/javascript/rhino/Node;)Z,0
com.google.javascript.jscomp.CodeGenerator.addNonEmptyStatement(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CodeGenerator$Context;Z)V,0
com.google.javascript.jscomp.CodeGenerator.isOneExactlyFunctionOrDo(Lcom/google/javascript/rhino/Node;)Z,0
com.google.javascript.jscomp.CodeGenerator.addExpr(Lcom/google/javascript/rhino/Node;ILcom/google/javascript/jscomp/CodeGenerator$Context;)V,0
com.google.javascript.jscomp.CodeGenerator.addList(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addList(Lcom/google/javascript/rhino/Node;Z)V,0
com.google.javascript.jscomp.CodeGenerator.addList(Lcom/google/javascript/rhino/Node;ZLcom/google/javascript/jscomp/CodeGenerator$Context;)V,0
com.google.javascript.jscomp.CodeGenerator.addArrayList(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addCaseBody(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addAllSiblings(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.addJsString(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodeGenerator.jsString(Ljava/lang/String;Z)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.regexpEscape(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.escapeToDoubleQuotedJsString(Ljava/lang/String;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.regexpEscape(Ljava/lang/String;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.strEscape(Ljava/lang/String;CLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.identifierEscape(Ljava/lang/String;)Ljava/lang/String;,0
com.google.javascript.jscomp.CodeGenerator.getNonEmptyChildCount(Lcom/google/javascript/rhino/Node;I)I,0
com.google.javascript.jscomp.CodeGenerator.getFirstNonEmptyChild(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.CodeGenerator.getContextForNonEmptyExpression(Lcom/google/javascript/jscomp/CodeGenerator$Context;)Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodeGenerator.getContextForNoInOperator(Lcom/google/javascript/jscomp/CodeGenerator$Context;)Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodeGenerator.clearContextForNoInOperator(Lcom/google/javascript/jscomp/CodeGenerator$Context;)Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodeGenerator.appendHexJavaScriptRepresentation(Ljava/lang/StringBuilder;C)V,0
com.google.javascript.jscomp.CodeGenerator.appendHexJavaScriptRepresentation(ILjava/lang/Appendable;)V,0
com.google.javascript.jscomp.CodeGenerator$Context.<init>(Ljava/lang/String;I)V,0
com.google.javascript.jscomp.CodeGenerator$Context.<clinit>()V,0
com.google.javascript.jscomp.CodeGenerator$Context.values()[Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodeGenerator$Context.valueOf(Ljava/lang/String;)Lcom/google/javascript/jscomp/CodeGenerator$Context;,0
com.google.javascript.jscomp.CodePrinter.<init>()V,0
com.google.javascript.jscomp.CodePrinter.toSource(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CodePrinter$Format;ZZILcom/google/javascript/jscomp/SourceMap;Lcom/google/javascript/jscomp/SourceMap$DetailLevel;Ljava/nio/charset/Charset;Z)Ljava/lang/String;,0
com.google.javascript.jscomp.CodePrinter$Format.<init>(Ljava/lang/String;I)V,0
com.google.javascript.jscomp.CodePrinter$Format.<clinit>()V,0
com.google.javascript.jscomp.CodePrinter$Format.values()[Lcom/google/javascript/jscomp/CodePrinter$Format;,0
com.google.javascript.jscomp.CodePrinter$Format.valueOf(Ljava/lang/String;)Lcom/google/javascript/jscomp/CodePrinter$Format;,0
com.google.javascript.jscomp.CodePrinter$Builder.<init>(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodePrinter$Builder.setPrettyPrint(Z)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setLineBreak(Z)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setPreferLineBreakAtEndOfFile(Z)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setOutputTypes(Z)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setLineLengthThreshold(I)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setSourceMap(Lcom/google/javascript/jscomp/SourceMap;)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setSourceMapDetailLevel(Lcom/google/javascript/jscomp/SourceMap$DetailLevel;)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setOutputCharset(Ljava/nio/charset/Charset;)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.setTagAsStrict(Z)Lcom/google/javascript/jscomp/CodePrinter$Builder;,0
com.google.javascript.jscomp.CodePrinter$Builder.build()Ljava/lang/String;,0
com.google.javascript.jscomp.CodePrinter$CompactCodePrinter.<init>(ZZIZLcom/google/javascript/jscomp/SourceMap$DetailLevel;)V,0
com.google.javascript.jscomp.CodePrinter$CompactCodePrinter.append(Ljava/lang/String;)V,0
com.google.javascript.jscomp.CodePrinter$CompactCodePrinter.startNewLine()V,0
com.google.javascript.jscomp.CodePrinter$CompactCodePrinter.maybeLineBreak()V,0
com.google.javascript.jscomp.CodePrinter$CompactCodePrinter.maybeCutLine()V,0
com.google.javascript.jscomp.CodePrinter$CompactCodePrinter.notePreferredLineBreak()V,0
com.google.javascript.jscomp.CodePrinter$CompactCodePrinter.endFile()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.<init>(IZLcom/google/javascript/jscomp/SourceMap$DetailLevel;)V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.append(Ljava/lang/String;)V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.startNewLine()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.maybeLineBreak()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.maybeCutLine()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.endLine()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.appendBlockStart()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.appendBlockEnd()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.listSeparator()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.endFunction(Z)V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.beginCaseBody()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.endCaseBody()V,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.appendOp(Ljava/lang/String;Z)V,1
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.shouldPreserveExtraBlocks()Z,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.getTryForCatch(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.breakAfterBlockFor(Lcom/google/javascript/rhino/Node;Z)Z,0
com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.endFile()V,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.<init>(IZLcom/google/javascript/jscomp/SourceMap$DetailLevel;)V,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.startSourceMapping(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.endSourceMapping(Lcom/google/javascript/rhino/Node;)V,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.generateSourceMap(Lcom/google/javascript/jscomp/SourceMap;)V,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.reportLineCut(IIZ)V,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.convertPosition(Lcom/google/debugging/sourcemap/FilePosition;IIZ)Lcom/google/debugging/sourcemap/FilePosition;,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.getCode()Ljava/lang/String;,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.getLastChar()C,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.getCurrentCharIndex()I,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter.getCurrentLineIndex()I,0
com.google.javascript.jscomp.CodePrinter$MappedCodePrinter$Mapping.<init>()V,0
