[
    {
        "title": "[LANG-421] StringEscapeUtils.escapeJava(String) escapes '/' characters",
        "description": "<p>Commons Lang 2.4 StringEscapeUtils.escapeJava(String) now escapes '/' characters, which is not a valid \"escapable\" character in Java strings.  I haven't tried the other Java escape/unescape methods to see if they have a similar problem, or that only Java \"escapable\" characters are escaped by escapeJava(String).</p>\n\n<p>This bug may have appeared as an unintended side-effect of the fix for <a href=\"https://issues.apache.org/jira/browse/LANG-363\" title=\"StringEscapeUtils.escapeJavaScript() method did not escape &#39;/&#39; into &#39;\\/&#39;, it will make IE render page uncorrectly\" class=\"issue-link\" data-issue-key=\"LANG-363\"><del>LANG-363</del></a>.</p>\n\n<p>Also the javadoc for escapeJava is now a little off, in that '/' should now be included in the sentence describing the differences between Java and Javascript strings, with respect to escaping rules.</p>\n\n<p>The following is a JUnit3 test demonstrating the bug.</p>\n\n<p>import junit.framework.TestCase;</p>\n\n<p>import org.apache.commons.lang.StringEscapeUtils;</p>\n\n<p>public class StringEscapeUtilsTest extends TestCase {<br/>\n    public void testEscapeJavaWithSlash() </p>\n{\n        final String input = \"String with a slash (/) in it\";\n        \n        final String expected = input;\n        final String actual   = StringEscapeUtils.escapeJava( input );\n\n        /**\n         * In 2.4 StringEscapeUtils.escapeJava(String) escapes '/' characters,\n         * which are not a valid character to escape in a Java string.  \n         */\n        assertEquals( expected, actual );\n    }\n<p>}</p>\n"
    }
]