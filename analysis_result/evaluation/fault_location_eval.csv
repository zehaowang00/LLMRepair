file_name,if_has_bug,method_level,block_level,Bug_ID,Ground_Method_Truth,Ground_Line_Truth,Ground_Line_Location,reason,Locate Correct File,Locate Correct Method,Locate Correct Block
src/main/java/org/apache/commons/lang3/math/NumberUtils.java,Yes,public Number createNumber(String str) throws NumberFormatException {,"if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
            return createInteger(str);
        }",LANG_27,org.apache.commons.lang3.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,"if (expPos < decPos) {,FAULT_OF_OMISSION","479,489",,True,True,False
src/main/java/org/apache/commons/lang3/math/NumberUtils.java,Yes,public static Number createNumber(final String str) throws NumberFormatException {,"final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};
        int pfxLen = 0;
        for(final String pfx : hex_prefixes) {
            if (str.startsWith(pfx)) {
                pfxLen += pfx.length();
                break;
            }
        }
        if (pfxLen > 0) {
            final int hexDigits = str.length() - pfxLen;
            if (hexDigits > 16) {
                return createBigInteger(str);
            }
            if (hexDigits > 8) {
                return createLong(str);
            }
            return createInteger(str);
        }
        final char lastChar = str.charAt(str.length() - 1);
        String mant;
        String dec;
        String exp;
        final int decPos = str.indexOf('.');
        final int expPos = str.indexOf('e') + str.indexOf('E') + 1;
        int numDecimals = 0;
        if (decPos > -1) {
            if (expPos > -1) {
                if (expPos < decPos || expPos > str.length()) {
                    throw new NumberFormatException(str + "" is not a valid number."");
                }
                dec = str.substring(decPos + 1, expPos);
            } else {
                dec = str.substring(decPos + 1);
            }
            mant = str.substring(0, decPos);
            numDecimals = dec.length();
        } else {
            if (expPos > -1) {
                if (expPos > str.length()) {
                    throw new NumberFormatException(str + "" is not a valid number."");
                }
                mant = str.substring(0, expPos);
            } else {
                mant = str;
            }
            dec = null;
        }
        if (!Character.isDigit(lastChar) && lastChar != '.') {
            if (expPos > -1 && expPos < str.length() - 1) {
                exp = str.substring(expPos + 1, str.length() - 1);
            } else {
                exp = null;
            }
            final String numeric = str.substring(0, str.length() - 1);
            final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
            switch (lastChar) {
                case 'l' :
                case 'L' :
                    if (dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                        try {
                            return createLong(numeric);
                        } catch (final NumberFormatException nfe) {
                        }
                        return createBigInteger(numeric);
                    }
                    throw new NumberFormatException(str + "" is not a valid number."");
                case 'f' :
                case 'F' :
                    try {
                        final Float f = NumberUtils.createFloat(numeric);
                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                            return f;
                        }
                    } catch (final NumberFormatException nfe) {
                    }
                    case 'd' :
                case 'D' :
                    try {
                        final Double d = NumberUtils.createDouble(numeric);
                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
                            return d;
                        }
                    } catch (final NumberFormatException nfe) {
                    }
                    try {
                        return createBigDecimal(numeric);
                    } catch (final NumberFormatException e) {
                    }
                    default :
                    throw new NumberFormatException(str + "" is not a valid number."");
            }
        }
        if (expPos > -1 && expPos < str.length() - 1) {
            exp = str.substring(expPos + 1, str.length());
        } else {
            exp = null;
        }
        if (dec == null && exp == null) {
            try {
                return createInteger(str);
            } catch (final NumberFormatException nfe) {
            }
            try {
                return createLong(str);
            } catch (final NumberFormatException nfe) {
            }
            return createBigInteger(str);
        }
        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
        try {
            if(numDecimals <= 7){
                final Float f = createFloat(str);
                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                    return f;
                }
            }
        } catch (final NumberFormatException nfe) {
        }
        try {
            if(numDecimals <= 16){
                final Double d = createDouble(str);
                if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
                    return d;
                }
            }
        } catch (final NumberFormatException nfe) {
        }
        return createBigDecimal(str);",LANG_1,org.apache.commons.lang3.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,"if (hexDigits > 16) { // too many for Long,if (hexDigits > 8) { // too many for an int,FAULT_OF_OMISSION","468,471,467","The fault localization result from agent0 is correct as the bug described in the bug report is present in the 'NumberUtils' class in the method 'createNumber'. The bug is related to handling Long Hex numbers and using the 'decode' method, which aligns with the identified issue in the code provided by agent0.",True,True,True
src/java/org/apache/commons/lang/time/DateFormatUtils.java,Yes,"public static String formatUTC(long millis, String pattern)","return format(new Date(millis), pattern, DateUtils.UTC_TIME_ZONE, null);",LANG_50,"org.apache.commons.lang.time.FastDateFormat.getDateInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;,org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;","if (locale != null) {,key = new Pair(key, locale);,if (locale == null) {,locale = Locale.getDefault();,},if (locale != null) {,key = new Pair(key, locale);,if (locale == null) {,locale = Locale.getDefault();,},FAULT_OF_OMISSION,FAULT_OF_OMISSION","285,286,292,293,294,465,466,471,472,473,289,468",,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/RandomStringUtils.java,Yes,"public static String random(int count, int start, int end, boolean letters, boolean numbers, char... chars)","if (start == 0 && end == 0) {
            if (chars != null) {
                end = chars.length;
            } else {
                if (!letters && !numbers) {
                    end = Integer.MAX_VALUE;
                } else {
                    end = 'z' + 1;
                    start = ' ';                
                }
            }
        }",LANG_11,org.apache.commons.lang3.RandomStringUtils.random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;,FAULT_OF_OMISSION,245,,True,True,True
src/java/org/apache/commons/lang/StringEscapeUtils.java,Yes,public static String escapeJava(String str) {,"case '/' :
    out.write('\\');
    out.write('/');
    break;",LANG_46,"org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/lang/String;)Ljava/lang/String;,org.apache.commons.lang.StringEscapeUtils.escapeJava(Ljava/io/Writer;Ljava/lang/String;)V,org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;,org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V,org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;,org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V","return escapeJavaStyleString(str, false);,escapeJavaStyleString(out, str, false);,return escapeJavaStyleString(str, true);,escapeJavaStyleString(out, str, true);,private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {,escapeJavaStyleString(writer, str, escapeSingleQuotes);,private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {,FAULT_OF_OMISSION,FAULT_OF_OMISSION","86,102,127,143,154,160,178,244,245",,True,True,False
src/java/org/apache/commons/lang/ObjectUtils.java,Yes,"public static Object appendIdentityToString(StringBuffer buffer, Object object)","if (object == null) {
            throw new NullPointerException(""Cannot get the toString of a null identity"");
        }",LANG_47,"org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;,org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;","FAULT_OF_OMISSION,FAULT_OF_OMISSION","1186,1230",,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/time/FastDateParser.java,Yes,"protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {","thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",LANG_10,org.apache.commons.lang3.time.FastDateParser.escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;,"boolean wasWhite= false;,if(Character.isWhitespace(c)) {,if(!wasWhite) {,wasWhite= true;,regex.append(""\\s*+"");,},continue;,},wasWhite= false;","304,307,308,309,310,311,312,313,314",,True,False,False
src/java/org/apache/commons/lang/BooleanUtils.java,Yes,public static Boolean toBooleanObject(String str),"if (""true"".equalsIgnoreCase(str)) {
            return Boolean.TRUE;
        } else if (""false"".equalsIgnoreCase(str)) {
            return Boolean.FALSE;
        } else if (""on"".equalsIgnoreCase(str)) {
            return Boolean.TRUE;
        } else if (""off"".equalsIgnoreCase(str)) {
            return Boolean.FALSE;
        } else if (""yes"".equalsIgnoreCase(str)) {
            return Boolean.TRUE;
        } else if (""no"".equalsIgnoreCase(str)) {
            return Boolean.FALSE;
        }
        // no match
        return null;",LANG_51,org.apache.commons.lang.BooleanUtils.toBoolean(Ljava/lang/String;)Z,FAULT_OF_OMISSION,682,,True,False,True
src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,Yes,protected void init(),"List<Rule> rulesList = parsePattern();
        mRules = rulesList.toArray(new Rule[rulesList.size()]);

        int len = 0;
        for (int i=mRules.length; --i >= 0; ) {
            len += mRules[i].estimateLength();
        }

        mMaxLengthEstimate = len;",LANG_26,org.apache.commons.lang3.time.FastDateFormat.format(Ljava/util/Date;)Ljava/lang/String;,Calendar c = new GregorianCalendar(mTimeZone);,820,"This fault localization result is correct because the bug described in the bug report is related to FastDateFormat not respecting the locale for week in year output, which aligns with the issue found in the 'init()' method of FastDateFormat.java.",True,False,False
src/main/java/org/apache/commons/lang3/math/NumberUtils.java,Yes,public Number createNumber(String str) throws NumberFormatException {,"if (str.startsWith(""--"")) {
            return null;
        }",LANG_7,"org.apache.commons.lang3.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,org.apache.commons.lang3.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;","if (str.startsWith(""--"")) {,return null;,},FAULT_OF_OMISSION,FAULT_OF_OMISSION","452,453,454,721,725",,True,True,True
src/java/org/apache/commons/lang/time/FastDateFormat.java,Yes,protected void init(),"List rulesList = parsePattern();
        mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);

        int len = 0;
        for (int i=mRules.length; --i >= 0; ) {
            len += mRules[i].estimateLength();
        }

        mMaxLengthEstimate = len;",LANG_56,,"private Rule[] mRules;,private int mMaxLengthEstimate;,FAULT_OF_OMISSION","140,144,1022",,no ground truth File,no ground truth method,True
src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,Yes,public static final String escapeXml(String input) {,"loop counter ""i"" moves from 0 to Character.codePointCount(input, 0, input.length()),
but it should move from 0 to input.length()",LANG_17,org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V,"int len = Character.codePointCount(input, 0, input.length());,else {,if (pos < len - 2) {,} else {,pos++;,},},pos--;,pos++;,FAULT_OF_OMISSION","83,90,94,96,97,98,99,100,102,89",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/BooleanUtils.java,Yes,public static boolean toBoolean(String str),"        if (str == ""true"") {
            return true;
        }
        if (str == null) {
            return false;
        }
        switch (str.length()) {
            case 2: {
                char ch0 = str.charAt(0);
                char ch1 = str.charAt(1);
                return 
                    (ch0 == 'o' || ch0 == 'O') &&
                    (ch1 == 'n' || ch1 == 'N');
            }
            case 3: {
                char ch = str.charAt(0);
                if (ch == 'y') {
                    return 
                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
                        (str.charAt(2) == 's' || str.charAt(2) == 'S');
                }
                if (ch == 'Y') {
                    return 
                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                        (str.charAt(2) == 'S' || str.charAt(2) == 's');
                }
                return false;
            }
            case 4: {
                char ch = str.charAt(0);
                if (ch == 't') {
                    return 
                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&
                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&
                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');
                }
                if (ch == 'T') {
                    return 
                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&
                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&
                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');
                }
            }
        }
        return false;",LANG_40,org.apache.commons.lang.StringUtils.containsIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z,"return contains(str.toUpperCase(), searchStr.toUpperCase());",1048,The bug described in the bug report matches the case-insensitive string handling issue in the method 'public static boolean toBoolean(String str)' of the BooleanUtils.java file.,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java,Yes,"public CharSequence translate(CharSequence input, Writer out)","loop counter ""i"" moves from 0 to Character.codePointCount(input, 0, input.length()), but it should move from 0 to input.length()",LANG_37,org.apache.commons.lang3.ArrayUtils.addAll([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;,"FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","2962,2963,2964",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/builder/CompareToBuilder.java,Yes,"public static int reflectionCompare(Object lhs, Object rhs)","Fields can be private, thus AccessibleObject.setAccessible is used to bypass normal access control checks. This will fail under a security manager unless the appropriate permissions are set.",LANG_60,"org.apache.commons.lang.text.StrBuilder.contains(C)Z,org.apache.commons.lang.text.StrBuilder.indexOf(CI)I","for (int i = 0; i < thisBuf.length; i++) {,for (int i = startIndex; i < thisBuf.length; i++) {","1673,1730",,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,Yes,"public void appendTo(StringBuffer buffer, Calendar calendar)","if (mTimeZoneForced) {
                if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {
                    buffer.append(mDaylight);
                } else {
                    buffer.append(mStandard);
                }
            } else {
                TimeZone timeZone = calendar.getTimeZone();
                if (timeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {
                    buffer.append(getTimeZoneDisplay(timeZone, true, mStyle, mLocale));
                } else {
                    buffer.append(getTimeZoneDisplay(timeZone, false, mStyle, mLocale));
                }
            }",LANG_21,org.apache.commons.lang3.time.DateUtils.isSameLocalTime(Ljava/util/Calendar;Ljava/util/Calendar;)Z,cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&,265,,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/ObjectUtils.java,Yes,public static <T> T clone(final T obj),"final Method clone = obj.getClass().getMethod(""clone"");
result = clone.invoke(obj);",LANG_20,"org.apache.commons.lang3.StringUtils.join([Ljava/lang/Object;CII)Ljava/lang/String;,org.apache.commons.lang3.StringUtils.join([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;","StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());","3298,3383",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/builder/ToStringBuilder.java,Yes,public String toString() {,"if (this.getObject() == null) {
            this.getStringBuffer().append(this.getStyle().getNullText());
        } else {
            style.appendEnd(this.getStringBuffer(), this.getObject());
        }",LANG_61,org.apache.commons.lang.text.StrBuilder.indexOf(Ljava/lang/String;I)I,int len = thisBuf.length - strLen;,1776,"The bug described in the bug report is related to ArrayIndexOutOfBoundsException, which is caused by accessing an array index out of bounds. The code snippet in the 'public String toString()' method checks if the object is null and appends the null text. This logic could potentially trigger an ArrayIndexOutOfBoundsException if not handled correctly.",False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang3/math/NumberUtils.java,Yes,public static boolean isNumber(String str),"if (chars[i] == '.') {
                if (hasDecPoint || hasExp) {
                    // two decimal points or dec in exponent   
                    return false;
                }
                hasDecPoint = true;
            }",LANG_36,"org.apache.commons.lang3.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,org.apache.commons.lang3.math.NumberUtils.isNumber(Ljava/lang/String;)Z","if (!Character.isDigit(lastChar)) {,FAULT_OF_OMISSION","491,1387",,True,True,True
src/java/org/apache/commons/lang/ClassUtils.java,Yes,"public Method getPublicMethod(Class<?> cls, String methodName, Class<?> parameterTypes[])",Method body,LANG_41,"org.apache.commons.lang.ClassUtils.getShortClassName(Ljava/lang/String;)Ljava/lang/String;,org.apache.commons.lang.ClassUtils.getPackageName(Ljava/lang/String;)Ljava/lang/String;","return out;,if (className == null) {,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","203,245,191,193,194,195,250,251",,True,False,False
src/main/java/org/apache/commons/lang3/math/NumberUtils.java,Yes,public Number createNumber(String str) throws NumberFormatException {,"if (str.startsWith(""0x"") || str.startsWith(""-0x""))",LANG_16,org.apache.commons.lang3.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,"if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",458,,True,True,True
src/java/org/apache/commons/lang/LocaleUtils.java,Yes,public static boolean isAvailableLocale(Locale locale) {,return cAvailableLocaleSet.contains(locale);,LANG_57,org.apache.commons.lang.LocaleUtils.isAvailableLocale(Ljava/util/Locale;)Z,return cAvailableLocaleSet.contains(locale);,223,,True,True,True
src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java,Yes,"public final void translate(CharSequence input, Writer out) throws IOException","while (pos < len) {
            int consumed = translate(input, pos, out);
            if (consumed == 0) {
                char[] c = Character.toChars(Character.codePointAt(input, pos));
                out.write(c);
                pos+= c.length;
                continue;
            }
//          // contract with translators is that they have to understand codepoints 
//          // and they just took care of a surrogate pair
            for (int pt = 0; pt < consumed; pt++) {
                pos += Character.charCount(Character.codePointAt(input, pos));
            }
        }",LANG_6,org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V,"pos += Character.charCount(Character.codePointAt(input, pos));",95,,True,True,True
src/java/org/apache/commons/lang/StringEscapeUtils.java,Yes,public static String escapeHtml(String str) {,"out.write(CSV_QUOTE);
        for (int i = 0; i < str.length(); i++) {
            char c = str.charAt(i);
            if (c == CSV_QUOTE) {
                out.write(CSV_QUOTE); // escape double quote
            }
            out.write(c);
        }
        out.write(CSV_QUOTE);",LANG_42,org.apache.commons.lang.Entities.escape(Ljava/io/Writer;Ljava/lang/String;)V,"char c = str.charAt(i);,if (c > 0x7F) {","828,831",,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java,No,,,LANG_15,"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/ParameterizedType;Ljava/util/Map;)Z,org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;","for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {,Type toTypeArg = entry.getValue();,Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());,if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {","219,220,221,675",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/LocaleUtils.java,Yes,public static Locale toLocale(String str),"if (len != 2 && len != 5 && len < 7) {
            throw new IllegalArgumentException(""Invalid locale format: "" + str);
        }",LANG_54,org.apache.commons.lang.LocaleUtils.toLocale(Ljava/lang/String;)Ljava/util/Locale;,FAULT_OF_OMISSION,114,,True,True,False
src/main/java/org/apache/commons/lang3/LocaleUtils.java,Yes,public static Locale toLocale(final String str),"if (str.charAt(2) != '_') {
                throw new IllegalArgumentException(""Invalid locale format: "" + str);
            }",LANG_5,org.apache.commons.lang3.LocaleUtils.toLocale(Ljava/lang/String;)Ljava/util/Locale;,"FAULT_OF_OMISSION,FAULT_OF_OMISSION","97,128",,True,True,True
src/main/java/org/apache/commons/lang3/time/FormatCache.java,Yes,"public F getInstance(String pattern, TimeZone timeZone, Locale locale)","if (pattern == null) {
            throw new NullPointerException(""pattern must not be null"");
        }",LANG_39,org.apache.commons.lang3.StringUtils.replaceEach(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZI)Ljava/lang/String;,FAULT_OF_OMISSION,3676,,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,Yes,public static final String escapeHtml4(String input) {,return ESCAPE_HTML4.translate(input);,LANG_19,org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I,,,,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/NumberUtils.java,Yes,public static Number createNumber(String val) throws NumberFormatException {,"if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {
            return createInteger(val);
        }",LANG_58,org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,"&& isDigits(numeric.substring(1)),&& (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {","454,455",,True,True,False
src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java,Yes,public final void applyPattern(String pattern),"foundFormats.add(format);
foundDescriptions.add(formatDescription);
Validate.isTrue(foundFormats.size() == fmtCount);
Validate.isTrue(foundDescriptions.size() == fmtCount);
if (c[pos.getIndex()] != END_FE) {
    throw new IllegalArgumentException(
        ""Unreadable format element at position "" + start);
}",LANG_23,,"FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","73,263,269",,no ground truth File,no ground truth method,False
src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,Yes,public Date parse(String source) throws ParseException {,return parser.parse(source);,LANG_9,org.apache.commons.lang3.time.FastDateParser.init()V,FAULT_OF_OMISSION,144,,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/Entities.java,Yes,public void testNumberOverflow() throws Exception,"doTestUnescapeEntity(""&amp;#12345678;"", ""&amp;#12345678;"");
        doTestUnescapeEntity(""x&amp;#12345678;y"", ""x&amp;#12345678;y"");
        doTestUnescapeEntity(""&amp;#x12345678;"", ""&amp;#x12345678;"");
        doTestUnescapeEntity(""x&amp;#x12345678;y"", ""x&amp;#x12345678;y"");",LANG_62,"org.apache.commons.lang.Entities.unescape(Ljava/lang/String;)Ljava/lang/String;,org.apache.commons.lang.Entities.unescape(Ljava/io/Writer;Ljava/lang/String;)V","FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","850,920,925,926",,True,False,False
src/java/org/apache/commons/lang/enum/ValuedEnum.java,Yes,"protected static Enum getEnum(Class enumClass, int value) {","if (enumeration.getValue() == value) {
                return enumeration;
            }",LANG_35,"org.apache.commons.lang3.ArrayUtils.add([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;,org.apache.commons.lang3.ArrayUtils.add([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;","type = Object.class;,return (T[]) new Object[] { null };","3295,3574",,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/builder/StandardToStringStyle.java,Yes,public class StandardToStringStyle extends ToStringStyle {,The thread local in org.apache.commons.lang3.builder.ToStringStyle is created but never removed and no API is provided to remove it.,LANG_34,"org.apache.commons.lang3.builder.ToStringStyle.getRegistry()Ljava/util/Map;,org.apache.commons.lang3.builder.ToStringStyle.isRegistered(Ljava/lang/Object;)Z","return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();,return m.containsKey(value);","148,164",,True,False,False
src/java/org/apache/commons/lang/time/DurationFormatUtils.java,Yes,public static String formatDuration,"if (Token.containsTokenWithValue(tokens, d) ) {
            days = (int) (durationMillis / DateUtils.MILLIS_PER_DAY);
            durationMillis = durationMillis - (days * DateUtils.MILLIS_PER_DAY);
        }
        if (Token.containsTokenWithValue(tokens, H) ) {
            hours = (int) (durationMillis / DateUtils.MILLIS_PER_HOUR);
            durationMillis = durationMillis - (hours * DateUtils.MILLIS_PER_HOUR);
        }
        if (Token.containsTokenWithValue(tokens, m) ) {
            minutes = (int) (durationMillis / DateUtils.MILLIS_PER_MINUTE);
            durationMillis = durationMillis - (minutes * DateUtils.MILLIS_PER_MINUTE);
        }
        if (Token.containsTokenWithValue(tokens, s) ) {
            seconds = (int) (durationMillis / DateUtils.MILLIS_PER_SECOND);
            durationMillis = durationMillis - (seconds * DateUtils.MILLIS_PER_SECOND);
        }
        if (Token.containsTokenWithValue(tokens, S) ) {
            milliseconds = (int) durationMillis;
        }",LANG_63,"org.apache.commons.lang.time.DurationFormatUtils.formatPeriod(JJLjava/lang/String;ZLjava/util/TimeZone;)Ljava/lang/String;,org.apache.commons.lang.time.DurationFormatUtils.format([Lorg/apache/commons/lang/time/DurationFormatUtils$Token;IIIIIIIZ)Ljava/lang/String;,org.apache.commons.lang.time.DurationFormatUtils.reduceAndCorrect(Ljava/util/Calendar;Ljava/util/Calendar;II)I","days += 31;,milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);,seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);,minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);,hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);,days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);,months -= reduceAndCorrect(start, end, Calendar.MONTH, months);,years -= reduceAndCorrect(start, end, Calendar.YEAR, years);,},static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {,end.add( field, -1 * difference );,int endValue = end.get(field);,int startValue = start.get(field);,if (endValue < startValue) {,int newdiff = startValue - endValue;,end.add( field, newdiff );,return newdiff;,} else {,return 0;,},FAULT_OF_OMISSION","306,318,319,320,321,322,323,324,431,432,433,434,435,436,437,438,439,440,441,442,313","The 'formatDuration' method in the 'DurationFormatUtils' class contains the bug described in the bug report because it is responsible for formatting the time gap as a string, and the specific block of code within this method matches the scenario described in the bug report where the wrong result is returned when the Date is set to Dec 31, 2005.",True,False,True
src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,Yes,"protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale) {","TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",LANG_8,"org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.<init>(Ljava/util/TimeZone;Ljava/util/Locale;I)V,org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(Ljava/lang/StringBuffer;Ljava/util/Calendar;)V","private final TimeZone zone;,zone = timeZone;,FAULT_OF_OMISSION","1098,1112,1134",,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/math/Fraction.java,Yes,"public static Fraction getReducedFraction(int numerator, int denominator) {","if (denominator==Integer.MIN_VALUE && (numerator&1)==0) {
            numerator/=2; denominator/=2;
        }",LANG_22,org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(II)I,"if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,FAULT_OF_OMISSION","584,583",,True,False,True
src/java/org/apache/commons/lang/text/StrMatcher.java,Yes,"public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)","===> str.getChars(0, strLen, buffer, size);   &lt;==== BUG: it should be str.getChars(0, width, buffer, size);",LANG_59,org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;,"str.getChars(0, strLen, buffer, size);",884,,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java,Yes,"public static String format(Date date, String pattern)",return df.format(date);,LANG_18,org.apache.commons.lang3.time.FastDateFormat.parsePattern()Ljava/util/List;,"if (tokenLen >= 4) {,rule = selectNumberRule(Calendar.YEAR, tokenLen);,} else {,FAULT_OF_OMISSION","495,496,497,499",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang3/time/DateFormatUtils.java,Yes,"public static String format(Calendar calendar, String pattern)",return df.format(calendar);,LANG_38,org.apache.commons.lang3.time.FastDateFormat.format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;,FAULT_OF_OMISSION,872,,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java,Yes,public class LookupTranslator extends CharSequenceTranslator {,"for (int i = max; i >= shortest; i--) {
            final CharSequence subSeq = input.subSequence(index, index + i);
            final CharSequence result = lookupMap.get(subSeq);
            if (result != null) {
                out.write(result.toString());
                return i;
            }
        }",LANG_4,"org.apache.commons.lang3.text.translate.LookupTranslator.<init>([[Ljava/lang/CharSequence;)V,org.apache.commons.lang3.text.translate.LookupTranslator.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I","private final HashMap<CharSequence, CharSequence> lookupMap;,lookupMap = new HashMap<CharSequence, CharSequence>();,this.lookupMap.put(seq[0], seq[1]);,final CharSequence result = lookupMap.get(subSeq);","31,46,51,77",,True,False,True
src/java/org/apache/commons/lang/time/StopWatch.java,Yes,public void suspend(),"stopTime = System.currentTimeMillis();
this.runningState = STATE_SUSPENDED;",LANG_55,org.apache.commons.lang.time.StopWatch.stop()V,"FAULT_OF_OMISSION,FAULT_OF_OMISSION","118,119",,True,False,False
src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,Yes,"public EqualsBuilder append(Object lhs, Object rhs) {",isEquals = lhs.equals(rhs);,LANG_14,org.apache.commons.lang3.StringUtils.equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z,"FAULT_OF_OMISSION,FAULT_OF_OMISSION","788,789",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java,Yes,public final void applyPattern(String pattern),"if (escapingOn && c[start] == QUOTE) {
        return appendTo == null ? null : appendTo.append(QUOTE);
}",LANG_43,org.apache.commons.lang.text.ExtendedMessageFormat.appendQuotedString(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;,FAULT_OF_OMISSION,422,,True,False,True
src/java/org/apache/commons/lang/NumberUtils.java,Yes,public static Number createNumber(String val) throws NumberFormatException {,return createBigDecimal(numeric);,LANG_48,org.apache.commons.lang.builder.EqualsBuilder.append(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang/builder/EqualsBuilder;,"FAULT_OF_OMISSION,FAULT_OF_OMISSION","380,382",,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java,Yes,private static final String[][] ISO8859_1_ESCAPE,"{""\\u00D7"", ""&amp;Ouml;""}, // \\u00d6 - uppercase O, umlaut
        {""\\u00D8"", ""&amp;times;""}, // multiplication sign",LANG_25,org.apache.commons.lang3.text.translate.EntityArrays.<clinit>()V,,,,True,False,no ground truth block
src/java/org/apache/commons/lang/enums/ValuedEnum.java,Yes,public int compareTo(Object other) {,return iValue - ((ValuedEnum) other).iValue;,LANG_64,org.apache.commons.lang.enums.ValuedEnum.compareTo(Ljava/lang/Object;)I,"FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","183,192,193,194,195",,True,True,True
src/main/java/org/apache/commons/lang3/ClassUtils.java,Yes,"public Method getPublicMethod(Class<?> cls, String methodName, Class<?> parameterTypes[])","Method signature: public Method getPublicMethod(Class<?> cls, String methodName, Class<?> parameterTypes[])

Method body: 
1. Get the declared method using cls.getMethod(methodName, parameterTypes)
2. Check if the declaring class of the method is public
3. If not public, iterate through all interfaces and superclasses of cls
4. Check if the candidate class is public
5. Get the method from the candidate class using methodName and parameterTypes
6. Check if the declaring class of the candidate method is public
7. Return the candidate method if it is public
8. Throw NoSuchMethodException if no public method is found",LANG_33,org.apache.commons.lang3.ClassUtils.toClass([Ljava/lang/Object;)[Ljava/lang/Class;,classes[i] = array[i].getClass();,910,,True,False,False
src/java/org/apache/commons/lang/exception/NestableDelegate.java,Yes,public String getMessage(int index) {,"if (Nestable.class.isInstance(t)) {
            return ((Nestable) t).getMessage(0);
        }
        return t.getMessage();",LANG_44,org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,FAULT_OF_OMISSION,145,,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/SerializationUtils.java,Yes,public static <T extends Serializable> T clone(T object),"try {
            // stream closed in the finally
            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());
            /*
             * when we serialize and deserialize an object,
             * it is reasonable to assume the deserialized object
             * is of the same type as the original serialized object
             */
            @SuppressWarnings(""unchecked"") // see above
            T readObject = (T) in.readObject();
            return readObject;

        } catch (ClassNotFoundException ex) {
            throw new SerializationException(""ClassNotFoundException while reading cloned object data"", ex);
        } catch (IOException ex) {
            throw new SerializationException(""IOException while reading cloned object data"", ex);
        } finally {
            try {
                if (in != null) {
                    in.close();
                }
            } catch (IOException ex) {
                throw new SerializationException(""IOException on closing cloned object data InputStream."", ex);
            }
        }",LANG_13,"org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream.<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V,org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream.resolveClass(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;","FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","239,252,268,269",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/StringEscapeUtils.java,Yes,public static String escapeJavaScript(String str) {,"out.write('\\');
out.write('\'');",LANG_52,org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V,FAULT_OF_OMISSION,236,,True,False,False
src/main/java/org/apache/commons/lang3/math/NumberUtils.java,Yes,public Number createNumber(final String str) throws NumberFormatException {,"final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};
        int pfxLen = 0;
        for(final String pfx : hex_prefixes) {
            if (str.startsWith(pfx)) {
                pfxLen += pfx.length();
                break;
            }
        }
        if (pfxLen > 0) { // we have a hex number
            final int hexDigits = str.length() - pfxLen;
            if (hexDigits > 16) { // too many for Long
                return createBigInteger(str);
            }
            if (hexDigits > 8) { // too many for an int
                return createLong(str);
            }
            return createInteger(str);
        }
        final char lastChar = str.charAt(str.length() - 1);
        String mant;
        String dec;
        String exp;
        final int decPos = str.indexOf('.');
        final int expPos = str.indexOf('e') + str.indexOf('E') + 1; // assumes both not present
        // if both e and E are present, this is caught by the checks on expPos (which prevent IOOBE)
        // and the parsing which will detect if e or E appear in a number due to using the wrong offset

        int numDecimals = 0; // Check required precision (LANG-693)
        if (decPos > -1) { // there is a decimal point

            if (expPos > -1) { // there is an exponent
                if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE
                    throw new NumberFormatException(str + "" is not a valid number."");
                }
                dec = str.substring(decPos + 1, expPos);
            } else {
                dec = str.substring(decPos + 1);
            }
            mant = str.substring(0, decPos);
            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.
        } else {
            if (expPos > -1) {
                if (expPos > str.length()) { // prevents double exponent causing IOOBE
                    throw new NumberFormatException(str + "" is not a valid number."");
                }
                mant = str.substring(0, expPos);
            } else {
                mant = str;
            }
            dec = null;
        }
        if (!Character.isDigit(lastChar) && lastChar != '.') {
            if (expPos > -1 && expPos < str.length() - 1) {
                exp = str.substring(expPos + 1, str.length() - 1);
            } else {
                exp = null;
            }
            //Requesting a specific type..
            final String numeric = str.substring(0, str.length() - 1);
            final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
            switch (lastChar) {
                case 'l' :
                case 'L' :
                    if (dec == null
                        && exp == null
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                        try {
                            return createLong(numeric);
                        } catch (final NumberFormatException nfe) { // NOPMD
                            // Too big for a long
                        }
                        return createBigInteger(numeric);

                    }
                    throw new NumberFormatException(str + "" is not a valid number."");
                case 'f' :
                case 'F' :
                    try {
                        final Float f = NumberUtils.createFloat(numeric);
                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                            //If it's too big for a float or the float value = 0 and the string
                            //has non-zeros in it, then float does not have the precision we want
                            return f;
                        }

                    } catch (final NumberFormatException nfe) { // NOPMD
                        // ignore the bad number
                    }
                    //$FALL-THROUGH$
                case 'd' :
                case 'D' :
                    try {
                        final Double d = NumberUtils.createDouble(numeric);
                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
                            return d;
                        }
                    } catch (final NumberFormatException nfe) { // NOPMD
                        // ignore the bad number
                    }
                    try {
                        return createBigDecimal(numeric);
                    } catch (final NumberFormatException e) { // NOPMD
                        // ignore the bad number
                    }
                    //$FALL-THROUGH$
                default :
                    throw new NumberFormatException(str + "" is not a valid number."");

            }
        }
        //User doesn't have a preference on the return type, so let's start
        //small and go from there...
        if (expPos > -1 && expPos < str.length() - 1) {
            exp = str.substring(expPos + 1, str.length());
        } else {
            exp = null;
        }
        if (dec == null && exp == null) { // no decimal point and no exponent
            //Must be an Integer, Long, Biginteger
            try {
                return createInteger(str);
            } catch (final NumberFormatException nfe) { // NOPMD
                // ignore the bad number
            }
            try {
                return createLong(str);
            } catch (final NumberFormatException nfe) { // NOPMD
                // ignore the bad number
            }
            return createBigInteger(str);
        }

        //Must be a Float, Double, BigDecimal
        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
        try {
                final Float f = createFloat(str);
                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                    return f;
                }
        } catch (final NumberFormatException nfe) { // NOPMD
            // ignore the bad number
        }
        try {
                final Double d = createDouble(str);
                if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
                    return d;
                }
        } catch (final NumberFormatException nfe) { // NOPMD
            // ignore the bad number
        }

        return createBigDecimal(str);",LANG_3,org.apache.commons.lang3.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;,"FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","593,597,601,605",,True,True,True
src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,Yes,public static String toString(Object object),"return toString(object, null, false, false, null)",LANG_29,org.apache.commons.lang3.SystemUtils.toJavaVersionInt(Ljava/lang/String;)F,static float toJavaVersionInt(String version) {,1672,,False,In Wrong File,In Wrong File
src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,Yes,public static final String escapeXml(String input) {,writer.write(code);,LANG_28,org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I,"FAULT_OF_OMISSION,FAULT_OF_OMISSION","63,64",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/time/DateUtils.java,Yes,"public static Date round(Date date, int field)","time = time - (seconds * 1000L);
        if (field == Calendar.MINUTE) {
            done = true;
        }",LANG_53,org.apache.commons.lang.time.DateUtils.modify(Ljava/util/Calendar;IZ)V,"},},FAULT_OF_OMISSION,FAULT_OF_OMISSION","645,654,643,652",,True,False,True
src/main/java/org/apache/commons/lang3/RandomStringUtils.java,Yes,"public static String random(int count, int start, int end, boolean letters, boolean numbers, char... chars)",ch = chars[random.nextInt(gap) + start];,LANG_12,org.apache.commons.lang3.RandomStringUtils.random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;,"FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","230,232,238",,True,True,False
src/java/org/apache/commons/lang/WordUtils.java,Yes,"public static String abbreviate(String str, int lower, int upper, String appendToEnd)","int index = StringUtils.indexOf(str, "" "", lower);
if (index == -1) {
    result.append(str.substring(0, upper));
    if (upper != str.length()) {
        result.append(StringUtils.defaultString(appendToEnd));
    }
} else if (index > upper) {
    result.append(str.substring(0, upper));
    result.append(StringUtils.defaultString(appendToEnd));
} else {
    result.append(str.substring(0, index));
    result.append(StringUtils.defaultString(appendToEnd));
}",LANG_45,org.apache.commons.lang.WordUtils.abbreviate(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;,FAULT_OF_OMISSION,616,,True,True,False
src/main/java/org/apache/commons/lang3/builder/StandardToStringStyle.java,Yes,public class StandardToStringStyle extends ToStringStyle {,"The thread local in org.apache.commons.lang3.builder.ToStringStyle is created but never removed and no API is provided to remove it. If a webapp's use of LANG triggers the loading of this class, a reference chain will be created that will cause a memory leak on web application reload.",LANG_32,"org.apache.commons.lang3.builder.HashCodeBuilder.<clinit>()V,org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(Ljava/lang/Object;)Z,org.apache.commons.lang3.builder.HashCodeBuilder.register(Ljava/lang/Object;)V,org.apache.commons.lang3.builder.HashCodeBuilder.unregister(Ljava/lang/Object;)V,org.apache.commons.lang3.builder.HashCodeBuilder$1.initialValue()Ljava/util/Set;","private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,@Override,protected Set<IDKey> initialValue() {,return new HashSet<IDKey>();,},};,return getRegistry().contains(new IDKey(value));,getRegistry().remove(new IDKey(value));,FAULT_OF_OMISSION","104,105,106,107,108,109,152,538,522",,False,In Wrong File,In Wrong File
src/java/org/apache/commons/lang/time/DateUtils.java,Yes,"public static Date truncate(Date date, int field) {","offset = val.get(Calendar.DATE) - 1;
roundUp = offset > 7;
val.add(Calendar.DATE, -15);
val.add(Calendar.MONTH, 1);",LANG_65,org.apache.commons.lang.time.DateUtils.modify(Ljava/util/Calendar;IZ)V,"FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION,FAULT_OF_OMISSION","624,631,633,635,637,639,709,710",,True,False,False
src/main/java/org/apache/commons/lang3/math/NumberUtils.java,Yes,public static boolean isNumber(String str) {,if (chars[i] == 'l' || chars[i] == 'L') {,LANG_24,org.apache.commons.lang3.math.NumberUtils.isNumber(Ljava/lang/String;)Z,return foundDigit && !hasExp;,1413,The bug described in the bug report is located in the 'isNumber' method of the 'NumberUtils' class. The specific block of code that causes the bug is the condition where the character is checked if it is 'l' or 'L'.,True,True,False
src/java/org/apache/commons/lang/math/Fraction.java,Yes,"private Fraction addSub(Fraction fraction, boolean isAdd) {","int d1 = greatestCommonDivisor(denominator, fraction.denominator);
        if (d1==1) {
            int uvp = mulAndCheck(numerator, fraction.denominator);
            int upv = mulAndCheck(fraction.numerator, denominator);
            return new Fraction
                (isAdd ? addAndCheck(uvp, upv) : subAndCheck(uvp, upv),
                 mulPosAndCheck(denominator, fraction.denominator));
        }",LANG_49,org.apache.commons.lang.math.Fraction.reduce()Lorg/apache/commons/lang/math/Fraction;,FAULT_OF_OMISSION,466,,True,False,False
