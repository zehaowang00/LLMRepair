{
    "result": [
        {
            "file_name": "src/java/org/apache/commons/lang/LocaleUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public static Locale toLocale(String str)",
            "block_level": "if (len != 2 && len != 5 && len < 7) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}"
        },
        {
            "file_name": "src/java/org/apache/commons/lang/time/DateFormatUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public static String format(Date date, String pattern, TimeZone timeZone, Locale locale) {",
            "block_level": "FastDateFormat df = FastDateFormat.getInstance(pattern, timeZone, locale);\nreturn df.format(date);"
        },
        {
            "file_name": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
            "if_has_bug": "Yes",
            "method_level": "protected void init()",
            "block_level": "List rulesList = parsePattern();\n        mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);\n\n        int len = 0;\n        for (int i=mRules.length; --i >= 0; ) {\n            len += mRules[i].estimateLength();\n        }\n\n        mMaxLengthEstimate = len;"
        }
    ]
}