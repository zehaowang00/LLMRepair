{
    "result": [
        {
            "file_name": "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java",
            "if_has_bug": "Yes",
            "method_level": "public String toString()",
            "block_level": "if (this.getObject() == null) {\n            this.getStringBuffer().append(this.getStyle().getNullText());\n        } else {\n            style.appendEnd(this.getStringBuffer(), this.getObject());\n        }"
        },
        {
            "file_name": "src/main/java/org/apache/commons/lang3/LocaleUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public static Locale toLocale(String str)",
            "block_level": "if (str == null) {\n    return null;\n}\nint len = str.length();\nif (len != 2 && len != 5 && len < 7) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\nchar ch0 = str.charAt(0);\nchar ch1 = str.charAt(1);\nif (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\nif (len == 2) {\n    return new Locale(str, \"\");\n} else {\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        return new Locale(str.substring(0, 2), \"\", str.substring(4));\n    }\n    char ch4 = str.charAt(4);\n    if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    } else {\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n    }\n}"
        },
        {
            "file_name": "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java",
            "if_has_bug": "Yes",
            "method_level": "public static String toString(Object object)",
            "block_level": "return toString(object, null, false, false, null);"
        }
    ]
}