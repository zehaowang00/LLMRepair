{
    "result": [
        {
            "file_name": "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public static String format(Date date, String pattern)",
            "block_level": "FastDateFormat df = FastDateFormat.getInstance(pattern, timeZone, locale);\nreturn df.format(date);"
        },
        {
            "file_name": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
            "if_has_bug": "Yes",
            "method_level": "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {",
            "block_level": "rule = selectNumberRule(Calendar.YEAR, tokenLen);"
        },
        {
            "file_name": "src/main/java/org/apache/commons/lang3/time/FormatCache.java",
            "if_has_bug": "Yes",
            "method_level": "public F getDateTimeInstance(Integer dateStyle, Integer timeStyle, TimeZone timeZone, Locale locale) {",
            "block_level": "if (dateStyle == null) {\n    formatter = DateFormat.getTimeInstance(timeStyle, locale);                    \n}\nelse if (timeStyle == null) {\n    formatter = DateFormat.getDateInstance(dateStyle, locale);                    \n}\nelse {\n    formatter = DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale);\n}\npattern = ((SimpleDateFormat)formatter).toPattern();\nString previous = cDateTimeInstanceCache.putIfAbsent(key, pattern);\nif (previous != null) {\n    pattern= previous;\n}"
        }
    ]
}