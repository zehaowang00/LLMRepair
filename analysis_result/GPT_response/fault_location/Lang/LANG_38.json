{
    "result": [
        {
            "file_name": "src/java/org/apache/commons/lang3/time/FastDateFormat.java",
            "if_has_bug": "Yes",
            "method_level": "public void appendTo(StringBuffer buffer, Calendar calendar)",
            "block_level": "if (mTimeZoneForced) {\n    if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {\n        buffer.append(mDaylight);\n    } else {\n        buffer.append(mStandard);\n    }\n} else {\n    TimeZone timeZone = calendar.getTimeZone();\n    if (timeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {\n        buffer.append(getTimeZoneDisplay(timeZone, true, mStyle, mLocale));\n    } else {\n        buffer.append(getTimeZoneDisplay(timeZone, false, mStyle, mLocale));\n    }\n}"
        },
        {
            "file_name": "src/java/org/apache/commons/lang3/time/DateFormatUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public static String format(Calendar calendar, String pattern)",
            "block_level": "FastDateFormat df = FastDateFormat.getInstance(pattern, timeZone, locale);\nreturn df.format(calendar);"
        }
    ]
}