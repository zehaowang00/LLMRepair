{
    "result": [
        {
            "file_name": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public static final String unescapeHtml4(String input)",
            "block_level": "public static final String unescapeHtml4(String input) {\n        return UNESCAPE_HTML4.translate(input);\n    }"
        },
        {
            "file_name": "src/main/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java",
            "if_has_bug": "Yes",
            "method_level": "public int translate(CharSequence input, int index, Writer out) throws IOException",
            "block_level": "int consumed = translator.translate(input, index, out);\nif(consumed != 0) {\n    return consumed;\n}"
        },
        {
            "file_name": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
            "if_has_bug": "Yes",
            "method_level": "public final void translate(CharSequence input, Writer out) throws IOException {",
            "block_level": "for (int i = 0; i < sz; i++) {\n\n            // consumed is the number of codepoints consumed\n            int consumed = translate(input, i, out);\n\n            if (consumed == 0) {\n                out.write(Character.toChars(Character.codePointAt(input, i)));\n            } else {\n                // contract with translators is that they have to understand codepoints \n                // and they just took care of a surrogate pair\n                for (int j = 0; j < consumed; j++) {\n                    if (i < sz - 2) {\n                        i += Character.charCount(Character.codePointAt(input, i));\n                    } else {\n                        // If the String ends with a high surrogate, just add the 1 and don't worry about such things\n                        i++;\n                    }\n                }\n                // for loop will increment 1 anyway, so remove 1 to account for that\n                i--;\n            }\n        }"
        }
    ]
}