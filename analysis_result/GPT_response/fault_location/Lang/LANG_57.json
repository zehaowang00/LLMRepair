{
    "result": [
        {
            "file_name": "src/java/org/apache/commons/lang/LocaleUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public static boolean isAvailableLocale(Locale locale) {\n        return cAvailableLocaleSet.contains(locale);\n    }",
            "block_level": "return cAvailableLocaleSet.contains(locale);"
        },
        {
            "file_name": "src/java/org/apache/commons/lang/CharSet.java",
            "if_has_bug": "No",
            "method_level": "",
            "block_level": ""
        },
        {
            "file_name": "src/java/org/apache/commons/lang/exception/ExceptionUtils.java",
            "if_has_bug": "Yes",
            "method_level": "public boolean setCause(Throwable target, Throwable cause) {",
            "block_level": "if (target == null) {\n    throw new NullArgumentException(\"target\");\n}\nObject[] causeArgs = new Object[]{cause};\nboolean modifiedTarget = false;\nif (THROWABLE_INITCAUSE_METHOD != null) {\n    try {\n        THROWABLE_INITCAUSE_METHOD.invoke(target, causeArgs);\n        modifiedTarget = true;\n    } catch (IllegalAccessException ignored) {\n        // Exception ignored.\n    } catch (InvocationTargetException ignored) {\n        // Exception ignored.\n    }\n}\ntry {\n    Method setCauseMethod = target.getClass().getMethod(\"setCause\", new Class[]{Throwable.class});\n    setCauseMethod.invoke(target, causeArgs);\n    modifiedTarget = true;\n} catch (NoSuchMethodException ignored) {\n    // Exception ignored.\n} catch (IllegalAccessException ignored) {\n    // Exception ignored.\n} catch (InvocationTargetException ignored) {\n    // Exception ignored.\n}\nreturn modifiedTarget;\n}"
        }
    ]
}