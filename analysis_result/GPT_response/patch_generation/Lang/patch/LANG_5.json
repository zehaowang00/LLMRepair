{
    "Fix Patch": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex 3a2b6e8..e8d6e8a 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -169,7 +169,7 @@ public class LocaleUtils {\n             if (len < 2) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            final char ch0 = str.charAt(0);\n+            final char ch0 = str.charAt(0);\n             final char ch1 = str.charAt(1);\n             if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 2) {\n+            if (len == 2 || (len == 3 && str.charAt(2) == '_')) {\n                 return new Locale(str);\n             }\n             if (len < 5) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(2) != '_') {\n+            if (str.charAt(2) != '_' && str.charAt(3) != '_') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             final char ch3 = str.charAt(3);\n             if (ch3 == '_') {\n                 return new Locale(str.substring(0, 2), \"\", str.substring(4));\n             }\n             final char ch4 = str.charAt(4);\n             if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             if (len == 5) {\n                 return new Locale(str.substring(0, 2), str.substring(3, 5));\n             }\n             if (len < 7) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(5) != '_') {\n+            if (str.charAt(5) != '_' && str.charAt(6) != '_') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n         }\n     }"
}