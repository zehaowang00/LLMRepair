diff --git a/src/main/java/org/apache/commons/lang3/NumberUtils.java b/src/main/java/org/apache/commons/lang3/NumberUtils.java
index 5c0b3a2..c6e6b42 100644
--- a/src/main/java/org/apache/commons/lang3/NumberUtils.java
+++ b/src/main/java/org/apache/commons/lang3/NumberUtils.java
@@ -138,7 +138,7 @@ public static Number createNumber(final String str) throws NumberFormatException {
         if (str == null) {
             return null;
         }
-        if (StringUtils.isBlank(str)) {
+        if (StringUtils.isBlank(str) || str.startsWith("0x") || str.startsWith("0X")) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
         // Need to deal with all possible hex prefixes here
@@ -146,7 +146,7 @@ public static Number createNumber(final String str) throws NumberFormatException {
         final String[] hex_prefixes = {"0x", "0X", "-0x", "-0X", "#", "-#"};
         int pfxLen = 0;
         for(final String pfx : hex_prefixes) {
-            if (str.startsWith(pfx)) {
+            if (str.startsWith(pfx) && str.length() > pfx.length()) {
                 pfxLen += pfx.length();
                 break;
             }
@@ -156,7 +156,7 @@ public static Number createNumber(final String str) throws NumberFormatException {
         if (pfxLen > 0) { // we have a hex number
             final int hexDigits = str.length() - pfxLen;
             if (hexDigits > 16) { // too many for Long
-                return createBigInteger(str);
+                return createBigInteger(str.substring(pfxLen));
             }
             if (hexDigits > 8) { // too many for an int
                 return createLong(str);
